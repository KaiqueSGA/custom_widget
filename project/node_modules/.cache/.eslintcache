[{"C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\index.js":"1","C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\App.js":"2","C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\widgets\\device_variables\\device_variables.js":"3","C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\classes\\device\\device.js":"4","C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\classes\\location\\location.js":"5"},{"size":320,"mtime":1681230266416,"results":"6","hashOfConfig":"7"},{"size":3430,"mtime":1681312698330,"results":"8","hashOfConfig":"7"},{"size":7342,"mtime":1681387172261,"results":"9","hashOfConfig":"7"},{"size":1424,"mtime":1681320173800,"results":"10","hashOfConfig":"7"},{"size":8697,"mtime":1681321640234,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bfdngm",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\index.js",["28","29"],[],"C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\App.js",["30","31","32","33","34","35","36"],[],"C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\widgets\\device_variables\\device_variables.js",["37","38"],[],"import './device_variables.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst { tago_device } = require('../../classes/device/device.js');\r\nconst { location_apis } = require('../../classes/location/location.js')\r\n\r\n\r\nfunction Device_variables(){\r\n  const [account_devices, set_account_devices] = useState([]);\r\n  const [device_variables, set_device_variables] = useState([]);\r\n\r\n  const device_methods = new tago_device();\r\n  const location_funcs = new location_apis();\r\n\r\n    window.TagoIO.onStart((widget) => {\r\n        window.widget = widget;\r\n    })\r\n    window.TagoIO.ready();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        device_methods.list()\r\n           .then((resp) => set_account_devices(resp))\r\n           .catch((err) => console.log(err))\r\n    },[])\r\n\r\n    \r\n    \r\n\r\n    return(\r\n        <>\r\n\r\n        <div className='div-mother'>\r\n        <div className='div-filho'>\r\n\r\n        <div className='text-div-mother'>\r\n         <h1>HELLO MY FRIEND!</h1>\r\n         <br/>\r\n         <h3>Choose the device that you wish see the variables:</h3>\r\n         </div>\r\n         <div className=\"input\">\r\n                    <select id=\"devices\" className =\"devices\">\r\n                        {account_devices.map((item) =>{\r\n                          try{\r\n                             return(\r\n                                 <option value={`${item.id},${item.name}`}> {item.name} </option>\r\n                             )\r\n                            }catch(err){\r\n                              console.log(err)\r\n                            }\r\n                                      \r\n                        })}\r\n                    </select>\r\n\r\n                    <button onClick={async() =>  { let request = await device_methods.get_device_variables(); set_device_variables(request.filter(obj => obj.variable === \"esn\")); }}> Show variables</button>\r\n                </div> \r\n\r\n\r\n\r\n                <div className='data_variables'>\r\n\r\n                    \r\n                            \r\n\r\n                        <table border=\"1\" className='variable_tables'>\r\n                            <tr>\r\n                                <td>Origin</td>\r\n                                <td>Coordinates</td>\r\n                                  \r\n                            </tr>\r\n                            {device_variables.map(data => {\r\n\r\n                                setTimeout(() => {// This delay is necessary because firt i need to create an element with the corresponding tag and after i catch the element through of id \r\n                                    const element_id = data.id;\r\n                                    const scope = data; \r\n\r\n                                    document.getElementById(data.id).addEventListener('change', async function(){\r\n                                      \r\n                                        if(this.value === \"MAC\"){ \r\n                                          let element_to_insert_the_new_value = document.getElementsByClassName(element_id)[0];\r\n                                          let element_to_insert_the_address = document.getElementsByClassName(element_id)[1]; \r\n\r\n                                          let mac_coordinates = await location_funcs.get_coordinates_through_mac_datas([\"mac0\", \"mac1\", \"mac2\"],scope); \r\n                                          let address = await location_funcs.get_address_through_coordinates(mac_coordinates.lat, mac_coordinates.lng);\r\n                                         \r\n                                          element_to_insert_the_new_value.innerText = `${mac_coordinates.lat},${mac_coordinates.lng}`;\r\n                                          element_to_insert_the_address.innerText = address;\r\n                                        }\r\n                                        else if(this.value === \"LBS\"){\r\n                                          let element_to_insert_the_new_value = document.getElementsByClassName(element_id)[0];\r\n                                          let element_to_insert_the_address = document.getElementsByClassName(element_id)[1];//Position 1 because i yhave 2 elements with the same tags, the second element will render the address\r\n\r\n                                          let lbs_coordinates = await location_funcs.get_coordinates_through_lbs_datas([\"lbs0\", \"lbs1\", \"lbs2\"],scope, scope.metadata.lbs_mode === \"LTE\" ?\"lte\" :\"gsm\" ); \r\n                                          let address = await location_funcs.get_address_through_coordinates(lbs_coordinates.lat, lbs_coordinates.lng);\r\n                                         \r\n                                          element_to_insert_the_new_value.innerText = `${lbs_coordinates.lat},${lbs_coordinates.lng}`; \r\n                                          element_to_insert_the_address.innerText = address;\r\n                                        }\r\n                                        else{ \r\n                                          let element_to_insert_the_coordinates = document.getElementsByClassName(element_id)[0];\r\n                                          let element_to_insert_the_address = document.getElementsByClassName(element_id)[1]; \r\n\r\n                                          let gps_coordinates = { lat:scope.metadata.lat, lng:scope.metadata.lon };\r\n                                          let address = await location_funcs.get_address_through_coordinates(gps_coordinates.lat, gps_coordinates.lng);\r\n                                          \r\n                                          element_to_insert_the_coordinates.innerText = `${gps_coordinates.lat},${gps_coordinates.lng}`;\r\n                                          element_to_insert_the_address.innerText = address;\r\n                                        \r\n                                        }\r\n\r\n                                    })\r\n\r\n                                },10);\r\n                            \r\n                              return( \r\n                                <tr>\r\n                                    <td className='data_variable'>{data.metadata.origin}</td>\r\n\r\n                                    <td className='b'>\r\n                                        <select id={data.id} className =\"coordinate-types\">\r\n                                            <option>Select the data type that you want to see...</option>\r\n                                            <option value=\"LBS\" >LBS coordinates</option>\r\n                                            <option value=\"MAC\" >MAC coordinates</option>\r\n                                            <option value=\"GPS\" >GPS coordinates</option>\r\n                                        </select>\r\n\r\n                                     \r\n                                     </td>\r\n\r\n                                     <td className={data.id}></td>\r\n                                     <td className={data.id}></td>\r\n\r\n                                </tr>\r\n                              )\r\n\r\n                               \r\n  \r\n\r\n\r\n                            })}\r\n\r\n                        </table>\r\n                        \r\n                            \r\n                    \r\n                </div>\r\n\r\n\r\n\r\n\r\n                </div> \r\n\r\n\r\n           \r\n\r\n            </div>         \r\n         \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { Device_variables };","C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\classes\\device\\device.js",[],[],"C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\src\\classes\\location\\location.js",["39","40"],[],{"ruleId":"41","severity":1,"message":"42","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":11},{"ruleId":"45","severity":1,"message":"46","line":10,"column":5,"nodeType":"47","messageId":"48","endLine":10,"endColumn":25},{"ruleId":"41","severity":1,"message":"49","line":2,"column":17,"nodeType":"43","messageId":"44","endLine":2,"endColumn":26},{"ruleId":"41","severity":1,"message":"50","line":5,"column":25,"nodeType":"43","messageId":"44","endLine":5,"endColumn":33},{"ruleId":"41","severity":1,"message":"51","line":8,"column":11,"nodeType":"43","messageId":"44","endLine":8,"endColumn":17},{"ruleId":"41","severity":1,"message":"52","line":16,"column":26,"nodeType":"43","messageId":"44","endLine":16,"endColumn":34},{"ruleId":"41","severity":1,"message":"53","line":20,"column":14,"nodeType":"43","messageId":"44","endLine":20,"endColumn":27},{"ruleId":"41","severity":1,"message":"54","line":22,"column":16,"nodeType":"43","messageId":"44","endLine":22,"endColumn":29},{"ruleId":"55","severity":1,"message":"56","line":54,"column":64,"nodeType":"57","messageId":"58","endLine":54,"endColumn":66},{"ruleId":"59","severity":1,"message":"60","line":28,"column":7,"nodeType":"61","endLine":28,"endColumn":9,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"56","line":46,"column":53,"nodeType":"57","messageId":"58","endLine":46,"endColumn":55},{"ruleId":"63","severity":1,"message":"64","line":8,"column":40,"nodeType":"65","messageId":"66","endLine":8,"endColumn":51},{"ruleId":"63","severity":1,"message":"64","line":38,"column":23,"nodeType":"65","messageId":"66","endLine":38,"endColumn":34},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Device_variables must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'useEffect' is defined but never used.","'Services' is assigned a value but never used.","'notify' is assigned a value but never used.","'setArray' is assigned a value but never used.","'list_response' is assigned a value but never used.","'esn_variables' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'device_methods'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",{"desc":"68","fix":"69"},"Update the dependencies array to be: [device_methods]",{"range":"70","text":"71"},[772,774],"[device_methods]"]