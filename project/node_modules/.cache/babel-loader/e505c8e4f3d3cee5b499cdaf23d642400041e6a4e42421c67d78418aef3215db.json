{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar axios_1 = __importDefault(require(\"axios\"));\nvar config_1 = __importDefault(require(\"../config\"));\nvar sleep_1 = __importDefault(require(\"../common/sleep\"));\nvar isBrowser_1 = __importDefault(require(\"./isBrowser\"));\nvar envParams_json_1 = __importDefault(require(\"./envParams.json\"));\nvar RequestInProgress_1 = require(\"../common/RequestInProgress\");\nvar Cache_1 = require(\"../common/Cache\");\n/**\r\n * Handle the TagoIO Response\r\n * @internal\r\n * @param result Axios Result\r\n */\nfunction resultHandler(result) {\n  if (!result.data) {\n    throw result.statusText;\n  }\n  if (result.status === 200 && result.config.url.includes(\"/data/export\")) {\n    return {\n      data: result.data\n    };\n  }\n  if (result.data.status !== true) {\n    return result.data.message || result.data.result || result.data;\n  }\n  return {\n    data: result.data.result\n  };\n}\n/**\r\n * Handle all request to TagoIO API\r\n * @internal\r\n * @param axiosObj Axios Object\r\n */\nfunction apiRequest(_x, _x2) {\n  return _apiRequest.apply(this, arguments);\n}\nfunction _apiRequest() {\n  _apiRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(axiosObj, cacheTTL) {\n    var objCached, banner, request, result, resulterror, i, _yield$request, data, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!cacheTTL) {\n              _context.next = 8;\n              break;\n            }\n            if (!(0, RequestInProgress_1.isRequestInProgress)(axiosObj)) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 4;\n            return (0, sleep_1.default)(100);\n          case 4:\n            return _context.abrupt(\"return\", apiRequest(axiosObj, cacheTTL));\n          case 5:\n            objCached = (0, Cache_1.getCache)(axiosObj);\n            if (!objCached) {\n              _context.next = 8;\n              break;\n            }\n            return _context.abrupt(\"return\", objCached);\n          case 8:\n            (0, RequestInProgress_1.addRequestInProgress)(axiosObj);\n            axiosObj.timeout = config_1.default.requestTimeout;\n            if ((0, isBrowser_1.default)()) {\n              // Prevent cache on Browsers\n              axiosObj.headers = _objectSpread(_objectSpread({}, axiosObj.headers), {}, {\n                Pragma: \"no-cache\",\n                \"Cache-Control\": \"no-cache\"\n              });\n            } else if (typeof process !== \"undefined\") {\n              banner = process.env.T_ANALYSIS_CONTEXT === \"tago-io\" ? \"(Running at TagoIO)\" : \"(External; Node.js/\".concat(process.version, \" \").concat(process.platform, \"/\").concat(process.arch, \")\");\n              axiosObj.headers = _objectSpread(_objectSpread({}, axiosObj.headers), {}, {\n                \"User-Agent\": \"TagoIO-SDK|JS|\".concat(envParams_json_1.default.version, \" \").concat(banner)\n              });\n            }\n            request = function request() {\n              return (0, axios_1.default)(axiosObj).then(resultHandler).catch(function (error) {\n                return {\n                  error: error\n                };\n              });\n            };\n            i = 1;\n          case 13:\n            if (!(i <= config_1.default.requestAttempts)) {\n              _context.next = 31;\n              break;\n            }\n            _context.next = 16;\n            return request();\n          case 16:\n            _yield$request = _context.sent;\n            data = _yield$request.data;\n            error = _yield$request.error;\n            if (error) {\n              _context.next = 22;\n              break;\n            }\n            result = data;\n            return _context.abrupt(\"break\", 31);\n          case 22:\n            if (error.response) {\n              resulterror = {\n                from: \"SERVER_RESPONSE\",\n                url: error.config.url,\n                method: String(error.config.method).toUpperCase(),\n                status: error.response.status,\n                code: error.code || \"UNKNOWN\",\n                statusText: error.response.statusText\n              };\n            } else {\n              resulterror = {\n                from: \"CLIENT_REQUEST\",\n                url: error.config.url,\n                method: String(error.config.method).toUpperCase(),\n                status: -1,\n                code: error.code || \"UNKNOWN\",\n                statusText: \"UNKNOWN\"\n              };\n            }\n            // ? Requests with client errors not retry.\n            if (!(error.response && (error.response.status >= 400 || error.response.status < 500))) {\n              _context.next = 26;\n              break;\n            }\n            resulterror = resultHandler(error.response);\n            return _context.abrupt(\"break\", 31);\n          case 26:\n            _context.next = 28;\n            return (0, sleep_1.default)(1500);\n          case 28:\n            i += 1;\n            _context.next = 13;\n            break;\n          case 31:\n            if (cacheTTL && result && !resulterror) {\n              (0, Cache_1.addCache)(axiosObj, result, cacheTTL);\n            }\n            (0, RequestInProgress_1.removeRequestInProgress)(axiosObj);\n            if (!(!result && resulterror)) {\n              _context.next = 35;\n              break;\n            }\n            throw resulterror;\n          case 35:\n            return _context.abrupt(\"return\", result);\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _apiRequest.apply(this, arguments);\n}\nexports.default = apiRequest;","map":{"version":3,"mappings":"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","names":["resultHandler","result","data","statusText","status","config","url","includes","message","apiRequest","axiosObj","cacheTTL","objCached","timeout","config_1","requestTimeout","headers","Pragma","process","banner","env","T_ANALYSIS_CONTEXT","version","platform","arch","envParams_json_1","request","then","catch","error","i","requestAttempts","response","resulterror","from","method","String","toUpperCase","code","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\infrastructure\\apiRequest.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport config from \"../config\";\r\nimport sleep from \"../common/sleep\";\r\nimport isBrowser from \"./isBrowser\";\r\nimport envParams from \"./envParams.json\";\r\nimport { addRequestInProgress, isRequestInProgress, removeRequestInProgress } from \"../common/RequestInProgress\";\r\nimport { addCache, getCache } from \"../common/Cache\";\r\n\r\n/**\r\n * Handle the TagoIO Response\r\n * @internal\r\n * @param result Axios Result\r\n */\r\nfunction resultHandler(result: AxiosResponse) {\r\n  if (!result.data) {\r\n    throw result.statusText;\r\n  }\r\n\r\n  if (result.status === 200 && result.config.url.includes(\"/data/export\")) {\r\n    return { data: result.data };\r\n  }\r\n\r\n  if (result.data.status !== true) {\r\n    return result.data.message || result.data.result || result.data;\r\n  }\r\n\r\n  return { data: result.data.result };\r\n}\r\n\r\n/**\r\n * Handle all request to TagoIO API\r\n * @internal\r\n * @param axiosObj Axios Object\r\n */\r\nasync function apiRequest(axiosObj: AxiosRequestConfig, cacheTTL?: number): Promise<any> {\r\n  if (cacheTTL) {\r\n    if (isRequestInProgress(axiosObj)) {\r\n      await sleep(100);\r\n      return apiRequest(axiosObj, cacheTTL);\r\n    }\r\n\r\n    const objCached = getCache(axiosObj);\r\n    if (objCached) {\r\n      return objCached;\r\n    }\r\n  }\r\n\r\n  addRequestInProgress(axiosObj);\r\n\r\n  axiosObj.timeout = config.requestTimeout;\r\n\r\n  if (isBrowser()) {\r\n    // Prevent cache on Browsers\r\n    axiosObj.headers = {\r\n      ...axiosObj.headers,\r\n      Pragma: \"no-cache\",\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n  } else if (typeof process !== \"undefined\") {\r\n    const banner =\r\n      process.env.T_ANALYSIS_CONTEXT === \"tago-io\"\r\n        ? `(Running at TagoIO)`\r\n        : `(External; Node.js/${process.version} ${process.platform}/${process.arch})`;\r\n\r\n    axiosObj.headers = {\r\n      ...axiosObj.headers,\r\n      \"User-Agent\": `TagoIO-SDK|JS|${envParams.version} ${banner}`,\r\n    };\r\n  }\r\n\r\n  const request = () => {\r\n    return axios(axiosObj)\r\n      .then(resultHandler)\r\n      .catch((error) => ({ error }));\r\n  };\r\n\r\n  let result;\r\n  let resulterror;\r\n  for (let i = 1; i <= config.requestAttempts; i += 1) {\r\n    const { data, error } = await request();\r\n    if (!error) {\r\n      result = data;\r\n      break;\r\n    }\r\n\r\n    if (error.response) {\r\n      resulterror = {\r\n        from: \"SERVER_RESPONSE\",\r\n        url: error.config.url,\r\n        method: String(error.config.method).toUpperCase(),\r\n        status: error.response.status,\r\n        code: error.code || \"UNKNOWN\",\r\n        statusText: error.response.statusText,\r\n      };\r\n    } else {\r\n      resulterror = {\r\n        from: \"CLIENT_REQUEST\",\r\n        url: error.config.url,\r\n        method: String(error.config.method).toUpperCase(),\r\n        status: -1,\r\n        code: error.code || \"UNKNOWN\",\r\n        statusText: \"UNKNOWN\",\r\n      };\r\n    }\r\n\r\n    // ? Requests with client errors not retry.\r\n    if (error.response && (error.response.status >= 400 || error.response.status < 500)) {\r\n      resulterror = resultHandler(error.response);\r\n      break;\r\n    }\r\n\r\n    await sleep(1500);\r\n  }\r\n\r\n  if (cacheTTL && result && !resulterror) {\r\n    addCache(axiosObj, result, cacheTTL);\r\n  }\r\n\r\n  removeRequestInProgress(axiosObj);\r\n\r\n  if (!result && resulterror) {\r\n    throw resulterror;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default apiRequest;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}