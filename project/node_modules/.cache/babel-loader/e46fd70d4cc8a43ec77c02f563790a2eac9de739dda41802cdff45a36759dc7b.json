{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = exports.convertLayerData = void 0;\nconst common_1 = require(\"./common\");\nfunction convertLayerData(widget, oldWidgetData) {\n  const fields = [];\n  const layerVariable = widget?.display?.layer_variable;\n  // Map old keys (Origin id + Variable name) to new key (Origin)\n  const mapOldToNew = {};\n  for (const dt of widget.data) {\n    if (dt?.variables?.[0] && (layerVariable?.origin?.id !== dt?.origin || layerVariable?.variable !== dt?.variables?.[0])) {\n      const key = `${dt?.origin}${dt?.variables?.[0]}`;\n      mapOldToNew[key] = dt?.origin;\n    }\n  }\n  for (const x of oldWidgetData) {\n    if (x?.data?.variables?.[0] && x?.data?.origin === layerVariable?.origin?.id && x?.data?.variables?.[0] === layerVariable?.variable) {\n      for (const y of x?.result) {\n        const oldFixedPos = y?.metadata?.fixed_position || {};\n        const keysFixedPos = Object.keys(oldFixedPos);\n        const newFixedPos = {\n          ...oldFixedPos\n        };\n        for (const k of keysFixedPos) {\n          const newK = mapOldToNew?.[k];\n          if (newK) {\n            newFixedPos[newK] = {\n              ...oldFixedPos[k]\n            };\n          }\n        }\n        fields.push({\n          ...y,\n          metadata: {\n            ...y?.metadata,\n            fixed_position: newFixedPos\n          }\n        });\n      }\n    }\n  }\n  return fields;\n}\nexports.convertLayerData = convertLayerData;\nfunction convert(oldWidget) {\n  const oldDisplay = oldWidget.display || {};\n  const newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      // Image marker display properties\n      allow_add: oldDisplay?.allow_add || true,\n      allow_edit: oldDisplay?.allow_move || true,\n      allow_edit_layers: oldDisplay?.allow_edit_layers || true,\n      allow_embed_url: !!oldDisplay?.allow_embed_url,\n      allow_image_url: !!oldDisplay?.allow_image_url,\n      allow_label: !!oldDisplay?.allow_label,\n      allow_pin_color: !!oldDisplay?.allow_pin_color,\n      allow_remove: oldDisplay?.allow_remove || true,\n      allow_zoom: false,\n      connect_markers: !!oldDisplay?.connect_markers,\n      filter_by: \"device\",\n      filter_truncate_direction: \"end\",\n      geofence: {\n        enable_user: false,\n        events_type: \"static\",\n        limit: 100,\n        type_enable_user: \"all\"\n      },\n      infobox_config: {\n        behavior: \"landscape\",\n        date_format: \"\",\n        object_fit: \"contain\",\n        position: \"top\",\n        show_one_infobox: true\n      },\n      layer: oldDisplay?.layer_variable || {},\n      layer_sub_type: oldDisplay?.layer_sub_type === \"basic\" ? \"basic\" : \"advanced\",\n      markdown_box: \"\",\n      max_points: oldDisplay?.max_points || 1,\n      object_fit: \"contain\",\n      occupy_whole_widget: false,\n      show_filter: false,\n      show_last_update: false,\n      show_polyline: false,\n      show_side_value: false,\n      theme: {\n        color: {\n          background: null,\n          button_background: null,\n          button_icon: null,\n          header: null,\n          infobox_background: null,\n          infobox_header: null,\n          infobox_text: null,\n          zoom_button_background: null,\n          zoom_button_border: null,\n          zoom_button_icon: null\n        }\n      },\n      tools_title: oldDisplay?.title_window || \"Tools\",\n      // Default properties for widgets\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      variables: []\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"image_marker\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data; // transfers the .data property\n    newStructure.display.variables = []; // creates the variable array\n    for (const item of oldWidget.data) {\n      if (item.is_hide) {\n        // is_hide items are not visible in the columns, so we cannot\n        // put them in the variables array\n        continue;\n      }\n      for (const variable of item.variables) {\n        const key = `${item.origin}${variable}`;\n        const alias = oldDisplay.vars_labels?.[key];\n        const numberFormat = oldDisplay.vars_format?.[key];\n        const formula = (0, common_1.convertFormula)(oldDisplay.vars_formula?.[key]);\n        const varConditions = oldDisplay?.vars_conditions?.[key];\n        const varUrl = oldDisplay?.vars_url?.[key];\n        const varImage = oldDisplay?.vars_images?.[key];\n        const varEmbed = oldDisplay?.vars_embed?.[key];\n        const externalUrl = varUrl ? {\n          ...(varUrl?.url ? {\n            external_url: varUrl?.url\n          } : {}),\n          ...(varUrl?.alias ? {\n            external_url_label: varUrl?.alias\n          } : {})\n        } : null;\n        const urlType = oldDisplay?.vars_link_type?.[key];\n        newStructure.display.variables.push({\n          origin: item.origin,\n          override_color: !oldDisplay?.override_color,\n          url_type: urlType || \"image\",\n          variable,\n          ...(alias ? {\n            alias\n          } : {}),\n          ...(numberFormat ? {\n            number_format: numberFormat\n          } : {}),\n          ...(formula ? {\n            formula\n          } : {}),\n          ...(varConditions ? {\n            color_conditions: varConditions\n          } : {}),\n          ...(externalUrl ? {\n            ...externalUrl\n          } : {}),\n          ...(varImage ? {\n            img_pin: varImage\n          } : {}),\n          ...(varEmbed ? {\n            embed: varEmbed\n          } : {})\n        });\n      }\n    }\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  const isOld = !!(widget?.display?.vars_labels || widget?.display?.vars_formula || widget?.display?.numberformat || widget?.display?.watermark !== undefined);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["convertLayerData","widget","oldWidgetData","fields","layerVariable","display","layer_variable","mapOldToNew","dt","data","variables","origin","id","variable","key","x","y","result","oldFixedPos","metadata","fixed_position","keysFixedPos","Object","keys","newFixedPos","k","newK","push","exports","convert","oldWidget","oldDisplay","newStructure","dashboard","allow_add","allow_edit","allow_move","allow_edit_layers","allow_embed_url","allow_image_url","allow_label","allow_pin_color","allow_remove","allow_zoom","connect_markers","filter_by","filter_truncate_direction","geofence","enable_user","events_type","limit","type_enable_user","infobox_config","behavior","date_format","object_fit","position","show_one_infobox","layer","layer_sub_type","markdown_box","max_points","occupy_whole_widget","show_filter","show_last_update","show_polyline","show_side_value","theme","color","background","button_background","button_icon","header","infobox_background","infobox_header","infobox_text","zoom_button_background","zoom_button_border","zoom_button_icon","tools_title","title_window","header_buttons","help","label","realtime","type","Array","isArray","item","is_hide","alias","vars_labels","numberFormat","vars_format","formula","vars_formula","varConditions","vars_conditions","varUrl","vars_url","varImage","vars_images","varEmbed","vars_embed","externalUrl","url","external_url","external_url_label","urlType","vars_link_type","override_color","url_type","number_format","color_conditions","img_pin","embed","isOldStructure","isOld","numberformat","watermark","undefined"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\imagemarker.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old IMAGE MARKER to new IMAGE MARKER\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\nimport { convertFormula } from \"./common\";\n\nexport function convertLayerData(widget: any, oldWidgetData: any) {\n  const fields = [];\n  const layerVariable = widget?.display?.layer_variable;\n  // Map old keys (Origin id + Variable name) to new key (Origin)\n  const mapOldToNew: any = {};\n  for (const dt of widget.data) {\n    if (\n      dt?.variables?.[0] &&\n      (layerVariable?.origin?.id !== dt?.origin || layerVariable?.variable !== dt?.variables?.[0])\n    ) {\n      const key = `${dt?.origin}${dt?.variables?.[0]}`;\n      mapOldToNew[key] = dt?.origin;\n    }\n  }\n\n  for (const x of oldWidgetData) {\n    if (\n      x?.data?.variables?.[0] &&\n      x?.data?.origin === layerVariable?.origin?.id &&\n      x?.data?.variables?.[0] === layerVariable?.variable\n    ) {\n      for (const y of x?.result) {\n        const oldFixedPos = y?.metadata?.fixed_position || {};\n        const keysFixedPos = Object.keys(oldFixedPos);\n        const newFixedPos = { ...oldFixedPos };\n        for (const k of keysFixedPos) {\n          const newK = mapOldToNew?.[k];\n          if (newK) {\n            newFixedPos[newK] = { ...oldFixedPos[k] };\n          }\n        }\n        fields.push({\n          ...y,\n          metadata: {\n            ...y?.metadata,\n            fixed_position: newFixedPos,\n          },\n        });\n      }\n    }\n  }\n  return fields;\n}\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      // Image marker display properties\n      allow_add: oldDisplay?.allow_add || true,\n      allow_edit: oldDisplay?.allow_move || true,\n      allow_edit_layers: oldDisplay?.allow_edit_layers || true,\n      allow_embed_url: !!oldDisplay?.allow_embed_url,\n      allow_image_url: !!oldDisplay?.allow_image_url,\n      allow_label: !!oldDisplay?.allow_label,\n      allow_pin_color: !!oldDisplay?.allow_pin_color,\n      allow_remove: oldDisplay?.allow_remove || true,\n      allow_zoom: false,\n      connect_markers: !!oldDisplay?.connect_markers,\n      filter_by: \"device\",\n      filter_truncate_direction: \"end\",\n      geofence: {\n        enable_user: false,\n        events_type: \"static\",\n        limit: 100,\n        type_enable_user: \"all\",\n      },\n      infobox_config: {\n        behavior: \"landscape\",\n        date_format: \"\",\n        object_fit: \"contain\",\n        position: \"top\",\n        show_one_infobox: true,\n      },\n      layer: oldDisplay?.layer_variable || {},\n      layer_sub_type: oldDisplay?.layer_sub_type === \"basic\" ? \"basic\" : \"advanced\",\n      markdown_box: \"\",\n      max_points: oldDisplay?.max_points || 1,\n      object_fit: \"contain\",\n      occupy_whole_widget: false,\n      show_filter: false,\n      show_last_update: false,\n      show_polyline: false,\n      show_side_value: false,\n      theme: {\n        color: {\n          background: null,\n          button_background: null,\n          button_icon: null,\n          header: null,\n          infobox_background: null,\n          infobox_header: null,\n          infobox_text: null,\n          zoom_button_background: null,\n          zoom_button_border: null,\n          zoom_button_icon: null,\n        },\n      },\n      tools_title: oldDisplay?.title_window || \"Tools\",\n\n      // Default properties for widgets\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      variables: [],\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"image_marker\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data; // transfers the .data property\n\n    newStructure.display.variables = []; // creates the variable array\n\n    for (const item of oldWidget.data) {\n      if (item.is_hide) {\n        // is_hide items are not visible in the columns, so we cannot\n        // put them in the variables array\n        continue;\n      }\n\n      for (const variable of item.variables) {\n        const key = `${item.origin}${variable}`;\n\n        const alias = oldDisplay.vars_labels?.[key];\n        const numberFormat = oldDisplay.vars_format?.[key];\n        const formula = convertFormula(oldDisplay.vars_formula?.[key]);\n\n        const varConditions = oldDisplay?.vars_conditions?.[key];\n        const varUrl = oldDisplay?.vars_url?.[key];\n        const varImage = oldDisplay?.vars_images?.[key];\n        const varEmbed = oldDisplay?.vars_embed?.[key];\n\n        const externalUrl = varUrl\n          ? {\n              ...(varUrl?.url ? { external_url: varUrl?.url } : {}),\n              ...(varUrl?.alias ? { external_url_label: varUrl?.alias } : {}),\n            }\n          : null;\n\n        const urlType = oldDisplay?.vars_link_type?.[key];\n\n        newStructure.display.variables.push({\n          origin: item.origin,\n          override_color: !oldDisplay?.override_color,\n          url_type: urlType || \"image\",\n          variable,\n          ...(alias ? { alias } : {}),\n          ...(numberFormat ? { number_format: numberFormat } : {}),\n          ...(formula ? { formula } : {}),\n          ...(varConditions ? { color_conditions: varConditions } : {}),\n          ...(externalUrl ? { ...externalUrl } : {}),\n          ...(varImage ? { img_pin: varImage } : {}),\n          ...(varEmbed ? { embed: varEmbed } : {}),\n        });\n      }\n    }\n  }\n\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(\n    widget?.display?.vars_labels ||\n    widget?.display?.vars_formula ||\n    widget?.display?.numberformat ||\n    widget?.display?.watermark !== undefined\n  );\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}