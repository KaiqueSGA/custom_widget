{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nvar common_1 = require(\"./common\");\nvar convertFields_1 = require(\"./convertFields\");\nfunction convert(oldWidget) {\n  var _oldDisplay$form;\n  var oldDisplay = oldWidget.display || {};\n  var newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      buttons: [(0, convertFields_1.convertSubmitButton)(oldDisplay, oldWidget === null || oldWidget === void 0 ? void 0 : oldWidget.analysis_run)],\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      sections: [],\n      theme: {\n        color: {\n          background: null,\n          field: null,\n          header: null\n        }\n      }\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"form\"\n  };\n  var section = {\n    description: \"\",\n    fields: [],\n    id: (0, common_1.generateWidgetItemId)(),\n    show_border: false,\n    show_caption: false,\n    title: \"\"\n  };\n  var fieldsKeys = Object.keys((oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$form = oldDisplay.form) === null || _oldDisplay$form === void 0 ? void 0 : _oldDisplay$form.fields) || []);\n  for (var _i = 0, _fieldsKeys = fieldsKeys; _i < _fieldsKeys.length; _i++) {\n    var _oldDisplay$form2, _oldDisplay$form3;\n    var key = _fieldsKeys[_i];\n    var oldField = oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$form2 = oldDisplay.form) === null || _oldDisplay$form2 === void 0 ? void 0 : _oldDisplay$form2.fields[key];\n    var visibilityConditions = oldField !== null && oldField !== void 0 && oldField.visibility_conditions && Array.isArray(oldField === null || oldField === void 0 ? void 0 : oldField.visibility_conditions) ? oldField === null || oldField === void 0 ? void 0 : oldField.visibility_conditions.map(function (e) {\n      return {\n        condition: e === null || e === void 0 ? void 0 : e.condition,\n        field: \"\".concat(e === null || e === void 0 ? void 0 : e.variable).concat(e === null || e === void 0 ? void 0 : e.origin),\n        value: e === null || e === void 0 ? void 0 : e.value\n      };\n    }) : [];\n    /**\r\n     * Old input form only use one field per variable,\r\n     * so there is no problem to use his key as an id\r\n     * when some fields use the id to reference it, it\r\n     * will be easier to apply\r\n     */\n    var field = _objectSpread(_objectSpread({}, oldField), {}, {\n      id: key,\n      visibility_conditions: visibilityConditions\n    });\n    var convertedField = (0, convertFields_1.convertField)(field, oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$form3 = oldDisplay.form) === null || _oldDisplay$form3 === void 0 ? void 0 : _oldDisplay$form3.show_map);\n    if (convertedField) {\n      section.fields.push(convertedField);\n    }\n  }\n  newStructure.display.sections.push(section);\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3, _widget$display4, _widget$display5;\n  var isOld = !!(!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.buttons) || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.form || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.input_type || widget !== null && widget !== void 0 && (_widget$display4 = widget.display) !== null && _widget$display4 !== void 0 && _widget$display4.bypass_bucket || widget !== null && widget !== void 0 && (_widget$display5 = widget.display) !== null && _widget$display5 !== void 0 && _widget$display5.label_submit);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["convert","oldWidget","oldDisplay","display","newStructure","dashboard","buttons","analysis_run","header_buttons","help","sections","theme","color","background","field","header","id","label","realtime","type","section","description","fields","show_border","show_caption","title","fieldsKeys","Object","keys","form","key","oldField","visibilityConditions","visibility_conditions","Array","isArray","map","e","condition","variable","origin","value","convertedField","show_map","push","data","exports","isOldStructure","widget","isOld","input_type","bypass_bucket","label_submit"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\inputform.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\r\n// * What is this file?\r\n//     Migration of old INPUT FORM to new INPUT FORM\r\n// ? ====================================================================================\r\nimport { WidgetInfo } from \"../Account/dashboards.types\";\r\nimport { generateWidgetItemId } from \"./common\";\r\nimport { convertField, convertSubmitButton } from \"./convertFields\";\r\n\r\nexport function convert(oldWidget: any): WidgetInfo {\r\n  const oldDisplay = oldWidget.display || {};\r\n\r\n  const newStructure: any = {\r\n    dashboard: oldWidget.dashboard,\r\n    display: {\r\n      buttons: [convertSubmitButton(oldDisplay, oldWidget?.analysis_run)],\r\n      header_buttons: oldDisplay.header_buttons || [],\r\n      help: oldDisplay.help || \"\",\r\n      sections: [],\r\n      theme: {\r\n        color: {\r\n          background: null,\r\n          field: null,\r\n          header: null,\r\n        },\r\n      },\r\n    },\r\n    id: oldWidget.id,\r\n    label: oldWidget.label,\r\n    realtime: null,\r\n    type: \"form\",\r\n  };\r\n\r\n  const section: any = {\r\n    description: \"\",\r\n    fields: [],\r\n    id: generateWidgetItemId(),\r\n    show_border: false,\r\n    show_caption: false,\r\n    title: \"\",\r\n  };\r\n\r\n  const fieldsKeys = Object.keys(oldDisplay?.form?.fields || []);\r\n\r\n  for (const key of fieldsKeys) {\r\n    const oldField = oldDisplay?.form?.fields[key];\r\n    const visibilityConditions =\r\n      oldField?.visibility_conditions && Array.isArray(oldField?.visibility_conditions)\r\n        ? oldField?.visibility_conditions.map((e: any) => ({\r\n            condition: e?.condition,\r\n            field: `${e?.variable}${e?.origin}`,\r\n            value: e?.value,\r\n          }))\r\n        : [];\r\n\r\n    /**\r\n     * Old input form only use one field per variable,\r\n     * so there is no problem to use his key as an id\r\n     * when some fields use the id to reference it, it\r\n     * will be easier to apply\r\n     */\r\n    const field = {\r\n      ...oldField,\r\n      id: key,\r\n      visibility_conditions: visibilityConditions,\r\n    };\r\n\r\n    const convertedField = convertField(field, oldDisplay?.form?.show_map);\r\n\r\n    if (convertedField) {\r\n      section.fields.push(convertedField);\r\n    }\r\n  }\r\n\r\n  newStructure.display.sections.push(section);\r\n\r\n  if (Array.isArray(oldWidget.data)) {\r\n    newStructure.data = oldWidget.data;\r\n  }\r\n\r\n  return newStructure;\r\n}\r\n\r\nexport function isOldStructure(widget: any) {\r\n  const isOld = !!(\r\n    !widget?.display?.buttons ||\r\n    widget?.display?.form ||\r\n    widget?.display?.input_type ||\r\n    widget?.display?.bypass_bucket ||\r\n    widget?.display?.label_submit\r\n  );\r\n\r\n  return isOld;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}