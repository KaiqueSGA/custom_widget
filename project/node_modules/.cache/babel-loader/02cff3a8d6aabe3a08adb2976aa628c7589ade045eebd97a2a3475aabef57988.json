{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass RouterService {\n  constructor(service) {\n    this.whenList = [];\n    this.serviceFunction = service;\n  }\n  addFunc(func) {\n    this.whenList.push(func);\n  }\n  /**\r\n   * Return true if specific variables are in the scope.\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\n  whenVariables(variable) {\n    const variable_list = Array.isArray(variable) ? variable : [variable];\n    this.addFunc((scope, environment) => !!scope.find(x => variable_list.includes(x?.variable)));\n    return this;\n  }\n  /**\r\n   * Return true if variable is included in any variable name in the scope.\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\n  whenVariableLike(variable) {\n    this.addFunc((scope, environment) => !!scope.find(x => x?.variable?.includes(variable)));\n    return this;\n  }\n  /**\r\n   * Return true if value is present for any variable in the scope\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\n  whenValues(values) {\n    const values_list = Array.isArray(values) ? values : [values];\n    this.addFunc((scope, environment) => !!scope.find(x => values_list.includes(x?.value)));\n    return this;\n  }\n  /**\r\n   * Return true if serie is present for any variable in the scope\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\n  whenSeries(series) {\n    const series_list = Array.isArray(series) ? series : [series];\n    this.addFunc((scope, environment) => !!scope.find(x => series_list.includes(x?.serie)));\n    return this;\n  }\n  /**\r\n   * Return true if input form ID is the same\r\n   * Information is available if Analysis is triggered by an input widget.\r\n   */\n  whenInputFormID(id) {\n    this.addFunc((scope, environment) => !!scope.find(x => x.input_form_button_id === id));\n    return this;\n  }\n  /**\r\n   * Return true if a parameter in the scope exists\r\n   * Useful to be used with Device List widget.\r\n   */\n  whenParameterExists(parameter) {\n    this.addFunc((scope, environment) => !!scope.find(x => parameter in x));\n    return this;\n  }\n  /**\r\n   * Return true if widget_exec is the same\r\n   * Information is available if Analysis is triggered by an widget.\r\n   */\n  whenWidgetExec(widget_exec) {\n    this.addFunc((scope, environment) => environment._widget_exec === widget_exec);\n    return this;\n  }\n  /**\r\n   * Return true if action_when is the same\r\n   * Information is available if Analysis is triggered by an action.\r\n   */\n  whenActionWhen(action_when) {\n    this.addFunc((scope, environment) => environment._action_when === action_when);\n    return this;\n  }\n  /**\r\n   * Return true if action_type is the same\r\n   * Information is available if Analysis is triggered by an action.\r\n   */\n  whenActionType(action_type) {\n    this.addFunc((scope, environment) => environment._action_type === action_type);\n    return this;\n  }\n  /**\r\n   * Return true if input form ID is the same\r\n   * Information is always available.\r\n   */\n  whenEnv(key, value) {\n    this.addFunc((scope, environment) => environment[key] === value);\n    return this;\n  }\n  /**\r\n   * Start verifying if all when conditions are true.\r\n   */\n  verifyConditionsTrue(scope, environment) {\n    for (const func of this.whenList) {\n      const result = func(scope, environment);\n      if (!result) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\r\n   *\r\n   * @param router_params\r\n   * @returns\r\n   */\n  runService(router_params) {\n    return this.serviceFunction(router_params);\n  }\n  getServiceName() {\n    return this.serviceFunction.name;\n  }\n}\nexports.default = RouterService;","map":{"version":3,"mappings":";;;;;AAEA,MAAMA,aAAa;EAGjBC,YAAYC,OAAiB;IADrB,aAAQ,GAAe,EAAE;IAE/B,IAAI,CAACC,eAAe,GAAGD,OAAO;EAChC;EAEQE,OAAO,CAACC,IAAc;IAC5B,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;EAC1B;EACA;;;;EAIOG,aAAa,CAACC,QAA2B;IAC9C,MAAMC,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;IACrE,IAAI,CAACL,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKN,aAAa,CAACO,QAAQ,CAACD,CAAC,EAAEP,QAAQ,CAAC,CAAC,CAAC;IAC7G,OAAO,IAAI;EACb;EAEA;;;;EAIOS,gBAAgB,CAACT,QAAgB;IACtC,IAAI,CAACL,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKA,CAAC,EAAEP,QAAQ,EAAEQ,QAAQ,CAACR,QAAQ,CAAC,CAAC,CAAC;IACzG,OAAO,IAAI;EACb;EAEA;;;;EAIOU,UAAU,CAACC,MAAiE;IACjF,MAAMC,WAAW,GAAGV,KAAK,CAACC,OAAO,CAACQ,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;IAC7D,IAAI,CAAChB,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKK,WAAW,CAACJ,QAAQ,CAACD,CAAC,EAAEM,KAAK,CAAC,CAAC,CAAC;IACxG,OAAO,IAAI;EACb;EAEA;;;;EAIOC,UAAU,CAACC,MAAyB;IACzC,MAAMC,WAAW,GAAGd,KAAK,CAACC,OAAO,CAACY,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;IAC7D,IAAI,CAACpB,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKS,WAAW,CAACR,QAAQ,CAACD,CAAC,EAAEU,KAAK,CAAC,CAAC,CAAC;IACxG,OAAO,IAAI;EACb;EAEA;;;;EAIOC,eAAe,CAACC,EAAU;IAC/B,IAAI,CAACxB,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACa,oBAAoB,KAAKD,EAAE,CAAC,CAAC;IACvG,OAAO,IAAI;EACb;EAEA;;;;EAIOE,mBAAmB,CAACC,SAAiB;IAC1C,IAAI,CAAC3B,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAK,CAAC,CAACD,KAAK,CAACE,IAAI,CAAEC,CAAM,IAAKe,SAAS,IAAIf,CAAC,CAAC,CAAC;IACxF,OAAO,IAAI;EACb;EAEA;;;;EAIOgB,cAAc,CAACC,WAAyC;IAC7D,IAAI,CAAC7B,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAKA,WAAW,CAACoB,YAAY,KAAKD,WAAW,CAAC;IACxF,OAAO,IAAI;EACb;EAEA;;;;EAIOE,cAAc,CAACC,WAAgF;IACpG,IAAI,CAAChC,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAKA,WAAW,CAACuB,YAAY,KAAKD,WAAW,CAAC;IACxF,OAAO,IAAI;EACb;EAEA;;;;EAIOE,cAAc,CAACC,WAAgD;IACpE,IAAI,CAACnC,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAKA,WAAW,CAAC0B,YAAY,KAAKD,WAAW,CAAC;IACxF,OAAO,IAAI;EACb;EAEA;;;;EAIOE,OAAO,CAACC,GAAW,EAAEpB,KAAa;IACvC,IAAI,CAAClB,OAAO,CAAC,CAACS,KAAU,EAAEC,WAAgB,KAAKA,WAAW,CAAC4B,GAAG,CAAC,KAAKpB,KAAK,CAAC;IAC1E,OAAO,IAAI;EACb;EAEA;;;EAGOqB,oBAAoB,CAAC9B,KAAU,EAAEC,WAAgB;IACtD,KAAK,MAAMT,IAAI,IAAI,IAAI,CAACC,QAAQ,EAAE;MAChC,MAAMsC,MAAM,GAAGvC,IAAI,CAACQ,KAAK,EAAEC,WAAW,CAAC;MACvC,IAAI,CAAC8B,MAAM,EAAE;QACX,OAAO,KAAK;;;IAIhB,OAAO,IAAI;EACb;EAEA;;;;;EAKOC,UAAU,CAACC,aAAgC;IAChD,OAAO,IAAI,CAAC3C,eAAe,CAAC2C,aAAa,CAAC;EAC5C;EAEOC,cAAc;IACnB,OAAO,IAAI,CAAC5C,eAAe,CAAC6C,IAAI;EAClC;;AAGFC,kBAAejD,aAAa","names":["RouterService","constructor","service","serviceFunction","addFunc","func","whenList","push","whenVariables","variable","variable_list","Array","isArray","scope","environment","find","x","includes","whenVariableLike","whenValues","values","values_list","value","whenSeries","series","series_list","serie","whenInputFormID","id","input_form_button_id","whenParameterExists","parameter","whenWidgetExec","widget_exec","_widget_exec","whenActionWhen","action_when","_action_when","whenActionType","action_type","_action_type","whenEnv","key","verifyConditionsTrue","result","runService","router_params","getServiceName","name","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Utils\\router\\service.ts"],"sourcesContent":["import { RouterConstructor } from \"./router\";\r\n\r\nclass RouterService {\r\n  private serviceFunction: Function;\r\n  private whenList: Function[] = [];\r\n  constructor(service: Function) {\r\n    this.serviceFunction = service;\r\n  }\r\n\r\n  private addFunc(func: Function) {\r\n    this.whenList.push(func);\r\n  }\r\n  /**\r\n   * Return true if specific variables are in the scope.\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\r\n  public whenVariables(variable: string | string[]) {\r\n    const variable_list = Array.isArray(variable) ? variable : [variable];\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => variable_list.includes(x?.variable)));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if variable is included in any variable name in the scope.\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\r\n  public whenVariableLike(variable: string) {\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => x?.variable?.includes(variable)));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if value is present for any variable in the scope\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\r\n  public whenValues(values: string | boolean | number | (string | boolean | number)[]) {\r\n    const values_list = Array.isArray(values) ? values : [values];\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => values_list.includes(x?.value)));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if serie is present for any variable in the scope\r\n   * Information is available if Analysis is triggered by an widget or action.\r\n   */\r\n  public whenSeries(series: string | string[]) {\r\n    const series_list = Array.isArray(series) ? series : [series];\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => series_list.includes(x?.serie)));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if input form ID is the same\r\n   * Information is available if Analysis is triggered by an input widget.\r\n   */\r\n  public whenInputFormID(id: string) {\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => x.input_form_button_id === id));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if a parameter in the scope exists\r\n   * Useful to be used with Device List widget.\r\n   */\r\n  public whenParameterExists(parameter: string) {\r\n    this.addFunc((scope: any, environment: any) => !!scope.find((x: any) => parameter in x));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if widget_exec is the same\r\n   * Information is available if Analysis is triggered by an widget.\r\n   */\r\n  public whenWidgetExec(widget_exec: \"insert\" | \"delete\" | \"edit\") {\r\n    this.addFunc((scope: any, environment: any) => environment._widget_exec === widget_exec);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if action_when is the same\r\n   * Information is available if Analysis is triggered by an action.\r\n   */\r\n  public whenActionWhen(action_when: \"create\" | \"update\" | \"delete\" | \"mqtt_connect\" | \"mqtt_disconnect\") {\r\n    this.addFunc((scope: any, environment: any) => environment._action_when === action_when);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if action_type is the same\r\n   * Information is available if Analysis is triggered by an action.\r\n   */\r\n  public whenActionType(action_type: \"resource\" | \"condition\" | \"delete\") {\r\n    this.addFunc((scope: any, environment: any) => environment._action_type === action_type);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return true if input form ID is the same\r\n   * Information is always available.\r\n   */\r\n  public whenEnv(key: string, value: string) {\r\n    this.addFunc((scope: any, environment: any) => environment[key] === value);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Start verifying if all when conditions are true.\r\n   */\r\n  public verifyConditionsTrue(scope: any, environment: any) {\r\n    for (const func of this.whenList) {\r\n      const result = func(scope, environment);\r\n      if (!result) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param router_params\r\n   * @returns\r\n   */\r\n  public runService(router_params: RouterConstructor) {\r\n    return this.serviceFunction(router_params);\r\n  }\r\n\r\n  public getServiceName() {\r\n    return this.serviceFunction.name;\r\n  }\r\n}\r\n\r\nexport default RouterService;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}