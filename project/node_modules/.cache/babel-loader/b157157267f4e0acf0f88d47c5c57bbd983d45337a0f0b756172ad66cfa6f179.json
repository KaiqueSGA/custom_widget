{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nvar convertFormula_1 = __importDefault(require(\"./common/convertFormula\"));\nvar layoutMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nfunction convert(oldWidget) {\n  var oldDisplay = oldWidget.display || {};\n  var newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      show_units: !!(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.show_unit),\n      show_values: !(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.hide_values),\n      show_variables: !(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.hide_variables),\n      variables: []\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"icon\"\n  };\n  var variables = [];\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data; // transfers the .data property\n    var _iterator = _createForOfIteratorHelper(oldWidget.data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (item.is_hide) {\n          // is_hide items are not visible in the columns, so we cannot\n          // put them in the variables array\n          continue;\n        }\n        var _iterator2 = _createForOfIteratorHelper(item.variables),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _oldDisplay$vars_form, _oldDisplay$vars_labe, _oldDisplay$vars_form2, _oldDisplay$condition, _oldDisplay$layout, _layout, _layout2;\n            var variable = _step2.value;\n            var key = \"\".concat(item.origin).concat(variable);\n            var _ref = ((_oldDisplay$vars_form = oldDisplay.vars_format) === null || _oldDisplay$vars_form === void 0 ? void 0 : _oldDisplay$vars_form[key]) || {},\n              show_thousand = _ref.show_thousand,\n              decimals = _ref.decimals;\n            var numberFormat = show_thousand || decimals ? {\n              decimals: decimals,\n              show_thousand: show_thousand\n            } : null;\n            var alias = (_oldDisplay$vars_labe = oldDisplay.vars_labels) === null || _oldDisplay$vars_labe === void 0 ? void 0 : _oldDisplay$vars_labe[key];\n            var formula = (0, convertFormula_1.default)((_oldDisplay$vars_form2 = oldDisplay.vars_formula) === null || _oldDisplay$vars_form2 === void 0 ? void 0 : _oldDisplay$vars_form2[key]);\n            var iconConditions = (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$condition = oldDisplay.conditions) === null || _oldDisplay$condition === void 0 ? void 0 : _oldDisplay$condition[key]) || [];\n            var colorConditions = iconConditions.map(function (e) {\n              return {\n                color: e === null || e === void 0 ? void 0 : e.color,\n                condition: e === null || e === void 0 ? void 0 : e.condition\n              };\n            });\n            var layout = (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$layout = oldDisplay.layout) === null || _oldDisplay$layout === void 0 ? void 0 : _oldDisplay$layout[key]) || null;\n            /**\n             * If none column or row has been found, it should takes the 0 position\n             * If two variables has the same position doesn't matter\n             */\n            var row = ((_layout = layout) === null || _layout === void 0 ? void 0 : _layout.row) || 0;\n            var column = ((_layout2 = layout) === null || _layout2 === void 0 ? void 0 : _layout2.column) || 0;\n            var position = layout ? layoutMatrix[row][column] : 10;\n            variables.push(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n              // Not sent to backend, position tracking for sorting the variables\n              _position: position,\n              origin: item.origin,\n              variable: variable\n            }, alias ? {\n              alias: alias\n            } : {}), numberFormat ? {\n              number_format: numberFormat\n            } : {}), formula ? {\n              formula: formula\n            } : {}), iconConditions ? {\n              icon_conditions: iconConditions\n            } : {}), colorConditions ? {\n              color_conditions: colorConditions\n            } : {}));\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  /**\n   * Sort by the position of the icon\n   */\n  variables.sort(function (a, b) {\n    if (a._position > b._position) {\n      return 1;\n    }\n    if (a._position < b._position) {\n      return -1;\n    }\n    return 0;\n  });\n  /**\n   * Remove the _position property\n   */\n  newStructure.display.variables = variables.map(function (e) {\n    delete e._position;\n    return e;\n  });\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3, _widget$display4, _widget$display5, _widget$display6, _widget$display7;\n  var isOld = !!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.vars_labels || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.vars_format || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.vars_formula || widget !== null && widget !== void 0 && (_widget$display4 = widget.display) !== null && _widget$display4 !== void 0 && _widget$display4.numberformat || widget !== null && widget !== void 0 && (_widget$display5 = widget.display) !== null && _widget$display5 !== void 0 && _widget$display5.hide_values || widget !== null && widget !== void 0 && (_widget$display6 = widget.display) !== null && _widget$display6 !== void 0 && _widget$display6.hide_variables) && !(widget !== null && widget !== void 0 && (_widget$display7 = widget.display) !== null && _widget$display7 !== void 0 && _widget$display7.variables);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["layoutMatrix","convert","oldWidget","oldDisplay","display","newStructure","dashboard","header_buttons","help","show_units","show_unit","show_values","hide_values","show_variables","hide_variables","variables","id","label","realtime","type","Array","isArray","data","item","is_hide","variable","key","origin","vars_format","show_thousand","decimals","numberFormat","alias","vars_labels","formula","vars_formula","iconConditions","conditions","colorConditions","map","e","color","condition","layout","row","column","position","push","_position","number_format","icon_conditions","color_conditions","sort","a","b","exports","isOldStructure","widget","isOld","numberformat"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\icon.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old ICON to new ICON\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\nimport convertFormula from \"./common/convertFormula\";\n\nconst layoutMatrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n];\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      show_units: !!oldDisplay?.show_unit,\n      show_values: !oldDisplay?.hide_values,\n      show_variables: !oldDisplay?.hide_variables,\n      variables: [],\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"icon\",\n  };\n\n  const variables = [];\n\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data; // transfers the .data property\n\n    for (const item of oldWidget.data) {\n      if (item.is_hide) {\n        // is_hide items are not visible in the columns, so we cannot\n        // put them in the variables array\n        continue;\n      }\n\n      for (const variable of item.variables) {\n        const key = `${item.origin}${variable}`;\n\n        const { show_thousand, decimals } = oldDisplay.vars_format?.[key] || {};\n        const numberFormat =\n          show_thousand || decimals\n            ? {\n                decimals,\n                show_thousand,\n              }\n            : null;\n\n        const alias = oldDisplay.vars_labels?.[key];\n        const formula = convertFormula(oldDisplay.vars_formula?.[key]);\n\n        const iconConditions = oldDisplay?.conditions?.[key] || [];\n        const colorConditions = iconConditions.map((e: any) => ({\n          color: e?.color,\n          condition: e?.condition,\n        }));\n\n        const layout = oldDisplay?.layout?.[key] || null;\n        /**\n         * If none column or row has been found, it should takes the 0 position\n         * If two variables has the same position doesn't matter\n         */\n        const row = layout?.row || 0;\n        const column = layout?.column || 0;\n        const position = layout ? layoutMatrix[row][column] : 10;\n\n        variables.push({\n          // Not sent to backend, position tracking for sorting the variables\n          _position: position,\n          origin: item.origin,\n          variable,\n          ...(alias ? { alias } : {}),\n          ...(numberFormat ? { number_format: numberFormat } : {}),\n          ...(formula ? { formula } : {}),\n          ...(iconConditions ? { icon_conditions: iconConditions } : {}),\n          ...(colorConditions ? { color_conditions: colorConditions } : {}),\n        });\n      }\n    }\n  }\n\n  /**\n   * Sort by the position of the icon\n   */\n  variables.sort((a, b) => {\n    if (a._position > b._position) {\n      return 1;\n    }\n    if (a._position < b._position) {\n      return -1;\n    }\n    return 0;\n  });\n\n  /**\n   * Remove the _position property\n   */\n  newStructure.display.variables = variables.map((e) => {\n    delete e._position;\n    return e;\n  });\n\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld =\n    !!(\n      widget?.display?.vars_labels ||\n      widget?.display?.vars_format ||\n      widget?.display?.vars_formula ||\n      widget?.display?.numberformat ||\n      widget?.display?.hide_values ||\n      widget?.display?.hide_variables\n    ) && !widget?.display?.variables;\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}