{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convert(oldWidget) {\n  var oldDisplay = oldWidget.display || {};\n  var newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      hour_visualization: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.clock_visualization) || \"\",\n      limit: {\n        enabled: !!(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.enable_limit),\n        maximum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.maximum) || 100,\n        minimum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.minimum) || 0\n      },\n      number_format: {\n        decimals: -1,\n        show_thousand: false\n      },\n      show_unit: !!(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.show_unit),\n      show_variables: !(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.hide_variables),\n      step_value: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.increment) || 1,\n      theme: {\n        color: {\n          background: null,\n          button: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.conditions_button,\n          text: null,\n          value: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.conditions_text\n        }\n      },\n      type: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.input_type,\n      unit: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.unit) || \"\"\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"step_button\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    var _iterator = _createForOfIteratorHelper(oldWidget.data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (item !== null && item !== void 0 && item.is_hide) {\n          continue;\n        }\n        var _iterator2 = _createForOfIteratorHelper(item.variables),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _oldDisplay$vars_form, _oldDisplay$vars_labe, _oldDisplay$vars_labe2;\n            var variable = _step2.value;\n            var key = \"\".concat(item === null || item === void 0 ? void 0 : item.origin).concat(variable);\n            if (oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$vars_form = oldDisplay.vars_format) !== null && _oldDisplay$vars_form !== void 0 && _oldDisplay$vars_form[key]) {\n              var _oldDisplay$vars_form2;\n              newStructure.display.number_format = oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$vars_form2 = oldDisplay.vars_format) === null || _oldDisplay$vars_form2 === void 0 ? void 0 : _oldDisplay$vars_form2[key];\n            }\n            if (oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$vars_labe = oldDisplay.vars_labels) !== null && _oldDisplay$vars_labe !== void 0 && _oldDisplay$vars_labe[key] && (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$vars_labe2 = oldDisplay.vars_labels) === null || _oldDisplay$vars_labe2 === void 0 ? void 0 : _oldDisplay$vars_labe2[key]) !== variable) {\n              var _oldDisplay$vars_labe3;\n              newStructure.display.alias = oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$vars_labe3 = oldDisplay.vars_labels) === null || _oldDisplay$vars_labe3 === void 0 ? void 0 : _oldDisplay$vars_labe3[key];\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3, _widget$display4;\n  var isOld = !!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.input_type || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.vars_labels || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.vars_format || widget !== null && widget !== void 0 && (_widget$display4 = widget.display) !== null && _widget$display4 !== void 0 && _widget$display4.conditions_button);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["convert","oldWidget","oldDisplay","display","newStructure","dashboard","alias","header_buttons","help","hour_visualization","clock_visualization","limit","enabled","enable_limit","maximum","minimum","number_format","decimals","show_thousand","show_unit","show_variables","hide_variables","step_value","increment","theme","color","background","button","conditions_button","text","value","conditions_text","type","input_type","unit","id","label","realtime","Array","isArray","data","item","is_hide","variables","variable","key","origin","vars_format","vars_labels","exports","isOldStructure","widget","isOld"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\stepbutton.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old STEP BUTTON to new STEP BUTTON\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      hour_visualization: oldDisplay?.clock_visualization || \"\",\n      limit: {\n        enabled: !!oldDisplay?.enable_limit,\n        maximum: oldDisplay?.maximum || 100,\n        minimum: oldDisplay?.minimum || 0,\n      },\n      number_format: {\n        decimals: -1,\n        show_thousand: false,\n      },\n      show_unit: !!oldDisplay?.show_unit,\n      show_variables: !oldDisplay?.hide_variables,\n      step_value: oldDisplay?.increment || 1,\n      theme: {\n        color: {\n          background: null,\n          button: oldDisplay?.conditions_button,\n          text: null,\n          value: oldDisplay?.conditions_text,\n        },\n      },\n      type: oldDisplay?.input_type,\n      unit: oldDisplay?.unit || \"\",\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"step_button\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    for (const item of oldWidget.data) {\n      if (item?.is_hide) {\n        continue;\n      }\n      for (const variable of item.variables) {\n        const key = `${item?.origin}${variable}`;\n        if (oldDisplay?.vars_format?.[key]) {\n          newStructure.display.number_format = oldDisplay?.vars_format?.[key];\n        }\n\n        if (oldDisplay?.vars_labels?.[key] && oldDisplay?.vars_labels?.[key] !== variable) {\n          newStructure.display.alias = oldDisplay?.vars_labels?.[key];\n        }\n      }\n    }\n\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(\n    widget?.display?.input_type ||\n    widget?.display?.vars_labels ||\n    widget?.display?.vars_format ||\n    widget?.display?.conditions_button\n  );\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}