{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Account_1 = __importDefault(require(\"../Account/Account\"));\nconst Device_1 = __importDefault(require(\"../Device/Device\"));\nconst getTokenByName_1 = __importDefault(require(\"./getTokenByName\"));\n/**\n * Get the TagoIO Device instanced class from a device id\n */\nasync function getDevice(account, device_id) {\n  if (!(account instanceof Account_1.default)) {\n    throw \"The parameter 'account' must be an instance of a TagoIO Account.\";\n  }\n  const token = await (0, getTokenByName_1.default)(account, device_id);\n  if (!token) {\n    throw `Token not found for the device id ${device_id}`;\n  }\n  const device = new Device_1.default({\n    token\n  });\n  return device;\n}\nexports.default = getDevice;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AACA;AAEA;;;AAGA,eAAeA,SAAS,CAACC,OAAgB,EAAEC,SAAiB;EAC1D,IAAI,EAAED,OAAO,YAAYE,iBAAO,CAAC,EAAE;IACjC,MAAM,kEAAkE;;EAG1E,MAAMC,KAAK,GAAG,MAAM,4BAAc,EAACH,OAAO,EAAEC,SAAS,CAAC;EACtD,IAAI,CAACE,KAAK,EAAE;IACV,MAAM,qCAAqCF,SAAS,EAAE;;EAGxD,MAAMG,MAAM,GAAG,IAAIC,gBAAM,CAAC;IAAEF;EAAK,CAAE,CAAC;EAEpC,OAAOC,MAAM;AACf;AAEAE,kBAAeP,SAAS","names":["getDevice","account","device_id","Account_1","token","device","Device_1","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Utils\\getDevice.ts"],"sourcesContent":["import Account from \"../Account/Account\";\nimport Device from \"../Device/Device\";\nimport getTokenByName from \"./getTokenByName\";\n\n/**\n * Get the TagoIO Device instanced class from a device id\n */\nasync function getDevice(account: Account, device_id: string): Promise<Device> {\n  if (!(account instanceof Account)) {\n    throw \"The parameter 'account' must be an instance of a TagoIO Account.\";\n  }\n\n  const token = await getTokenByName(account, device_id);\n  if (!token) {\n    throw `Token not found for the device id ${device_id}`;\n  }\n\n  const device = new Device({ token });\n\n  return device;\n}\n\nexport default getDevice;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}