{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nvar ConsoleService = /*#__PURE__*/function (_TagoIOModule_1$defau) {\n  _inherits(ConsoleService, _TagoIOModule_1$defau);\n  var _super = _createSuper(ConsoleService);\n  function ConsoleService() {\n    _classCallCheck(this, ConsoleService);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ConsoleService, [{\n    key: \"log\",\n    value:\n    /**\n     * Log message in analysis console\n     * @param message Log message\n     * @param time Date of message\n     */\n    function () {\n      var _log = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(message, time) {\n        var timestamp, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                timestamp = new Date(time).getTime();\n                _context.next = 3;\n                return this.doRequest({\n                  path: \"/analysis/services/console/send\",\n                  method: \"POST\",\n                  body: {\n                    message: message,\n                    timestamp: timestamp\n                  }\n                });\n              case 3:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function log(_x, _x2) {\n        return _log.apply(this, arguments);\n      }\n      return log;\n    }()\n  }]);\n  return ConsoleService;\n}(TagoIOModule_1.default);\nexports.default = ConsoleService;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;AAA8E,IAExEA,cAAe;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACnB;;;;;IAAA;MAAA,sEAKO,iBAAUC,OAAe,EAAEC,IAAW;QAAA;QAAA;UAAA;YAAA;cAAA;gBACrCC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,OAAO,EAAE;gBAAA;gBAAA,OAErB,IAAI,CAACC,SAAS,CAAS;kBAC1CC,IAAI,EAAE,iCAAiC;kBACvCC,MAAM,EAAE,MAAM;kBACdC,IAAI,EAAE;oBAAER,OAAO,EAAPA,OAAO;oBAAEE,SAAS,EAAEA;kBAAS;iBACtC,CAAC;cAAA;gBAJIO,MAAM;gBAAA,iCAMLA,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACd;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EAhB0BC,sBAAiC;AAmB9DC,kBAAeZ,cAAc","names":["ConsoleService","message","time","timestamp","Date","getTime","doRequest","path","method","body","result","TagoIOModule_1","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Services\\Console.ts"],"sourcesContent":["import TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\n\nclass ConsoleService extends TagoIOModule<GenericModuleParams> {\n  /**\n   * Log message in analysis console\n   * @param message Log message\n   * @param time Date of message\n   */\n  public async log(message: string, time?: Date): Promise<string> {\n    const timestamp = new Date(time).getTime();\n\n    const result = await this.doRequest<string>({\n      path: \"/analysis/services/console/send\",\n      method: \"POST\",\n      body: { message, timestamp: timestamp },\n    });\n\n    return result;\n  }\n}\n\nexport default ConsoleService;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}