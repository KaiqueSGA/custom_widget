{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convertSource(oldDisplay) {\n  const {\n    type_image\n  } = oldDisplay;\n  if (type_image === \"static\") {\n    return {\n      static_image: oldDisplay?.static_image || oldDisplay?.static_media,\n      type: \"static\"\n    };\n  }\n  const oldConditions = oldDisplay?.conditions || [];\n  return {\n    conditions: oldConditions.map(e => ({\n      condition: e?.condition,\n      url: e?.image || e?.media_url,\n      value: e?.value\n    })),\n    type: \"conditional\"\n  };\n}\n/**\n * Takes the OLD widget and returns the NEW structure.\n */\nfunction convert(oldWidget) {\n  const oldDisplay = oldWidget.display || {};\n  const newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      allow_zoom: false,\n      formula: {\n        enable: false,\n        formula_type: \"fixed\",\n        unit_type: \"origin\",\n        value: \"\"\n      },\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      object_fit: \"contain\",\n      occupy_whole_widget: false,\n      show_zoom_buttons: false,\n      source: convertSource(oldDisplay),\n      theme: {\n        color: {\n          background: null,\n          header: null\n        }\n      }\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"image\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  const isOld = !!(widget?.display?.type_media || widget?.display?.type_image || widget?.display?.static_media || widget?.display?.static_image || widget?.display?.conditions);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":";;;;;;AAMA,SAASA,aAAa,CAACC,UAAe;EACpC,MAAM;IAAEC;EAAU,CAAE,GAAGD,UAAU;EACjC,IAAIC,UAAU,KAAK,QAAQ,EAAE;IAC3B,OAAO;MACLC,YAAY,EAAEF,UAAU,EAAEE,YAAY,IAAIF,UAAU,EAAEG,YAAY;MAClEC,IAAI,EAAE;KACP;;EAEH,MAAMC,aAAa,GAAGL,UAAU,EAAEM,UAAU,IAAI,EAAE;EAClD,OAAO;IACLA,UAAU,EAAED,aAAa,CAACE,GAAG,CAAEC,CAAM,KAAM;MACzCC,SAAS,EAAED,CAAC,EAAEC,SAAS;MACvBC,GAAG,EAAEF,CAAC,EAAEG,KAAK,IAAIH,CAAC,EAAEI,SAAS;MAC7BC,KAAK,EAAEL,CAAC,EAAEK;KACX,CAAC,CAAC;IACHT,IAAI,EAAE;GACP;AACH;AACA;;;AAGA,SAAgBU,OAAO,CAACC,SAAc;EACpC,MAAMf,UAAU,GAAGe,SAAS,CAACC,OAAO,IAAI,EAAE;EAE1C,MAAMC,YAAY,GAAQ;IACxBC,SAAS,EAAEH,SAAS,CAACG,SAAS;IAC9BF,OAAO,EAAE;MACPG,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE;QACPC,MAAM,EAAE,KAAK;QACbC,YAAY,EAAE,OAAO;QACrBC,SAAS,EAAE,QAAQ;QACnBV,KAAK,EAAE;OACR;MACDW,cAAc,EAAExB,UAAU,CAACwB,cAAc,IAAI,EAAE;MAC/CC,IAAI,EAAEzB,UAAU,CAACyB,IAAI,IAAI,EAAE;MAC3BC,UAAU,EAAE,SAAS;MACrBC,mBAAmB,EAAE,KAAK;MAC1BC,iBAAiB,EAAE,KAAK;MACxBC,MAAM,EAAE9B,aAAa,CAACC,UAAU,CAAC;MACjC8B,KAAK,EAAE;QACLC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;;;KAGb;IACDC,EAAE,EAAEnB,SAAS,CAACmB,EAAE;IAChBC,KAAK,EAAEpB,SAAS,CAACoB,KAAK;IACtBC,QAAQ,EAAE,IAAI;IACdhC,IAAI,EAAE;GACP;EAED,IAAIiC,KAAK,CAACC,OAAO,CAACvB,SAAS,CAACwB,IAAI,CAAC,EAAE;IACjCtB,YAAY,CAACsB,IAAI,GAAGxB,SAAS,CAACwB,IAAI;;EAGpC,OAAOtB,YAAY;AACrB;AArCAuB;AAuCA,SAAgBC,cAAc,CAACC,MAAW;EACxC,MAAMC,KAAK,GAAG,CAAC,EACbD,MAAM,EAAE1B,OAAO,EAAE4B,UAAU,IAC3BF,MAAM,EAAE1B,OAAO,EAAEf,UAAU,IAC3ByC,MAAM,EAAE1B,OAAO,EAAEb,YAAY,IAC7BuC,MAAM,EAAE1B,OAAO,EAAEd,YAAY,IAC7BwC,MAAM,EAAE1B,OAAO,EAAEV,UAAU,CAC5B;EAED,OAAOqC,KAAK;AACd;AAVAH","names":["convertSource","oldDisplay","type_image","static_image","static_media","type","oldConditions","conditions","map","e","condition","url","image","media_url","value","convert","oldWidget","display","newStructure","dashboard","allow_zoom","formula","enable","formula_type","unit_type","header_buttons","help","object_fit","occupy_whole_widget","show_zoom_buttons","source","theme","color","background","header","id","label","realtime","Array","isArray","data","exports","isOldStructure","widget","isOld","type_media"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\image.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old IMAGE to new IMAGE\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\n\nfunction convertSource(oldDisplay: any) {\n  const { type_image } = oldDisplay;\n  if (type_image === \"static\") {\n    return {\n      static_image: oldDisplay?.static_image || oldDisplay?.static_media,\n      type: \"static\",\n    };\n  }\n  const oldConditions = oldDisplay?.conditions || [];\n  return {\n    conditions: oldConditions.map((e: any) => ({\n      condition: e?.condition,\n      url: e?.image || e?.media_url,\n      value: e?.value,\n    })),\n    type: \"conditional\",\n  };\n}\n/**\n * Takes the OLD widget and returns the NEW structure.\n */\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      allow_zoom: false,\n      formula: {\n        enable: false,\n        formula_type: \"fixed\",\n        unit_type: \"origin\",\n        value: \"\",\n      },\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      object_fit: \"contain\",\n      occupy_whole_widget: false,\n      show_zoom_buttons: false,\n      source: convertSource(oldDisplay),\n      theme: {\n        color: {\n          background: null,\n          header: null,\n        },\n      },\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"image\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data;\n  }\n\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(\n    widget?.display?.type_media ||\n    widget?.display?.type_image ||\n    widget?.display?.static_media ||\n    widget?.display?.static_image ||\n    widget?.display?.conditions\n  );\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}