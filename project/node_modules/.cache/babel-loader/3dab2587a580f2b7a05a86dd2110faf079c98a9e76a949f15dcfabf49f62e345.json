{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst axios_1 = __importDefault(require(\"axios\"));\nconst config_1 = __importDefault(require(\"../config\"));\nconst sleep_1 = __importDefault(require(\"../common/sleep\"));\nconst isBrowser_1 = __importDefault(require(\"./isBrowser\"));\nconst envParams_json_1 = __importDefault(require(\"./envParams.json\"));\nconst RequestInProgress_1 = require(\"../common/RequestInProgress\");\nconst Cache_1 = require(\"../common/Cache\");\n/**\r\n * Handle the TagoIO Response\r\n * @internal\r\n * @param result Axios Result\r\n */\nfunction resultHandler(result) {\n  if (!result.data) {\n    throw result.statusText;\n  }\n  if (result.status === 200 && result.config.url.includes(\"/data/export\")) {\n    return {\n      data: result.data\n    };\n  }\n  if (result.data.status !== true) {\n    return result.data.message || result.data.result || result.data;\n  }\n  return {\n    data: result.data.result\n  };\n}\n/**\r\n * Handle all request to TagoIO API\r\n * @internal\r\n * @param axiosObj Axios Object\r\n */\nasync function apiRequest(axiosObj, cacheTTL) {\n  if (cacheTTL) {\n    if ((0, RequestInProgress_1.isRequestInProgress)(axiosObj)) {\n      await (0, sleep_1.default)(100);\n      return apiRequest(axiosObj, cacheTTL);\n    }\n    const objCached = (0, Cache_1.getCache)(axiosObj);\n    if (objCached) {\n      return objCached;\n    }\n  }\n  (0, RequestInProgress_1.addRequestInProgress)(axiosObj);\n  axiosObj.timeout = config_1.default.requestTimeout;\n  if ((0, isBrowser_1.default)()) {\n    // Prevent cache on Browsers\n    axiosObj.headers = {\n      ...axiosObj.headers,\n      Pragma: \"no-cache\",\n      \"Cache-Control\": \"no-cache\"\n    };\n  } else if (typeof process !== \"undefined\") {\n    const banner = process.env.T_ANALYSIS_CONTEXT === \"tago-io\" ? `(Running at TagoIO)` : `(External; Node.js/${process.version} ${process.platform}/${process.arch})`;\n    axiosObj.headers = {\n      ...axiosObj.headers,\n      \"User-Agent\": `TagoIO-SDK|JS|${envParams_json_1.default.version} ${banner}`\n    };\n  }\n  const request = () => {\n    return (0, axios_1.default)(axiosObj).then(resultHandler).catch(error => ({\n      error\n    }));\n  };\n  let result;\n  let resulterror;\n  for (let i = 1; i <= config_1.default.requestAttempts; i += 1) {\n    const {\n      data,\n      error\n    } = await request();\n    if (!error) {\n      result = data;\n      break;\n    }\n    if (error.response) {\n      resulterror = {\n        from: \"SERVER_RESPONSE\",\n        url: error.config.url,\n        method: String(error.config.method).toUpperCase(),\n        status: error.response.status,\n        code: error.code || \"UNKNOWN\",\n        statusText: error.response.statusText\n      };\n    } else {\n      resulterror = {\n        from: \"CLIENT_REQUEST\",\n        url: error.config.url,\n        method: String(error.config.method).toUpperCase(),\n        status: -1,\n        code: error.code || \"UNKNOWN\",\n        statusText: \"UNKNOWN\"\n      };\n    }\n    // ? Requests with client errors not retry.\n    if (error.response && (error.response.status >= 400 || error.response.status < 500)) {\n      resulterror = resultHandler(error.response);\n      break;\n    }\n    await (0, sleep_1.default)(1500);\n  }\n  if (cacheTTL && result && !resulterror) {\n    (0, Cache_1.addCache)(axiosObj, result, cacheTTL);\n  }\n  (0, RequestInProgress_1.removeRequestInProgress)(axiosObj);\n  if (!result && resulterror) {\n    throw resulterror;\n  }\n  return result;\n}\nexports.default = apiRequest;","map":{"version":3,"mappings":"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","names":["resultHandler","result","data","statusText","status","config","url","includes","message","apiRequest","axiosObj","cacheTTL","objCached","timeout","config_1","requestTimeout","headers","Pragma","process","banner","env","T_ANALYSIS_CONTEXT","version","platform","arch","envParams_json_1","request","then","catch","error","resulterror","i","requestAttempts","response","from","method","String","toUpperCase","code","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\infrastructure\\apiRequest.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport config from \"../config\";\r\nimport sleep from \"../common/sleep\";\r\nimport isBrowser from \"./isBrowser\";\r\nimport envParams from \"./envParams.json\";\r\nimport { addRequestInProgress, isRequestInProgress, removeRequestInProgress } from \"../common/RequestInProgress\";\r\nimport { addCache, getCache } from \"../common/Cache\";\r\n\r\n/**\r\n * Handle the TagoIO Response\r\n * @internal\r\n * @param result Axios Result\r\n */\r\nfunction resultHandler(result: AxiosResponse) {\r\n  if (!result.data) {\r\n    throw result.statusText;\r\n  }\r\n\r\n  if (result.status === 200 && result.config.url.includes(\"/data/export\")) {\r\n    return { data: result.data };\r\n  }\r\n\r\n  if (result.data.status !== true) {\r\n    return result.data.message || result.data.result || result.data;\r\n  }\r\n\r\n  return { data: result.data.result };\r\n}\r\n\r\n/**\r\n * Handle all request to TagoIO API\r\n * @internal\r\n * @param axiosObj Axios Object\r\n */\r\nasync function apiRequest(axiosObj: AxiosRequestConfig, cacheTTL?: number): Promise<any> {\r\n  if (cacheTTL) {\r\n    if (isRequestInProgress(axiosObj)) {\r\n      await sleep(100);\r\n      return apiRequest(axiosObj, cacheTTL);\r\n    }\r\n\r\n    const objCached = getCache(axiosObj);\r\n    if (objCached) {\r\n      return objCached;\r\n    }\r\n  }\r\n\r\n  addRequestInProgress(axiosObj);\r\n\r\n  axiosObj.timeout = config.requestTimeout;\r\n\r\n  if (isBrowser()) {\r\n    // Prevent cache on Browsers\r\n    axiosObj.headers = {\r\n      ...axiosObj.headers,\r\n      Pragma: \"no-cache\",\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n  } else if (typeof process !== \"undefined\") {\r\n    const banner =\r\n      process.env.T_ANALYSIS_CONTEXT === \"tago-io\"\r\n        ? `(Running at TagoIO)`\r\n        : `(External; Node.js/${process.version} ${process.platform}/${process.arch})`;\r\n\r\n    axiosObj.headers = {\r\n      ...axiosObj.headers,\r\n      \"User-Agent\": `TagoIO-SDK|JS|${envParams.version} ${banner}`,\r\n    };\r\n  }\r\n\r\n  const request = () => {\r\n    return axios(axiosObj)\r\n      .then(resultHandler)\r\n      .catch((error) => ({ error }));\r\n  };\r\n\r\n  let result;\r\n  let resulterror;\r\n  for (let i = 1; i <= config.requestAttempts; i += 1) {\r\n    const { data, error } = await request();\r\n    if (!error) {\r\n      result = data;\r\n      break;\r\n    }\r\n\r\n    if (error.response) {\r\n      resulterror = {\r\n        from: \"SERVER_RESPONSE\",\r\n        url: error.config.url,\r\n        method: String(error.config.method).toUpperCase(),\r\n        status: error.response.status,\r\n        code: error.code || \"UNKNOWN\",\r\n        statusText: error.response.statusText,\r\n      };\r\n    } else {\r\n      resulterror = {\r\n        from: \"CLIENT_REQUEST\",\r\n        url: error.config.url,\r\n        method: String(error.config.method).toUpperCase(),\r\n        status: -1,\r\n        code: error.code || \"UNKNOWN\",\r\n        statusText: \"UNKNOWN\",\r\n      };\r\n    }\r\n\r\n    // ? Requests with client errors not retry.\r\n    if (error.response && (error.response.status >= 400 || error.response.status < 500)) {\r\n      resulterror = resultHandler(error.response);\r\n      break;\r\n    }\r\n\r\n    await sleep(1500);\r\n  }\r\n\r\n  if (cacheTTL && result && !resulterror) {\r\n    addCache(axiosObj, result, cacheTTL);\r\n  }\r\n\r\n  removeRequestInProgress(axiosObj);\r\n\r\n  if (!result && resulterror) {\r\n    throw resulterror;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default apiRequest;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}