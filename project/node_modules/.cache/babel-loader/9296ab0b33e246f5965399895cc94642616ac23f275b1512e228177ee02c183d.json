{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convert(oldWidget) {\n  var oldDisplay = oldWidget.display || {};\n  var decimalsString = \"\";\n  if (oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.numberformat && typeof (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.numberformat) === \"string\") {\n    var _oldDisplay$numberfor, _oldDisplay$numberfor2;\n    decimalsString = (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$numberfor = oldDisplay.numberformat) === null || _oldDisplay$numberfor === void 0 ? void 0 : (_oldDisplay$numberfor2 = _oldDisplay$numberfor.split(\".\")) === null || _oldDisplay$numberfor2 === void 0 ? void 0 : _oldDisplay$numberfor2[1]) || \"\";\n  }\n  var decimals = decimalsString.length || -1;\n  var newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.gauge_label) || \"\",\n      formula: {\n        fixed_unit: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.unit,\n        unit_type: oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.unit ? \"fixed\" : \"origin\"\n      },\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      number_format: {\n        decimals: decimals,\n        show_thousand: false\n      },\n      range: {\n        maximum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.maximum) || 100,\n        minimum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.minimum) || 0,\n        type: \"minmax\"\n      },\n      show_variables: !(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.hide_variables),\n      theme: {\n        color: {\n          background: null,\n          fill: null,\n          header: null,\n          text: null,\n          text_background: null\n        }\n      }\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"grainbin\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    var _oldWidget$data;\n    newStructure.data = [(_oldWidget$data = oldWidget.data) === null || _oldWidget$data === void 0 ? void 0 : _oldWidget$data[0]] || [];\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3, _widget$display4;\n  var isOld = !!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.gauge_label || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.minimum || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.maximum || widget !== null && widget !== void 0 && (_widget$display4 = widget.display) !== null && _widget$display4 !== void 0 && _widget$display4.unit);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":";;;;;;AAMA,SAAgBA,OAAO,CAACC,SAAc;EACpC,IAAMC,UAAU,GAAGD,SAAS,CAACE,OAAO,IAAI,EAAE;EAE1C,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIF,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEG,YAAY,IAAI,QAAOH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,YAAY,MAAK,QAAQ,EAAE;IAAA;IAC5ED,cAAc,GAAG,WAAU,aAAVF,UAAU,gDAAVA,UAAU,CAAEG,YAAY,oFAAxB,sBAA0BC,KAAK,CAAC,GAAG,CAAC,2DAApC,uBAAuC,CAAC,CAAC,KAAI,EAAE;;EAElE,IAAMC,QAAQ,GAAGH,cAAc,CAACI,MAAM,IAAI,CAAC,CAAC;EAE5C,IAAMC,YAAY,GAAQ;IACxBC,SAAS,EAAET,SAAS,CAACS,SAAS;IAC9BP,OAAO,EAAE;MACPQ,KAAK,EAAE,WAAU,aAAVT,UAAU,uBAAVA,UAAU,CAAEU,WAAW,KAAI,EAAE;MACpCC,OAAO,EAAE;QACPC,UAAU,EAAEZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,IAAI;QAC5BC,SAAS,EAAEd,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEa,IAAI,GAAG,OAAO,GAAG;OACzC;MACDE,cAAc,EAAEf,UAAU,CAACe,cAAc,IAAI,EAAE;MAC/CC,IAAI,EAAEhB,UAAU,CAACgB,IAAI,IAAI,EAAE;MAC3BC,aAAa,EAAE;QACbZ,QAAQ,EAARA,QAAQ;QACRa,aAAa,EAAE;OAChB;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,WAAU,aAAVpB,UAAU,uBAAVA,UAAU,CAAEoB,OAAO,KAAI,GAAG;QACnCC,OAAO,EAAE,WAAU,aAAVrB,UAAU,uBAAVA,UAAU,CAAEqB,OAAO,KAAI,CAAC;QACjCC,IAAI,EAAE;OACP;MACDC,cAAc,EAAE,EAACvB,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEwB,cAAc;MAC3CC,KAAK,EAAE;QACLC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,IAAI,EAAE,IAAI;UACVC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE,IAAI;UACVC,eAAe,EAAE;;;KAGtB;IACDC,EAAE,EAAEjC,SAAS,CAACiC,EAAE;IAChBC,KAAK,EAAElC,SAAS,CAACkC,KAAK;IACtBC,QAAQ,EAAE,IAAI;IACdZ,IAAI,EAAE;GACP;EAED,IAAIa,KAAK,CAACC,OAAO,CAACrC,SAAS,CAACsC,IAAI,CAAC,EAAE;IAAA;IACjC9B,YAAY,CAAC8B,IAAI,GAAG,oBAACtC,SAAS,CAACsC,IAAI,oDAAd,gBAAiB,CAAC,CAAC,CAAC,IAAI,EAAE;;EAEjD,OAAO9B,YAAY;AACrB;AAjDA+B;AAmDA,SAAgBC,cAAc,CAACC,MAAW;EAAA;EACxC,IAAMC,KAAK,GAAG,CAAC,EACbD,MAAM,aAANA,MAAM,kCAANA,MAAM,CAAEvC,OAAO,4CAAf,gBAAiBS,WAAW,IAC5B8B,MAAM,aAANA,MAAM,mCAANA,MAAM,CAAEvC,OAAO,6CAAf,iBAAiBoB,OAAO,IACxBmB,MAAM,aAANA,MAAM,mCAANA,MAAM,CAAEvC,OAAO,6CAAf,iBAAiBmB,OAAO,IACxBoB,MAAM,aAANA,MAAM,mCAANA,MAAM,CAAEvC,OAAO,6CAAf,iBAAiBY,IAAI,CACtB;EAED,OAAO4B,KAAK;AACd;AATAH","names":["convert","oldWidget","oldDisplay","display","decimalsString","numberformat","split","decimals","length","newStructure","dashboard","alias","gauge_label","formula","fixed_unit","unit","unit_type","header_buttons","help","number_format","show_thousand","range","maximum","minimum","type","show_variables","hide_variables","theme","color","background","fill","header","text","text_background","id","label","realtime","Array","isArray","data","exports","isOldStructure","widget","isOld"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\grainbin.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old GRAINBIN to new GRAINBIN\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  let decimalsString = \"\";\n  if (oldDisplay?.numberformat && typeof oldDisplay?.numberformat === \"string\") {\n    decimalsString = oldDisplay?.numberformat?.split(\".\")?.[1] || \"\";\n  }\n  const decimals = decimalsString.length || -1;\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: oldDisplay?.gauge_label || \"\",\n      formula: {\n        fixed_unit: oldDisplay?.unit,\n        unit_type: oldDisplay?.unit ? \"fixed\" : \"origin\",\n      },\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      number_format: {\n        decimals,\n        show_thousand: false,\n      },\n      range: {\n        maximum: oldDisplay?.maximum || 100,\n        minimum: oldDisplay?.minimum || 0,\n        type: \"minmax\",\n      },\n      show_variables: !oldDisplay?.hide_variables,\n      theme: {\n        color: {\n          background: null,\n          fill: null,\n          header: null,\n          text: null,\n          text_background: null,\n        },\n      },\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"grainbin\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = [oldWidget.data?.[0]] || [];\n  }\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(\n    widget?.display?.gauge_label ||\n    widget?.display?.minimum ||\n    widget?.display?.maximum ||\n    widget?.display?.unit\n  );\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}