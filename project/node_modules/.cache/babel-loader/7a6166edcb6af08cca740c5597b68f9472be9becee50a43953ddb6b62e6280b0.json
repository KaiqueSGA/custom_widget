{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yudji\\\\OneDrive\\\\Documentos\\\\SGA\\\\WIDGETS\\\\mqtt_wid\\\\dash_mqtt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Account,\n  Device,\n  Services\n} = require('@tago-io/sdk');\nconst notify = message => toast.success(message);\nconst error = message => toast.error(message);\nlet render = 0;\nfunction App() {\n  _s();\n  const account = new Account({\n    token: \"a394b4c9-7ea7-4346-bbe1-ddb35f9bc948\"\n  });\n  const [arrayOfdevices, setArray] = useState([]);\n  let parameters_values = new Array();\n  async function listdevices() {\n    let listResponse = await account.devices.list();\n    render++;\n    render === 1 ? setArray(listResponse) : console.log();\n  }\n  useEffect(() => {\n    listdevices();\n  });\n  window.TagoIO.onStart(widget => {\n    window.widget = widget;\n  });\n  window.TagoIO.ready();\n  async function insertParam() {\n    let selectDevice = document.getElementById(\"devices\");\n    let device_token = selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];\n    let device_name = selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];\n    await get_configuration_parameters();\n    const send_mqtt_to_device = async () => {\n      let formated_string = `ID=1234567890ABCDEF,MODE=${parameters_values.find(parameter => {\n        return parameter.key === 'MODE';\n      }).value},TIMER_GPRS=${parameters_values.find(parameter => {\n        return parameter.key === 'TIMER_GPRS';\n      }).value},TIMER_GPS=${parameters_values.find(parameter => {\n        return parameter.key === 'TIMER_GPS';\n      }).value},TIMER_SMS=${parameters_values.find(parameter => {\n        return parameter.key === 'TIMER_SMS';\n      }).value},CMD=${parameters_values.find(parameter => {\n        return parameter.key === 'CMD';\n      }).value}`;\n      const options = {\n        retain: false,\n        qos: 2\n      };\n      const MQTT = new Services({\n        token: \"61f848bb-e3d0-4a13-836a-ef90d84834c3\"\n      }).MQTT;\n      MQTT.publish({\n        bucket: arrayOfdevices.find(dev => dev.name === device_name).id,\n        //device's bucket ? FROM CONTEXT OR SCOPE\n        message: JSON.stringify(formated_string),\n        //the MQTT message\n        topic: arrayOfdevices.find(dev => dev.name === device_name).tags.find(tag => {\n          return tag.key === \"ESN\";\n        }).value,\n        //ESN or IMEI\n        options\n      }).then(resp => notify(resp)).catch(err => error(err));\n    };\n    send_mqtt_to_device();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cabecalho\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Enviar Comando\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldOfSelection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" label_dev\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"drop\",\n            alt: \"\",\n            src: \"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_label\",\n            children: \"Select the device to configure it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"devices\",\n            className: \"devices\",\n            children: arrayOfdevices.map(item => {\n              try {\n                let device_token = item.tags.find(dev => {\n                  return dev.key === \"device_token\";\n                });\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: `${device_token.value},${item.name}`,\n                  children: [\" \", item.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 49\n                }, this);\n              } catch (err) {\n                error(err);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rodape\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: insertParam,\n            children: \"Sent MQTT Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"soqvaxEfebdLx7UzOpU9BjCchwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ToastContainer","toast","Account","Device","Services","require","notify","message","success","error","render","App","account","token","arrayOfdevices","setArray","parameters_values","Array","listdevices","listResponse","devices","list","console","log","window","TagoIO","onStart","widget","ready","insertParam","selectDevice","document","getElementById","device_token","options","selectedIndex","value","split","device_name","get_configuration_parameters","send_mqtt_to_device","formated_string","find","parameter","key","retain","qos","MQTT","publish","bucket","dev","name","id","JSON","stringify","topic","tags","tag","then","resp","catch","err","map","item"],"sources":["C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst {Account, Device, Services} = require('@tago-io/sdk'); \n\n    \n    const notify = (message) => toast.success(message);\n    const error = (message) => toast.error(message) \n    \n\n\nlet render = 0;\nfunction App() {\n   const account = new Account({token:\"a394b4c9-7ea7-4346-bbe1-ddb35f9bc948\"});\n   const [arrayOfdevices,setArray] = useState([]);\n   let parameters_values = new Array();\n    \n\n    async function listdevices(){\n        let listResponse =  await account.devices.list();\n        \n        render++;\n           render === 1 ? setArray(listResponse)\n                                     : console.log()\n       } \n\n\n        useEffect( () => {\n            listdevices()\n        } )\n        \n   \n        window.TagoIO.onStart((widget) => {\n            window.widget = widget;\n        })\n        window.TagoIO.ready();\n\n        \n \n       \n\n        async function insertParam(){\n            let selectDevice = document.getElementById(\"devices\");\n            let device_token = selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];\n            let device_name = selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];          \n            \n\n          \n         await get_configuration_parameters();\n            \n\n            \n            \n\n            const send_mqtt_to_device = async () => {\n    \n                    let formated_string = `ID=1234567890ABCDEF,MODE=${ (parameters_values.find((parameter) => {return parameter.key === 'MODE'})).value  },TIMER_GPRS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_GPRS'})).value  },TIMER_GPS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_GPS'})).value  },TIMER_SMS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_SMS'})).value  },CMD=${ (parameters_values.find((parameter) => {return parameter.key === 'CMD'})).value  }`;\n                    const options = { retain: false, qos: 2 };\n                     \n                    \n                    const MQTT = new Services({ token: \"61f848bb-e3d0-4a13-836a-ef90d84834c3\"}).MQTT;\n                     MQTT.publish({\n                        bucket: (arrayOfdevices.find((dev) => dev.name === device_name)).id , //device's bucket ? FROM CONTEXT OR SCOPE\n                        message: JSON.stringify(formated_string), //the MQTT message\n                        topic: (arrayOfdevices.find((dev) => dev.name === device_name)).tags.find(tag => { return tag.key === \"ESN\"}).value, //ESN or IMEI\n                        options,\n                    }).then((resp) => notify(resp))   \n                      .catch((err) => error(err))\n\n            };send_mqtt_to_device();\n\n      }\n\n\n        return(\n             <div className=\"container\">\n                <ToastContainer />\n                    <div className=\"box\">\n                        \n                        <div className =\"cabecalho\">\n                            <div className =\"title\">Enviar Comando</div>\n                        </div>\n                        \n                        \n                        <div className =\"fieldOfSelection\">\n                \n                            <div className=\" label_dev\">\n                                <img className =\"drop\" alt='' src=\"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\" />\n                                <div className =\"title_label\">Select the device to configure it</div> \n                            </div>\n                \n                \n                              <div className=\"input\">\n                                    <select id=\"devices\" className =\"devices\">\n                                    {arrayOfdevices.map((item) =>{\n                                        try{\n                                            let device_token = item.tags.find(dev => {return dev.key === \"device_token\"});\n                                            return(\n                                                <option value={`${device_token.value},${item.name}`}> {item.name} </option>\n                                            )\n                                        }catch(err){\n                                           error(err)\n                                        }\n                                      \n                                    })}\n                                    </select>\n                                </div>  \n                                \n                \n                            \n                \n                            <div className=\"rodape\">\n                                 <button className=\"button\" onClick={insertParam} >\n                                    Sent MQTT Message\n                                </button> \n                            </div>\n                \n                \n                        </div>\n                        \n                    \n                \n                    </div>  \n                    \n                   \n                </div>\n           \n        )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}