{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nconst dateParser_1 = __importDefault(require(\"../Utils/dateParser\"));\nclass _Share extends TagoIOModule_1.default {\n  async invite(id, data) {\n    let result = await this.doRequest({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"POST\",\n      body: {\n        ...data\n      }\n    });\n    result = (0, dateParser_1.default)(result, [\"expire_time\"]);\n    return result;\n  }\n  async edit(id, data) {\n    const result = await this.doRequest({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"PUT\",\n      body: {\n        ...data\n      }\n    });\n    return result;\n  }\n  async list(id) {\n    let result = await this.doRequest({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"GET\"\n    });\n    result = result.map(data => (0, dateParser_1.default)(data, [\"expire_time\"]));\n    return result;\n  }\n  async remove(shareID) {\n    const result = await this.doRequest({\n      path: `/share/${shareID}`,\n      method: \"DELETE\"\n    });\n    return result;\n  }\n}\nexports.default = _Share;","map":{"version":3,"mappings":";;;;;;;;;;AACA;AACA;AAGA,MAAMA,MAAO,SAAQC,sBAA+B;EAC3C,MAAMC,MAAM,CAACC,EAAa,EAAEC,IAAgB;IACjD,IAAIC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAiB;MAChDC,IAAI,EAAE,UAAU,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIN,EAAE,EAAE;MACxCO,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QACJ,GAAGP;;KAEN,CAAC;IAEFC,MAAM,GAAG,wBAAU,EAACA,MAAM,EAAE,CAAC,aAAa,CAAC,CAAC;IAE5C,OAAOA,MAAM;EACf;EACO,MAAMO,IAAI,CAACT,EAAa,EAAEC,IAAyB;IACxD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAS;MAC1CC,IAAI,EAAE,UAAU,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIN,EAAE,EAAE;MACxCO,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE;QACJ,GAAGP;;KAEN,CAAC;IAEF,OAAOC,MAAM;EACf;EACO,MAAMQ,IAAI,CAACV,EAAa;IAC7B,IAAIE,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAe;MAC9CC,IAAI,EAAE,UAAU,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIN,EAAE,EAAE;MACxCO,MAAM,EAAE;KACT,CAAC;IAEFL,MAAM,GAAGA,MAAM,CAACS,GAAG,CAAEV,IAAI,IAAK,wBAAU,EAACA,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEhE,OAAOC,MAAM;EACf;EACO,MAAMU,MAAM,CAACC,OAAkB;IACpC,MAAMX,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAS;MAC1CC,IAAI,EAAE,UAAUS,OAAO,EAAE;MACzBN,MAAM,EAAE;KACT,CAAC;IAEF,OAAOL,MAAM;EACf;;AAGFY,kBAAejB,MAAM","names":["_Share","TagoIOModule_1","invite","id","data","result","doRequest","path","params","type","method","body","edit","list","map","remove","shareID","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Account\\_Share.ts"],"sourcesContent":["import { ExpireTimeOption, GenericID, PermissionOption } from \"../../common/common.types\";\nimport TagoIOModule, { ShareModuleParams } from \"../../common/TagoIOModule\";\nimport dateParser from \"../Utils/dateParser\";\nimport { InviteInfo, InviteResponse } from \"./_share.types\";\n\nclass _Share extends TagoIOModule<ShareModuleParams> {\n  public async invite(id: GenericID, data: InviteInfo): Promise<InviteResponse> {\n    let result = await this.doRequest<InviteResponse>({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"POST\",\n      body: {\n        ...data,\n      },\n    });\n\n    result = dateParser(result, [\"expire_time\"]);\n\n    return result;\n  }\n  public async edit(id: GenericID, data: Partial<InviteInfo>): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"PUT\",\n      body: {\n        ...data,\n      },\n    });\n\n    return result;\n  }\n  public async list(id: GenericID): Promise<InviteInfo[]> {\n    let result = await this.doRequest<InviteInfo[]>({\n      path: `/share/${this.params.type}/${id}`,\n      method: \"GET\",\n    });\n\n    result = result.map((data) => dateParser(data, [\"expire_time\"]));\n\n    return result;\n  }\n  public async remove(shareID: GenericID): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/share/${shareID}`,\n      method: \"DELETE\",\n    });\n\n    return result;\n  }\n}\n\nexport default _Share;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}