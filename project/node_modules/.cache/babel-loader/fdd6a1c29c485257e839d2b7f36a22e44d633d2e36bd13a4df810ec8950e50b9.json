{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nvar dateParser_1 = __importDefault(require(\"../Utils/dateParser\"));\nvar Run = /*#__PURE__*/function (_TagoIOModule_1$defau) {\n  _inherits(Run, _TagoIOModule_1$defau);\n  var _super = _createSuper(Run);\n  function Run() {\n    _classCallCheck(this, Run);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Run, [{\n    key: \"info\",\n    value: function () {\n      var _info = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.doRequest({\n                  path: \"/run\",\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function info() {\n        return _info.apply(this, arguments);\n      }\n      return info;\n    }()\n  }, {\n    key: \"edit\",\n    value: function () {\n      var _edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.doRequest({\n                  path: \"/run\",\n                  method: \"PUT\",\n                  body: data\n                });\n              case 2:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function edit(_x) {\n        return _edit.apply(this, arguments);\n      }\n      return edit;\n    }()\n  }, {\n    key: \"listUsers\",\n    value: function () {\n      var _listUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(query) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doRequest({\n                  path: \"/run/users\",\n                  method: \"GET\",\n                  params: {\n                    page: (query === null || query === void 0 ? void 0 : query.page) || 1,\n                    fields: (query === null || query === void 0 ? void 0 : query.fields) || [\"id\", \"name\"],\n                    filter: (query === null || query === void 0 ? void 0 : query.filter) || {},\n                    amount: (query === null || query === void 0 ? void 0 : query.amount) || 20,\n                    orderBy: query !== null && query !== void 0 && query.orderBy ? \"\".concat(query.orderBy[0], \",\").concat(query.orderBy[1]) : \"name,asc\"\n                  }\n                });\n              case 2:\n                result = _context3.sent;\n                result = result.map(function (data) {\n                  return (0, dateParser_1.default)(data, [\"created_at\", \"updated_at\", \"last_login\"]);\n                });\n                return _context3.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function listUsers(_x2) {\n        return _listUsers.apply(this, arguments);\n      }\n      return listUsers;\n    }()\n  }, {\n    key: \"userInfo\",\n    value: function () {\n      var _userInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(userID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doRequest({\n                  path: \"/run/users/\".concat(userID),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context4.sent;\n                result = (0, dateParser_1.default)(result, [\"created_at\", \"updated_at\", \"last_login\"]);\n                return _context4.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function userInfo(_x3) {\n        return _userInfo.apply(this, arguments);\n      }\n      return userInfo;\n    }()\n  }, {\n    key: \"userCreate\",\n    value: function () {\n      var _userCreate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.doRequest({\n                  path: \"/run/users\",\n                  method: \"POST\",\n                  body: data\n                });\n              case 2:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function userCreate(_x4) {\n        return _userCreate.apply(this, arguments);\n      }\n      return userCreate;\n    }()\n  }, {\n    key: \"userEdit\",\n    value: function () {\n      var _userEdit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(userID, data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.doRequest({\n                  path: \"/run/users/\".concat(userID),\n                  method: \"PUT\",\n                  body: data\n                });\n              case 2:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function userEdit(_x5, _x6) {\n        return _userEdit.apply(this, arguments);\n      }\n      return userEdit;\n    }()\n  }, {\n    key: \"userDelete\",\n    value: function () {\n      var _userDelete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(userID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.doRequest({\n                  path: \"/run/users/\".concat(userID),\n                  method: \"DELETE\"\n                });\n              case 2:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function userDelete(_x7) {\n        return _userDelete.apply(this, arguments);\n      }\n      return userDelete;\n    }()\n  }, {\n    key: \"loginAsUser\",\n    value: function () {\n      var _loginAsUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(userID, options) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doRequest({\n                  path: \"/run/users/\".concat(userID, \"/login\"),\n                  params: options,\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context8.sent;\n                result = (0, dateParser_1.default)(result, [\"expire_date\"]);\n                return _context8.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function loginAsUser(_x8, _x9) {\n        return _loginAsUser.apply(this, arguments);\n      }\n      return loginAsUser;\n    }()\n  }, {\n    key: \"emailTest\",\n    value: function () {\n      var _emailTest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.doRequest({\n                  path: \"/run/email_test\",\n                  method: \"POST\",\n                  body: data\n                });\n              case 2:\n                result = _context9.sent;\n                return _context9.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function emailTest(_x10) {\n        return _emailTest.apply(this, arguments);\n      }\n      return emailTest;\n    }()\n  }, {\n    key: \"notificationList\",\n    value: function () {\n      var _notificationList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(userID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.doRequest({\n                  path: \"/run/notification/\".concat(userID),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context10.sent;\n                return _context10.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function notificationList(_x11) {\n        return _notificationList.apply(this, arguments);\n      }\n      return notificationList;\n    }()\n  }, {\n    key: \"notificationCreate\",\n    value: function () {\n      var _notificationCreate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(userID, data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.doRequest({\n                  path: \"/run/notification/\",\n                  method: \"POST\",\n                  body: _objectSpread({\n                    run_user: userID\n                  }, data)\n                });\n              case 2:\n                result = _context11.sent;\n                return _context11.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n      function notificationCreate(_x12, _x13) {\n        return _notificationCreate.apply(this, arguments);\n      }\n      return notificationCreate;\n    }()\n  }, {\n    key: \"notificationEdit\",\n    value: function () {\n      var _notificationEdit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(notificationID, data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.doRequest({\n                  path: \"/run/notification/\".concat(notificationID),\n                  method: \"PUT\",\n                  body: data\n                });\n              case 2:\n                result = _context12.sent;\n                return _context12.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n      function notificationEdit(_x14, _x15) {\n        return _notificationEdit.apply(this, arguments);\n      }\n      return notificationEdit;\n    }()\n  }, {\n    key: \"notificationDelete\",\n    value: function () {\n      var _notificationDelete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(notificationID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.doRequest({\n                  path: \"/run/notification/\".concat(notificationID),\n                  method: \"DELETE\"\n                });\n              case 2:\n                result = _context13.sent;\n                return _context13.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n      function notificationDelete(_x16) {\n        return _notificationDelete.apply(this, arguments);\n      }\n      return notificationDelete;\n    }()\n    /**\r\n     * Get the SAML Single Sign-On information for the account's RUN.\r\n     */\n  }, {\n    key: \"ssoSAMLInfo\",\n    value: function () {\n      var _ssoSAMLInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.doRequest({\n                  path: \"/run/sso/saml\",\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context14.sent;\n                return _context14.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n      function ssoSAMLInfo() {\n        return _ssoSAMLInfo.apply(this, arguments);\n      }\n      return ssoSAMLInfo;\n    }()\n    /**\r\n     * Edit the SAML Single Sign-On metadata and mappings for the account's RUN.\r\n     *\r\n     * @param data Updated data for a RUN's SAML Single Sign-On configuration.\r\n     */\n  }, {\n    key: \"ssoSAMLEdit\",\n    value: function () {\n      var _ssoSAMLEdit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.doRequest({\n                  path: \"/run/sso/saml\",\n                  method: \"PUT\",\n                  body: data\n                });\n              case 2:\n                result = _context15.sent;\n                return _context15.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n      function ssoSAMLEdit(_x17) {\n        return _ssoSAMLEdit.apply(this, arguments);\n      }\n      return ssoSAMLEdit;\n    }()\n    /**\r\n     * Create a TagoRUN custom domain for the profile.\r\n     *\r\n     * @param profile_id ID of the profile\r\n     * @param customDomainData query params\r\n     * @returns Success message.\r\n     */\n  }, {\n    key: \"createCustomDomain\",\n    value: function () {\n      var _createCustomDomain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(profile_id, customDomainData) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.doRequest({\n                  path: \"/run/customdomain/\".concat(profile_id),\n                  body: customDomainData,\n                  method: \"POST\"\n                });\n              case 2:\n                result = _context16.sent;\n                return _context16.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n      function createCustomDomain(_x18, _x19) {\n        return _createCustomDomain.apply(this, arguments);\n      }\n      return createCustomDomain;\n    }()\n    /**\r\n     * Get details of TagoRun custom domain for the profile.\r\n     *\r\n     * @param profile_id ID of the profile\r\n     * @returns Data for the profile's custom DNS configuration.\r\n     */\n  }, {\n    key: \"getCustomDomain\",\n    value: function () {\n      var _getCustomDomain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(profile_id) {\n        var result, parsedResult;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.doRequest({\n                  path: \"/run/customdomain/\".concat(profile_id),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context17.sent;\n                parsedResult = (0, dateParser_1.default)(result, [\"created_at\"]);\n                return _context17.abrupt(\"return\", parsedResult);\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n      function getCustomDomain(_x20) {\n        return _getCustomDomain.apply(this, arguments);\n      }\n      return getCustomDomain;\n    }()\n    /**\r\n     * delete a TagoRUN custom domain for the profile.\r\n     *\r\n     * @param profile_id ID of the profile\r\n     * @returns Success message.\r\n     */\n  }, {\n    key: \"deleteCustomDomain\",\n    value: function () {\n      var _deleteCustomDomain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(profile_id) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.doRequest({\n                  path: \"/run/customdomain/\".concat(profile_id),\n                  method: \"DELETE\"\n                });\n              case 2:\n                result = _context18.sent;\n                return _context18.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n      function deleteCustomDomain(_x21) {\n        return _deleteCustomDomain.apply(this, arguments);\n      }\n      return deleteCustomDomain;\n    }()\n    /**\r\n     * Regenerate a TagoRUN custom domain for the profile.\r\n     *\r\n     * @param profile_id ID of the profile\r\n     * @returns Success message.\r\n     */\n  }, {\n    key: \"regenerateCustomDomain\",\n    value: function () {\n      var _regenerateCustomDomain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(profile_id) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.doRequest({\n                  path: \"/run/customdomain/regenerate/\".concat(profile_id),\n                  method: \"PUT\"\n                });\n              case 2:\n                result = _context19.sent;\n                return _context19.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n      function regenerateCustomDomain(_x22) {\n        return _regenerateCustomDomain.apply(this, arguments);\n      }\n      return regenerateCustomDomain;\n    }()\n  }]);\n  return Run;\n}(TagoIOModule_1.default);\nexports.default = Run;","map":{"version":3,"mappings":"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","names":["Run","doRequest","path","method","result","data","body","query","params","page","fields","filter","amount","orderBy","map","userID","options","run_user","notificationID","profile_id","customDomainData","parsedResult","TagoIOModule_1","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Account\\Run.ts"],"sourcesContent":["import { GenericID, RecursivePartial } from \"../../common/common.types\";\r\nimport TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\r\nimport dateParser from \"../Utils/dateParser\";\r\nimport { NotificationCreate, NotificationInfo } from \"./notifications.types\";\r\nimport {\r\n  LoginResponse,\r\n  RunInfo,\r\n  UserCreateInfo,\r\n  UserInfo,\r\n  UserQuery,\r\n  LoginAsUserOptions,\r\n  RunSAMLInfo,\r\n  RunSAMLEditInfo,\r\n  CustomDomainCreate,\r\n  CustomDomainInfo,\r\n  CustomDomainResponse,\r\n} from \"./run.types\";\r\n\r\nclass Run extends TagoIOModule<GenericModuleParams> {\r\n  public async info(): Promise<RunInfo> {\r\n    const result = await this.doRequest<RunInfo>({\r\n      path: \"/run\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async edit(data: RecursivePartial<RunInfo>): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: \"/run\",\r\n      method: \"PUT\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async listUsers(query: UserQuery): Promise<Partial<UserInfo>[]> {\r\n    let result = await this.doRequest<Partial<UserInfo>[]>({\r\n      path: \"/run/users\",\r\n      method: \"GET\",\r\n      params: {\r\n        page: query?.page || 1,\r\n        fields: query?.fields || [\"id\", \"name\"],\r\n        filter: query?.filter || {},\r\n        amount: query?.amount || 20,\r\n        orderBy: query?.orderBy ? `${query.orderBy[0]},${query.orderBy[1]}` : \"name,asc\",\r\n      },\r\n    });\r\n\r\n    result = result.map((data) => dateParser(data, [\"created_at\", \"updated_at\", \"last_login\"]));\r\n\r\n    return result;\r\n  }\r\n\r\n  public async userInfo(userID: GenericID): Promise<UserInfo> {\r\n    let result = await this.doRequest<UserInfo>({\r\n      path: `/run/users/${userID}`,\r\n      method: \"GET\",\r\n    });\r\n\r\n    result = dateParser(result, [\"created_at\", \"updated_at\", \"last_login\"]);\r\n\r\n    return result;\r\n  }\r\n\r\n  public async userCreate(data: UserCreateInfo): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/users`,\r\n      method: \"POST\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async userEdit(userID: GenericID, data: Partial<UserInfo>): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/users/${userID}`,\r\n      method: \"PUT\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async userDelete(userID: GenericID): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/users/${userID}`,\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async loginAsUser(userID: GenericID, options?: LoginAsUserOptions): Promise<LoginResponse> {\r\n    let result = await this.doRequest<LoginResponse>({\r\n      path: `/run/users/${userID}/login`,\r\n      params: options,\r\n      method: \"GET\",\r\n    });\r\n\r\n    result = dateParser(result, [\"expire_date\"]);\r\n\r\n    return result;\r\n  }\r\n\r\n  public async emailTest(data: { subject: string; body: string }): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/email_test`,\r\n      method: \"POST\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async notificationList(userID: GenericID): Promise<NotificationInfo[]> {\r\n    const result = await this.doRequest<NotificationInfo[]>({\r\n      path: `/run/notification/${userID}`,\r\n      method: \"GET\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async notificationCreate(userID: GenericID, data: NotificationCreate): Promise<{ id: GenericID }> {\r\n    const result = await this.doRequest<{ id: GenericID }>({\r\n      path: `/run/notification/`,\r\n      method: \"POST\",\r\n      body: {\r\n        run_user: userID,\r\n        ...data,\r\n      },\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async notificationEdit(notificationID: GenericID, data: Partial<NotificationCreate>): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/notification/${notificationID}`,\r\n      method: \"PUT\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public async notificationDelete(notificationID: GenericID): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/notification/${notificationID}`,\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the SAML Single Sign-On information for the account's RUN.\r\n   */\r\n  public async ssoSAMLInfo(): Promise<RunSAMLInfo> {\r\n    const result = await this.doRequest<RunSAMLInfo>({\r\n      path: \"/run/sso/saml\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Edit the SAML Single Sign-On metadata and mappings for the account's RUN.\r\n   *\r\n   * @param data Updated data for a RUN's SAML Single Sign-On configuration.\r\n   */\r\n  public async ssoSAMLEdit(data: RunSAMLEditInfo): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: \"/run/sso/saml\",\r\n      method: \"PUT\",\r\n      body: data,\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a TagoRUN custom domain for the profile.\r\n   *\r\n   * @param profile_id ID of the profile\r\n   * @param customDomainData query params\r\n   * @returns Success message.\r\n   */\r\n  public async createCustomDomain(profile_id: string, customDomainData: CustomDomainCreate): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/customdomain/${profile_id}`,\r\n      body: customDomainData,\r\n      method: \"POST\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get details of TagoRun custom domain for the profile.\r\n   *\r\n   * @param profile_id ID of the profile\r\n   * @returns Data for the profile's custom DNS configuration.\r\n   */\r\n  public async getCustomDomain(profile_id: string): Promise<CustomDomainInfo> {\r\n    const result = await this.doRequest<CustomDomainResponse>({\r\n      path: `/run/customdomain/${profile_id}`,\r\n      method: \"GET\",\r\n    });\r\n\r\n    const parsedResult = dateParser(result, [\"created_at\"]) as unknown as CustomDomainInfo;\r\n\r\n    return parsedResult;\r\n  }\r\n\r\n  /**\r\n   * delete a TagoRUN custom domain for the profile.\r\n   *\r\n   * @param profile_id ID of the profile\r\n   * @returns Success message.\r\n   */\r\n  public async deleteCustomDomain(profile_id: string): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/customdomain/${profile_id}`,\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Regenerate a TagoRUN custom domain for the profile.\r\n   *\r\n   * @param profile_id ID of the profile\r\n   * @returns Success message.\r\n   */\r\n  public async regenerateCustomDomain(profile_id: string): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: `/run/customdomain/regenerate/${profile_id}`,\r\n      method: \"PUT\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Run;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}