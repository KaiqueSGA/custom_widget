{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nvar dateParser_1 = __importDefault(require(\"../Utils/dateParser\"));\nvar Plan = /*#__PURE__*/function (_TagoIOModule_1$defau) {\n  _inherits(Plan, _TagoIOModule_1$defau);\n  var _super = _createSuper(Plan);\n  function Plan() {\n    _classCallCheck(this, Plan);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Plan, [{\n    key: \"setPlanParameters\",\n    value:\n    /**\r\n     * Active plan and set services limit\r\n     * @param data\r\n     * @example\r\n     * data: {\r\n     *   \"plan\": \"plan_id\",\r\n     *   \"sms\": 100,\r\n     *   \"email\": 1000,\r\n     *   \"data_records\": 200000,\r\n     *   \"device_request\": 250,\r\n     *   \"analysis\": 1000\r\n     * }\r\n     */\n    function () {\n      var _setPlanParameters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.doRequest({\n                  path: \"/account/plan/\",\n                  method: \"POST\"\n                });\n              case 2:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function setPlanParameters(_x) {\n        return _setPlanParameters.apply(this, arguments);\n      }\n      return setPlanParameters;\n    }()\n    /**\r\n     * Get Active Plan and Services\r\n     */\n  }, {\n    key: \"getActivePlan\",\n    value: function () {\n      var _getActivePlan = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.doRequest({\n                  path: \"/account/plan\",\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context2.sent;\n                result = (0, dateParser_1.default)(result, [\"created_at\", \"end_date\"]);\n                return _context2.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getActivePlan() {\n        return _getActivePlan.apply(this, arguments);\n      }\n      return getActivePlan;\n    }()\n    /**\r\n     * Shows a summary of how much your account is costing, divided by sections\r\n     */\n  }, {\n    key: \"summary\",\n    value: function () {\n      var _summary = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doRequest({\n                  path: \"/billing\",\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function summary() {\n        return _summary.apply(this, arguments);\n      }\n      return summary;\n    }()\n    /**\r\n     * Get current Tago pricing\r\n     */\n  }, {\n    key: \"getCurrentPrices\",\n    value: function () {\n      var _getCurrentPrices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doRequest({\n                  path: \"/pricing\",\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function getCurrentPrices() {\n        return _getCurrentPrices.apply(this, arguments);\n      }\n      return getCurrentPrices;\n    }()\n  }]);\n  return Plan;\n}(TagoIOModule_1.default);\nexports.default = Plan;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAA6C,IAGvCA,IAAK;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACT;;;;;;;;;;;;;IAAA;MAAA,oFAaO,iBAAwBC,IAAiB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACzB,IAAI,CAACC,SAAS,CAAS;kBAC1CC,IAAI,EAAE,gBAAgB;kBACtBC,MAAM,EAAE;iBACT,CAAC;cAAA;gBAHIC,MAAM;gBAAA,iCAKLA,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACd;MAAA;QAAA;MAAA;MAAA;IAAA;IAED;;;EAAA;IAAA;IAAA;MAAA,gFAGO;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACc,IAAI,CAACH,SAAS,CAAW;kBAC1CC,IAAI,EAAE,eAAe;kBACrBC,MAAM,EAAE;iBACT,CAAC;cAAA;gBAHEC,MAAM;gBAKVA,MAAM,GAAG,wBAAU,EAACA,MAAM,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAAC,kCAEjDA,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACd;MAAA;QAAA;MAAA;MAAA;IAAA;IAED;;;EAAA;IAAA;IAAA;MAAA,0EAGO;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACgB,IAAI,CAACH,SAAS,CAAU;kBAC3CC,IAAI,EAAE,UAAU;kBAChBC,MAAM,EAAE;iBACT,CAAC;cAAA;gBAHIC,MAAM;gBAAA,kCAKLA,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACd;MAAA;QAAA;MAAA;MAAA;IAAA;IAED;;;EAAA;IAAA;IAAA;MAAA,mFAGO;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACgB,IAAI,CAACH,SAAS,CAAgB;kBACjDC,IAAI,EAAE,UAAU;kBAChBC,MAAM,EAAE;iBACT,CAAC;cAAA;gBAHIC,MAAM;gBAAA,kCAKLA,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACd;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EA3DgBC,sBAAiC;AA8DpDC,kBAAeP,IAAI","names":["Plan","data","doRequest","path","method","result","TagoIOModule_1","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Account\\Plan.ts"],"sourcesContent":["import TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\r\nimport dateParser from \"../Utils/dateParser\";\r\nimport { CurrentPrices, PlanInfo, PlanSetInfo, Summary } from \"./plan.types\";\r\n\r\nclass Plan extends TagoIOModule<GenericModuleParams> {\r\n  /**\r\n   * Active plan and set services limit\r\n   * @param data\r\n   * @example\r\n   * data: {\r\n   *   \"plan\": \"plan_id\",\r\n   *   \"sms\": 100,\r\n   *   \"email\": 1000,\r\n   *   \"data_records\": 200000,\r\n   *   \"device_request\": 250,\r\n   *   \"analysis\": 1000\r\n   * }\r\n   */\r\n  public async setPlanParameters(data: PlanSetInfo): Promise<string> {\r\n    const result = await this.doRequest<string>({\r\n      path: \"/account/plan/\",\r\n      method: \"POST\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get Active Plan and Services\r\n   */\r\n  public async getActivePlan(): Promise<PlanInfo> {\r\n    let result = await this.doRequest<PlanInfo>({\r\n      path: \"/account/plan\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    result = dateParser(result, [\"created_at\", \"end_date\"]);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Shows a summary of how much your account is costing, divided by sections\r\n   */\r\n  public async summary(): Promise<Summary> {\r\n    const result = await this.doRequest<Summary>({\r\n      path: \"/billing\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get current Tago pricing\r\n   */\r\n  public async getCurrentPrices(): Promise<CurrentPrices> {\r\n    const result = await this.doRequest<CurrentPrices>({\r\n      path: \"/pricing\",\r\n      method: \"GET\",\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Plan;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}