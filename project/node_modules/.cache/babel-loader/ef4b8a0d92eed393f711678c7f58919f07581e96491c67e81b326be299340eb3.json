{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Account_1 = __importDefault(require(\"../Account/Account\"));\nconst path_1 = __importDefault(require(\"path\"));\n/**\n * Upload a file and return it's URL.\n */\nasync function uploadFile(account, options) {\n  if (!(account instanceof Account_1.default)) {\n    throw \"The parameter 'account' must be an instance of a TagoIO Account.\";\n  }\n  const {\n    id: account_id\n  } = await account.info();\n  if (options.path) {\n    if (!options.path.includes(\"/\")) {\n      throw `Invalid file path: ${options.path}`;\n    }\n    if (options.path.startsWith(\"/\")) {\n      options.path = options.path.substring(1);\n    }\n  }\n  const fixed_path = path_1.default.join(options.path || \"\", options.filename);\n  const body = {\n    file: options.file_base64,\n    filename: fixed_path\n  };\n  await account.files.uploadBase64([{\n    ...body,\n    public: options.public || true\n  }]);\n  return `https://api.tago.io/file/${account_id}/${fixed_path}`;\n}\nexports.default = uploadFile;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAEA;AAIA;;;AAGA,eAAeA,UAAU,CAACC,OAAgB,EAAEC,OAA0B;EACpE,IAAI,EAAED,OAAO,YAAYE,iBAAO,CAAC,EAAE;IACjC,MAAM,kEAAkE;;EAG1E,MAAM;IAAEC,EAAE,EAAEC;EAAU,CAAE,GAAG,MAAMJ,OAAO,CAACK,IAAI,EAAE;EAE/C,IAAIJ,OAAO,CAACK,IAAI,EAAE;IAChB,IAAI,CAACL,OAAO,CAACK,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC/B,MAAM,sBAAsBN,OAAO,CAACK,IAAI,EAAE;;IAG5C,IAAIL,OAAO,CAACK,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;MAChCP,OAAO,CAACK,IAAI,GAAGL,OAAO,CAACK,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;;;EAI5C,MAAMC,UAAU,GAAGC,cAAI,CAACC,IAAI,CAACX,OAAO,CAACK,IAAI,IAAI,EAAE,EAAEL,OAAO,CAACY,QAAQ,CAAC;EAElE,MAAMC,IAAI,GAAG;IAAEC,IAAI,EAAEd,OAAO,CAACe,WAAW;IAAEH,QAAQ,EAAEH;EAAU,CAAE;EAChE,MAAMV,OAAO,CAACiB,KAAK,CAACC,YAAY,CAAC,CAAC;IAAE,GAAGJ,IAAI;IAAEK,MAAM,EAAElB,OAAO,CAACkB,MAAM,IAAI;EAAI,CAAE,CAAC,CAAC;EAE/E,OAAO,4BAA4Bf,UAAU,IAAIM,UAAU,EAAE;AAC/D;AAEAU,kBAAerB,UAAU","names":["uploadFile","account","options","Account_1","id","account_id","info","path","includes","startsWith","substring","fixed_path","path_1","join","filename","body","file","file_base64","files","uploadBase64","public","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Utils\\uploadFile.ts"],"sourcesContent":["import Account from \"../Account/Account\";\nimport { UploadFileOptions } from \"./utils.types\";\nimport path from \"path\";\n\ntype FileURL = string;\n\n/**\n * Upload a file and return it's URL.\n */\nasync function uploadFile(account: Account, options: UploadFileOptions): Promise<FileURL> {\n  if (!(account instanceof Account)) {\n    throw \"The parameter 'account' must be an instance of a TagoIO Account.\";\n  }\n\n  const { id: account_id } = await account.info();\n\n  if (options.path) {\n    if (!options.path.includes(\"/\")) {\n      throw `Invalid file path: ${options.path}`;\n    }\n\n    if (options.path.startsWith(\"/\")) {\n      options.path = options.path.substring(1);\n    }\n  }\n\n  const fixed_path = path.join(options.path || \"\", options.filename);\n\n  const body = { file: options.file_base64, filename: fixed_path };\n  await account.files.uploadBase64([{ ...body, public: options.public || true }]);\n\n  return `https://api.tago.io/file/${account_id}/${fixed_path}`;\n}\n\nexport default uploadFile;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}