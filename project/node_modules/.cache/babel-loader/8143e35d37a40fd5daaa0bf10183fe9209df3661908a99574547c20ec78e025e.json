{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yudji\\\\OneDrive\\\\Documentos\\\\SGA\\\\WIDGETS\\\\mqtt_wid\\\\dash_mqtt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Account,\n  Device,\n  Services\n} = require('@tago-io/sdk');\nconst notify = message => toast.success(message);\nconst error = message => toast.error(message);\nlet render = 0;\nfunction App() {\n  _s();\n  const account = new Account({\n    token: \"191363cf-b92e-4700-8d9f-ca21d9e9783b\"\n  });\n  const [arrayOfdevices, setArray] = useState([]);\n  let parameters_values = new Array();\n  async function listdevices() {\n    let filter = {\n      tags: [{\n        key: \"TYPE\",\n        value: \"MQTT\"\n      }]\n    };\n    let listResponse = await account.devices.list({\n      filter\n    });\n    render++;\n    render === 1 ? setArray(listResponse) : console.log();\n  }\n  useEffect(() => {\n    listdevices();\n  });\n  window.TagoIO.onStart(widget => {\n    window.widget = widget;\n  });\n  window.TagoIO.ready();\n  const get_configuration_parameters = async device_token => {\n    try {\n      const myDevice = new Device({\n        token: device_token\n      });\n      parameters_values = [];\n      const result = await myDevice.getParameters();\n      result.forEach(parameter => parameters_values.push({\n        key: parameter.key,\n        value: parameter.value\n      })); //in this code line, i'm catching all the values of device's configuration parameter and i'm storing in an array. \n    } catch (err) {\n      error(`${err}, please verify the device's tag. Something can be wrong`);\n    }\n  };\n  const send_mqtt_to_device = async device_name => {\n    try {} catch (err) {\n      error(err);\n    }\n  };\n  async function insertParam() {\n    let selectDevice = document.getElementById(\"devices\");\n    let device_id = selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];\n    let device_name = selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];\n    const get_device_token = async () => {\n      let paralist = await account.devices.paramList(device_id);\n      let search_device_token = paralist.find(item => item.key === 'device_token');\n      return search_device_token.value;\n    };\n    await get_configuration_parameters(await get_device_token());\n    await send_mqtt_to_device(device_name);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cabecalho\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Enviar Comando\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldOfSelection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" label_dev\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"drop\",\n            alt: \"\",\n            src: \"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_label\",\n            children: \"Select the device to configure it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"devices\",\n            className: \"devices\",\n            children: arrayOfdevices.map(item => {\n              try {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: `${item.id},${item.name}`,\n                  children: [\" \", item.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 49\n                }, this);\n              } catch (err) {\n                error(err);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rodape\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: insertParam,\n            children: \"Sent MQTT Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"soqvaxEfebdLx7UzOpU9BjCchwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ToastContainer","toast","Account","Device","Services","require","notify","message","success","error","render","App","account","token","arrayOfdevices","setArray","parameters_values","Array","listdevices","filter","tags","key","value","listResponse","devices","list","console","log","window","TagoIO","onStart","widget","ready","get_configuration_parameters","device_token","myDevice","result","getParameters","forEach","parameter","push","err","send_mqtt_to_device","device_name","insertParam","selectDevice","document","getElementById","device_id","options","selectedIndex","split","get_device_token","paralist","paramList","search_device_token","find","item","map","id","name"],"sources":["C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst {Account, Device, Services} = require('@tago-io/sdk'); \n\n    \n    const notify = (message) => toast.success(message);\n    const error = (message) => toast.error(message) \n    \n\n\nlet render = 0;\nfunction App() {\n   const account = new Account({token:\"191363cf-b92e-4700-8d9f-ca21d9e9783b\"});\n   const [arrayOfdevices,setArray] = useState([]);\n   let parameters_values = new Array();\n    \n\n    async function listdevices(){\n        let filter = {\n            tags:[\n                  {\n                    key:\"TYPE\",\n                    value:\"MQTT\"\n                  },\n                 ]\n         }\n        let listResponse =  await account.devices.list({filter});\n        \n        render++;\n           render === 1 ? setArray(listResponse)\n                                     : console.log()\n       } \n\n\n        useEffect( () => {\n            listdevices()\n        } )\n        \n\n   \n        window.TagoIO.onStart((widget) => {\n            window.widget = widget;\n        })\n        window.TagoIO.ready();\n\n\n\n\n        const get_configuration_parameters = async (device_token) => {\n            try{\n                 const myDevice = new Device({ token: device_token });\n                 parameters_values = [];\n\n                 const result = await myDevice.getParameters();\n                 result.forEach((parameter) => parameters_values.push({\n                      key:parameter.key,\n                      value:parameter.value\n                   })\n                 );//in this code line, i'm catching all the values of device's configuration parameter and i'm storing in an array. \n   \n             }catch(err){\n               error(`${err}, please verify the device's tag. Something can be wrong`)\n             }\n\n           };\n\n\n\n\n           const send_mqtt_to_device = async (device_name) => {\n              try{\n\n              }catch(err){\n                error(err)\n              }\n                \n                \n\n           }\n\n           \n       \n\n        async function insertParam(){\n            let selectDevice = document.getElementById(\"devices\");\n            let device_id = selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];\n            let device_name = selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];   \n            \n\n            const get_device_token = async() => {\n                let paralist = await account.devices.paramList(device_id);\n                let search_device_token = paralist.find(item => item.key === 'device_token');\n                return search_device_token.value;\n            };\n            \n         \n            await get_configuration_parameters(await get_device_token());\n            await send_mqtt_to_device(device_name);\n \n      }\n\n\n        return(\n             <div className=\"container\">\n                <ToastContainer />\n                    <div className=\"box\">\n                        \n                        <div className =\"cabecalho\">\n                            <div className =\"title\">Enviar Comando</div>\n                        </div>\n                        \n                        \n                        <div className =\"fieldOfSelection\">\n                \n                            <div className=\" label_dev\">\n                                <img className =\"drop\" alt='' src=\"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\" />\n                                <div className =\"title_label\">Select the device to configure it</div> \n                            </div>\n                \n                \n                              <div className=\"input\">\n                                    <select id=\"devices\" className =\"devices\">\n                                    {arrayOfdevices.map((item) =>{\n                                        try{\n                                            return(\n                                                <option value={`${item.id},${item.name}`}> {item.name} </option>\n                                            )\n                                        }catch(err){\n                                           error(err)\n                                        }\n                                      \n                                    })}\n                                    </select>\n                                </div>  \n                                \n                \n                            \n                \n                            <div className=\"rodape\">\n                                 <button className=\"button\" onClick={insertParam} >\n                                    Sent MQTT Message\n                                </button> \n                            </div>\n                \n                \n                        </div>\n                        \n                    \n                \n                    </div>  \n                    \n                   \n                </div>\n           \n        )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}