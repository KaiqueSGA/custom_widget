{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convert(oldWidget) {\n  const oldDisplay = oldWidget.display || {};\n  const newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      hour_visualization: oldDisplay?.clock_visualization || \"\",\n      limit: {\n        enabled: !!oldDisplay?.enable_limit,\n        maximum: oldDisplay?.maximum || 100,\n        minimum: oldDisplay?.minimum || 0\n      },\n      number_format: {\n        decimals: -1,\n        show_thousand: false\n      },\n      show_unit: !!oldDisplay?.show_unit,\n      show_variables: !oldDisplay?.hide_variables,\n      step_value: oldDisplay?.increment || 1,\n      theme: {\n        color: {\n          background: null,\n          button: oldDisplay?.conditions_button,\n          text: null,\n          value: oldDisplay?.conditions_text\n        }\n      },\n      type: oldDisplay?.input_type,\n      unit: oldDisplay?.unit || \"\"\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"step_button\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    for (const item of oldWidget.data) {\n      if (item?.is_hide) {\n        continue;\n      }\n      for (const variable of item.variables) {\n        const key = `${item?.origin}${variable}`;\n        if (oldDisplay?.vars_format?.[key]) {\n          newStructure.display.number_format = oldDisplay?.vars_format?.[key];\n        }\n        if (oldDisplay?.vars_labels?.[key] && oldDisplay?.vars_labels?.[key] !== variable) {\n          newStructure.display.alias = oldDisplay?.vars_labels?.[key];\n        }\n      }\n    }\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  const isOld = !!(widget?.display?.input_type || widget?.display?.vars_labels || widget?.display?.vars_format || widget?.display?.conditions_button);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":";;;;;;AAMA,SAAgBA,OAAO,CAACC,SAAc;EACpC,MAAMC,UAAU,GAAGD,SAAS,CAACE,OAAO,IAAI,EAAE;EAE1C,MAAMC,YAAY,GAAQ;IACxBC,SAAS,EAAEJ,SAAS,CAACI,SAAS;IAC9BF,OAAO,EAAE;MACPG,KAAK,EAAE,EAAE;MACTC,cAAc,EAAEL,UAAU,CAACK,cAAc,IAAI,EAAE;MAC/CC,IAAI,EAAEN,UAAU,CAACM,IAAI,IAAI,EAAE;MAC3BC,kBAAkB,EAAEP,UAAU,EAAEQ,mBAAmB,IAAI,EAAE;MACzDC,KAAK,EAAE;QACLC,OAAO,EAAE,CAAC,CAACV,UAAU,EAAEW,YAAY;QACnCC,OAAO,EAAEZ,UAAU,EAAEY,OAAO,IAAI,GAAG;QACnCC,OAAO,EAAEb,UAAU,EAAEa,OAAO,IAAI;OACjC;MACDC,aAAa,EAAE;QACbC,QAAQ,EAAE,CAAC,CAAC;QACZC,aAAa,EAAE;OAChB;MACDC,SAAS,EAAE,CAAC,CAACjB,UAAU,EAAEiB,SAAS;MAClCC,cAAc,EAAE,CAAClB,UAAU,EAAEmB,cAAc;MAC3CC,UAAU,EAAEpB,UAAU,EAAEqB,SAAS,IAAI,CAAC;MACtCC,KAAK,EAAE;QACLC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAEzB,UAAU,EAAE0B,iBAAiB;UACrCC,IAAI,EAAE,IAAI;UACVC,KAAK,EAAE5B,UAAU,EAAE6B;;OAEtB;MACDC,IAAI,EAAE9B,UAAU,EAAE+B,UAAU;MAC5BC,IAAI,EAAEhC,UAAU,EAAEgC,IAAI,IAAI;KAC3B;IACDC,EAAE,EAAElC,SAAS,CAACkC,EAAE;IAChBC,KAAK,EAAEnC,SAAS,CAACmC,KAAK;IACtBC,QAAQ,EAAE,IAAI;IACdL,IAAI,EAAE;GACP;EAED,IAAIM,KAAK,CAACC,OAAO,CAACtC,SAAS,CAACuC,IAAI,CAAC,EAAE;IACjC,KAAK,MAAMC,IAAI,IAAIxC,SAAS,CAACuC,IAAI,EAAE;MACjC,IAAIC,IAAI,EAAEC,OAAO,EAAE;QACjB;;MAEF,KAAK,MAAMC,QAAQ,IAAIF,IAAI,CAACG,SAAS,EAAE;QACrC,MAAMC,GAAG,GAAG,GAAGJ,IAAI,EAAEK,MAAM,GAAGH,QAAQ,EAAE;QACxC,IAAIzC,UAAU,EAAE6C,WAAW,GAAGF,GAAG,CAAC,EAAE;UAClCzC,YAAY,CAACD,OAAO,CAACa,aAAa,GAAGd,UAAU,EAAE6C,WAAW,GAAGF,GAAG,CAAC;;QAGrE,IAAI3C,UAAU,EAAE8C,WAAW,GAAGH,GAAG,CAAC,IAAI3C,UAAU,EAAE8C,WAAW,GAAGH,GAAG,CAAC,KAAKF,QAAQ,EAAE;UACjFvC,YAAY,CAACD,OAAO,CAACG,KAAK,GAAGJ,UAAU,EAAE8C,WAAW,GAAGH,GAAG,CAAC;;;;IAKjEzC,YAAY,CAACoC,IAAI,GAAGvC,SAAS,CAACuC,IAAI;;EAEpC,OAAOpC,YAAY;AACrB;AA3DA6C;AA6DA,SAAgBC,cAAc,CAACC,MAAW;EACxC,MAAMC,KAAK,GAAG,CAAC,EACbD,MAAM,EAAEhD,OAAO,EAAE8B,UAAU,IAC3BkB,MAAM,EAAEhD,OAAO,EAAE6C,WAAW,IAC5BG,MAAM,EAAEhD,OAAO,EAAE4C,WAAW,IAC5BI,MAAM,EAAEhD,OAAO,EAAEyB,iBAAiB,CACnC;EAED,OAAOwB,KAAK;AACd;AATAH","names":["convert","oldWidget","oldDisplay","display","newStructure","dashboard","alias","header_buttons","help","hour_visualization","clock_visualization","limit","enabled","enable_limit","maximum","minimum","number_format","decimals","show_thousand","show_unit","show_variables","hide_variables","step_value","increment","theme","color","background","button","conditions_button","text","value","conditions_text","type","input_type","unit","id","label","realtime","Array","isArray","data","item","is_hide","variable","variables","key","origin","vars_format","vars_labels","exports","isOldStructure","widget","isOld"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\stepbutton.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old STEP BUTTON to new STEP BUTTON\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      hour_visualization: oldDisplay?.clock_visualization || \"\",\n      limit: {\n        enabled: !!oldDisplay?.enable_limit,\n        maximum: oldDisplay?.maximum || 100,\n        minimum: oldDisplay?.minimum || 0,\n      },\n      number_format: {\n        decimals: -1,\n        show_thousand: false,\n      },\n      show_unit: !!oldDisplay?.show_unit,\n      show_variables: !oldDisplay?.hide_variables,\n      step_value: oldDisplay?.increment || 1,\n      theme: {\n        color: {\n          background: null,\n          button: oldDisplay?.conditions_button,\n          text: null,\n          value: oldDisplay?.conditions_text,\n        },\n      },\n      type: oldDisplay?.input_type,\n      unit: oldDisplay?.unit || \"\",\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"step_button\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    for (const item of oldWidget.data) {\n      if (item?.is_hide) {\n        continue;\n      }\n      for (const variable of item.variables) {\n        const key = `${item?.origin}${variable}`;\n        if (oldDisplay?.vars_format?.[key]) {\n          newStructure.display.number_format = oldDisplay?.vars_format?.[key];\n        }\n\n        if (oldDisplay?.vars_labels?.[key] && oldDisplay?.vars_labels?.[key] !== variable) {\n          newStructure.display.alias = oldDisplay?.vars_labels?.[key];\n        }\n      }\n    }\n\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(\n    widget?.display?.input_type ||\n    widget?.display?.vars_labels ||\n    widget?.display?.vars_format ||\n    widget?.display?.conditions_button\n  );\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}