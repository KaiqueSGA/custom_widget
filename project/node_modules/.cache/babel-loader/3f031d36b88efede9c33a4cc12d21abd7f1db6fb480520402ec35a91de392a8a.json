{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nclass SDB extends TagoIOModule_1.default {\n  /**\r\n   * Retrieves a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   */\n  async getItem(tagoRunURL, key) {\n    const result = await this.doRequest({\n      path: `/run/${tagoRunURL}/sdb/${key}`,\n      method: \"GET\"\n    });\n    return result;\n  }\n  /**\r\n   * Creates or updates a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   * @param value Value of the parameter\r\n   */\n  async setItem(tagoRunURL, key, value) {\n    const result = await this.doRequest({\n      path: `/run/${tagoRunURL}/sdb/${key}`,\n      method: \"POST\",\n      body: value\n    });\n    return result;\n  }\n  /**\r\n   * Delete a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   */\n  async removeItem(tagoRunURL, key) {\n    const result = await this.doRequest({\n      path: `/run/${tagoRunURL}/sdb/${key}`,\n      method: \"DELETE\"\n    });\n    return result;\n  }\n}\nexports.default = SDB;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAEA,MAAMA,GAAI,SAAQC,sBAAiC;EACjD;;;;;;EAMO,MAAMC,OAAO,CAACC,UAAkB,EAAEC,GAAW;IAClD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAM;MACvCC,IAAI,EAAE,QAAQJ,UAAU,QAAQC,GAAG,EAAE;MACrCI,MAAM,EAAE;KACT,CAAC;IACF,OAAOH,MAAM;EACf;EAEA;;;;;;;EAOO,MAAMI,OAAO,CAACN,UAAkB,EAAEC,GAAW,EAAEM,KAAa;IACjE,MAAML,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAM;MACvCC,IAAI,EAAE,QAAQJ,UAAU,QAAQC,GAAG,EAAE;MACrCI,MAAM,EAAE,MAAM;MACdG,IAAI,EAAED;KACP,CAAC;IACF,OAAOL,MAAM;EACf;EAEA;;;;;;EAMO,MAAMO,UAAU,CAACT,UAAkB,EAAEC,GAAW;IACrD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAM;MACvCC,IAAI,EAAE,QAAQJ,UAAU,QAAQC,GAAG,EAAE;MACrCI,MAAM,EAAE;KACT,CAAC;IACF,OAAOH,MAAM;EACf;;AAGFQ,kBAAeb,GAAG","names":["SDB","TagoIOModule_1","getItem","tagoRunURL","key","result","doRequest","path","method","setItem","value","body","removeItem","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\RunUser\\SDB.ts"],"sourcesContent":["import TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\r\n\r\nclass SDB extends TagoIOModule<GenericModuleParams> {\r\n  /**\r\n   * Retrieves a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   */\r\n  public async getItem(tagoRunURL: string, key: string): Promise<any> {\r\n    const result = await this.doRequest<any>({\r\n      path: `/run/${tagoRunURL}/sdb/${key}`,\r\n      method: \"GET\",\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates or updates a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   * @param value Value of the parameter\r\n   */\r\n  public async setItem(tagoRunURL: string, key: string, value: string): Promise<any> {\r\n    const result = await this.doRequest<any>({\r\n      path: `/run/${tagoRunURL}/sdb/${key}`,\r\n      method: \"POST\",\r\n      body: value,\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Delete a custom parameter of a Run user.\r\n   * The Run user is identified by the token in the constructor.\r\n   * @param tagoRunURL TagoIO Run url without http\r\n   * @param key Identifier of the parameter\r\n   */\r\n  public async removeItem(tagoRunURL: string, key: string): Promise<any> {\r\n    const result = await this.doRequest<any>({\r\n      path: `/run/${tagoRunURL}/sdb/${key}`,\r\n      method: \"DELETE\",\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default SDB;\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}