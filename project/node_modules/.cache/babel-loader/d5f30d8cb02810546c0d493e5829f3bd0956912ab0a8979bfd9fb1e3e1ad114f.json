{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useEffect,useState}from'react';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require('@tago-io/sdk'),Account=_require.Account,Device=_require.Device,Services=_require.Services;var notify=function notify(message){return toast.success(message);};var error=function error(message){return toast.error(message);};var render=0;function App(){var account=new Account({token:\"191363cf-b92e-4700-8d9f-ca21d9e9783b\"});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),arrayOfdevices=_useState2[0],setArray=_useState2[1];var parameters_values=new Array();function listdevices(){return _listdevices.apply(this,arguments);}function _listdevices(){_listdevices=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var filter,listResponse;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:filter={tags:[{key:\"TYPE\",value:\"MQTT\"}]};_context3.next=3;return account.devices.list({filter:filter});case 3:listResponse=_context3.sent;render++;render===1?setArray(listResponse):console.log();case 6:case\"end\":return _context3.stop();}}},_callee3);}));return _listdevices.apply(this,arguments);}useEffect(function(){listdevices();});window.TagoIO.onStart(function(widget){window.widget=widget;});window.TagoIO.ready();var get_configuration_parameters=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(device_token){var myDevice,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;myDevice=new Device({token:device_token});parameters_values=[];_context.next=5;return myDevice.getParameters();case 5:result=_context.sent;result.forEach(function(parameter){return parameters_values.push({key:parameter.key,value:parameter.value});});//in this code line, i'm catching all the values of device's configuration parameter and i'm storing in an array. \n_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);error(\"\".concat(_context.t0,\", please verify the device's tag. Something can be wrong\"));console.log(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function get_configuration_parameters(_x){return _ref.apply(this,arguments);};}();var send_mqtt_to_device=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(device_name){var formated_string,options,MQTT;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{formated_string=\"ID=\".concat(Math.floor(Math.random()*1000000000).toString(16),\",MODE=\").concat(parameters_values.find(function(parameter){return parameter.key==='mode';}).value,\",TIMER_GPRS=\").concat(parameters_values.find(function(parameter){return parameter.key==='TIMER_GPRS';}).value,\",TIMER_GPS=\").concat(parameters_values.find(function(parameter){return parameter.key==='TIMER_GPS';}).value,\",TIMER_SMS=\").concat(parameters_values.find(function(parameter){return parameter.key==='TIMER_SMS';}).value,\",CMD=\").concat(parameters_values.find(function(parameter){return parameter.key==='CMD';}).value);options={retain:false,qos:2};MQTT=new Services({token:\"61f848bb-e3d0-4a13-836a-ef90d84834c3\"}).MQTT;//this toke it's a token of an external analysis. It will be static\nMQTT.publish({bucket:arrayOfdevices.find(function(dev){return dev.name===device_name;}).id,//device's bucket ? FROM CONTEXT OR SCOPE\nmessage:JSON.stringify(formated_string),//the MQTT message\ntopic:arrayOfdevices.find(function(dev){return dev.name===device_name;}).tags.find(function(tag){return tag.key===\"ESN\";}).value,//ESN or IMEI\noptions:options}).then(function(resp){return notify(resp);}).catch(function(err){error(err);console.log(err);});}catch(err){error(\"Something went wrong. Please, verify if the tags of your device are right.\");console.log(err);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function send_mqtt_to_device(_x2){return _ref2.apply(this,arguments);};}();function send_message(){return _send_message.apply(this,arguments);}function _send_message(){_send_message=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var selectDevice,device_id,device_name,get_device_token;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:selectDevice=document.getElementById(\"devices\");device_id=selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];device_name=selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];get_device_token=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var paralist,search_device_token;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return account.devices.paramList(device_id);case 3:paralist=_context4.sent;search_device_token=paralist.find(function(item){return item.key==='device_token';});return _context4.abrupt(\"return\",search_device_token.value);case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);error(_context4.t0);console.log(_context4.t0);case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function get_device_token(){return _ref3.apply(this,arguments);};}();_context5.t0=get_configuration_parameters;_context5.next=7;return get_device_token();case 7:_context5.t1=_context5.sent;_context5.next=10;return(0,_context5.t0)(_context5.t1);case 10:_context5.next=12;return send_mqtt_to_device(device_name);case 12:case\"end\":return _context5.stop();}}},_callee5);}));return _send_message.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cabecalho\",children:/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Enviar Comando\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"fieldOfSelection\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\" label_dev\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"drop\",alt:\"\",src:\"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\"}),/*#__PURE__*/_jsx(\"div\",{className:\"title_label\",children:\"Select the device to configure it\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input\",children:/*#__PURE__*/_jsx(\"select\",{id:\"devices\",className:\"devices\",children:arrayOfdevices.map(function(item){try{return/*#__PURE__*/_jsxs(\"option\",{value:\"\".concat(item.id,\",\").concat(item.name),children:[\" \",item.name,\" \"]});}catch(err){error(err);}})})}),/*#__PURE__*/_jsx(\"div\",{className:\"rodape\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:send_message,children:\"Sent MQTT Message\"})})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","ToastContainer","toast","require","Account","Device","Services","notify","message","success","error","render","App","account","token","arrayOfdevices","setArray","parameters_values","Array","listdevices","filter","tags","key","value","devices","list","listResponse","console","log","window","TagoIO","onStart","widget","ready","get_configuration_parameters","device_token","myDevice","getParameters","result","forEach","parameter","push","send_mqtt_to_device","device_name","formated_string","Math","floor","random","toString","find","options","retain","qos","MQTT","publish","bucket","dev","name","id","JSON","stringify","topic","tag","then","resp","catch","err","send_message","selectDevice","document","getElementById","device_id","selectedIndex","split","get_device_token","paramList","paralist","search_device_token","item","map"],"sources":["C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst {Account, Device, Services} = require('@tago-io/sdk'); \n\n    \n    const notify = (message) => toast.success(message);\n    const error = (message) => toast.error(message) \n    \n\n\nlet render = 0;\nfunction App() {\n   const account = new Account({token:\"191363cf-b92e-4700-8d9f-ca21d9e9783b\"});\n   const [arrayOfdevices,setArray] = useState([]);\n   let parameters_values = new Array();\n    \n\n    async function listdevices(){\n        let filter = {\n            tags:[\n                  {\n                    key:\"TYPE\",\n                    value:\"MQTT\"\n                  },\n                 ]\n         }\n        let listResponse =  await account.devices.list({filter});\n        \n        render++;\n           render === 1 ? setArray(listResponse)\n                                     : console.log()\n       } \n\n\n        useEffect( () => {\n            listdevices()\n        } )\n        \n\n   \n        window.TagoIO.onStart((widget) => {\n            window.widget = widget;\n        })\n        window.TagoIO.ready();\n\n\n\n\n        const get_configuration_parameters = async (device_token) => {\n            try{\n                 const myDevice = new Device({ token: device_token });\n                 parameters_values = [];\n\n                 const result = await myDevice.getParameters();\n                 result.forEach((parameter) => parameters_values.push({\n                      key:parameter.key,\n                      value:parameter.value\n                   })\n                 );//in this code line, i'm catching all the values of device's configuration parameter and i'm storing in an array. \n   \n             }catch(err){\n               error(`${err}, please verify the device's tag. Something can be wrong`);\n               console.log(err)\n             }\n\n           };\n\n\n\n\n           const send_mqtt_to_device = async (device_name) => {\n              try{\n\n                    let formated_string = `ID=${(Math.floor(Math.random() * 1000000000)).toString(16)},MODE=${ (parameters_values.find((parameter) => {return parameter.key === 'mode'})).value  },TIMER_GPRS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_GPRS'})).value  },TIMER_GPS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_GPS'})).value  },TIMER_SMS=${ (parameters_values.find((parameter) => {return parameter.key === 'TIMER_SMS'})).value  },CMD=${ (parameters_values.find((parameter) => {return parameter.key === 'CMD'})).value  }`;\n                    const options = { retain: false, qos: 2 };\n                    \n                    \n                    const MQTT = new Services({ token: \"61f848bb-e3d0-4a13-836a-ef90d84834c3\"}).MQTT;//this toke it's a token of an external analysis. It will be static\n                    MQTT.publish({\n                        bucket: (arrayOfdevices.find((dev) => dev.name === device_name)).id , //device's bucket ? FROM CONTEXT OR SCOPE\n                        message: JSON.stringify(formated_string), //the MQTT message\n                        topic: (arrayOfdevices.find((dev) => dev.name === device_name)).tags.find(tag => { return tag.key === \"ESN\"}).value, //ESN or IMEI\n                        options,\n                    })\n                      .then((resp) => notify(resp))   \n                      .catch((err) => {error(err); console.log(err)}) \n\n              }catch(err){\n                error(\"Something went wrong. Please, verify if the tags of your device are right.\");\n                console.log(err)\n              }\n                \n           }\n\n           \n       \n\n        async function send_message(){\n            let selectDevice = document.getElementById(\"devices\");\n            let device_id = selectDevice.options[selectDevice.selectedIndex].value.split(',')[0];\n            let device_name = selectDevice.options[selectDevice.selectedIndex].value.split(\",\")[1];   \n            \n\n            const get_device_token = async() => {\n              try{\n\n                let paralist = await account.devices.paramList(device_id);\n                let search_device_token = paralist.find(item => item.key === 'device_token');\n                return search_device_token.value;\n\n              }catch(err){\n                  error(err);\n                  console.log(err)\n              }\n               \n            };\n            \n         \n            await get_configuration_parameters(await get_device_token());\n            await send_mqtt_to_device(device_name);\n \n      }\n\n\n        return(\n             <div className=\"container\">\n                <ToastContainer />\n                    <div className=\"box\">\n                        \n                        <div className =\"cabecalho\">\n                            <div className =\"title\">Enviar Comando</div>\n                        </div>\n                        \n                        \n                        <div className =\"fieldOfSelection\">\n                \n                            <div className=\" label_dev\">\n                                <img className =\"drop\" alt='' src=\"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\" />\n                                <div className =\"title_label\">Select the device to configure it</div> \n                            </div>\n                \n                \n                              <div className=\"input\">\n                                    <select id=\"devices\" className =\"devices\">\n                                    {arrayOfdevices.map((item) =>{\n                                        try{\n                                            return(\n                                                <option value={`${item.id},${item.name}`}> {item.name} </option>\n                                            )\n                                        }catch(err){\n                                           error(err)\n                                        }\n                                      \n                                    })}\n                                    </select>\n                                </div>  \n                                \n                \n                            \n                \n                            <div className=\"rodape\">\n                                 <button className=\"button\" onClick={send_message} >\n                                    Sent MQTT Message\n                                </button> \n                            </div>\n                \n                \n                        </div>\n                        \n                    \n                \n                    </div>  \n                    \n                   \n                </div>\n           \n        )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}