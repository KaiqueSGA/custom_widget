{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yudji\\\\OneDrive\\\\Documentos\\\\SGA\\\\WIDGETS\\\\mqtt_wid\\\\dash_mqtt\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n/* const {Account} = require('@tago-io/sdk'); */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet render = 0;\nfunction App() {\n  /* const account = new Account({token:\"a394b4c9-7ea7-4346-bbe1-ddb35f9bc948\"});\n    console.log(\"teste3\")\n    const [arrayOfdevices,setArray] = useState([]);\n     const notify = () => toast.success(\"Configuration performed!\");\n    const toastAlert = () => toast.error(\"Configuration already exists!\");\n    const AlertError = () => toast.error(\"There are more than 1 comands in the queue, it's not possible to add more commands.\");\n    const error = () => toast.error(\"There is a command in the file, it's not possible to add more commands before of execute that is in the file.\")\n    \n     async function listdevices(){\n        console.log('ativou')\n        let listResponse =  await account.devices.list();\n        \n        render++;\n           render === 1 ? setArray(listResponse)\n                                     : console.log()\n       } \n  \n        useEffect( () => {\n            listdevices()\n        } )\n        \n   \n         window.TagoIO.onStart((widget) => {\n            window.widget = widget;\n        })\n        window.TagoIO.ready();\n        console.log('teste')\n  \n        function subscribe(idDevice,idParam,code){\n            account.devices.paramSet(idDevice,{key:\"CMD\", value:code,sent:false},idParam);\n            notify();\n        }\n       \n  \n       let funcs = [];\n       funcs['Carga último perfil da plataforma'] = (idDevice) => { \n           account.devices.paramList(idDevice).then((resp) => {\n              \n               \n              let config = resp.filter((param) => {return param.key === \"CMD\"});\n               if(config.length >= 2){\n                AlertError();\n              }else{\n                if(resp[0] !== undefined){\n                    resp[0].sent === true \n                            ? subscribe(idDevice,resp[0].id,\"0*\")\n                                            : error();   \n                   }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '0*', sent: false}).catch((err) => { console.log(err) });\n                       notify()\n                    }\n               }\n               \n            });\n        }; \n  \n        funcs['Solicitar Identificação ID'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"1*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '1*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Reiniciar Dispositivo'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"2*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '2*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };  \n  \n         funcs['Ligar Modo Emergência'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"3*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '3*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Ligar Modo Normal'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"3#\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '3#', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Solicita Posição LBS / GPS'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"4*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '4*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Status da Bateria'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"5*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '5*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Alterar Frequência RF433'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"6*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '6*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n  \n         funcs['Alterar Melodia RF433'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n                 if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"7*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '7*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n        \n         function insertParam(){\n            let selectConfig = document.getElementById(\"configs\");\n            let name = selectConfig.options[selectConfig.selectedIndex].value;\n             let selectDevice = document.getElementById(\"devices\");\n            let id = selectDevice.options[selectDevice.selectedIndex].value;\n        \n             funcs[name](id)\n        }\n       \n        console.log('jsx') */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cabecalho\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Enviar Comando\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fieldOfSelection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" label_dev\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"drop\",\n            alt: \"\",\n            src: \"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_label\",\n            children: \"Selecione os Dispositivos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"secondInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" label_dev\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              className: \"drop\",\n              src: \"https://img.icons8.com/windows/2x/expand-arrow.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title_label\",\n              children: \"CMD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"configs\",\n            className: \"inputCmd\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Carga \\xFAltimo perfil da plataforma\",\n              children: \"Carga \\xFAltimo perfil da plataforma\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Solicitar Identifica\\xE7\\xE3o ID\",\n              children: \"Solicitar Identifica\\xE7\\xE3o ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Reiniciar Dispositivo\",\n              children: \"Reiniciar dispositivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ligar Modo Emerg\\xEAncia\",\n              children: \"Ligar Modo Emerg\\xEAncia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ligar Modo Normal\",\n              children: \"Ligar Modo Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Solicita Posi\\xE7\\xE3o LBS / GPS\",\n              children: \"Solicita Posi\\xE7\\xE3o LBS / GPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Status da Bateria\",\n              children: \"Status da Bateria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Alterar Frequ\\xEAncia RF433\",\n              children: \"Alterar Frequ\\xEAncia RF433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Alterar Melodia RF433\",\n              children: \"Alterar Melodia RF433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rodape\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: insertParam,\n            children: \"Enviar CMD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 14\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ToastContainer","toast","render","App","insertParam"],"sources":["C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n/* const {Account} = require('@tago-io/sdk'); */\n\nlet render = 0;\nfunction App() {\n  /* const account = new Account({token:\"a394b4c9-7ea7-4346-bbe1-ddb35f9bc948\"});\n    console.log(\"teste3\")\n    const [arrayOfdevices,setArray] = useState([]);\n\n    const notify = () => toast.success(\"Configuration performed!\");\n    const toastAlert = () => toast.error(\"Configuration already exists!\");\n    const AlertError = () => toast.error(\"There are more than 1 comands in the queue, it's not possible to add more commands.\");\n    const error = () => toast.error(\"There is a command in the file, it's not possible to add more commands before of execute that is in the file.\")\n    \n\n    async function listdevices(){\n        console.log('ativou')\n        let listResponse =  await account.devices.list();\n        \n        render++;\n           render === 1 ? setArray(listResponse)\n                                     : console.log()\n       } \n\n\n\n        useEffect( () => {\n            listdevices()\n        } )\n        \n   \n\n        window.TagoIO.onStart((widget) => {\n            window.widget = widget;\n        })\n        window.TagoIO.ready();\n        console.log('teste')\n\n\n\n        function subscribe(idDevice,idParam,code){\n            account.devices.paramSet(idDevice,{key:\"CMD\", value:code,sent:false},idParam);\n            notify();\n        }\n       \n\n\n\n       let funcs = [];\n       funcs['Carga último perfil da plataforma'] = (idDevice) => { \n           account.devices.paramList(idDevice).then((resp) => {\n              \n               \n              let config = resp.filter((param) => {return param.key === \"CMD\"});\n\n              if(config.length >= 2){\n                AlertError();\n              }else{\n                if(resp[0] !== undefined){\n                    resp[0].sent === true \n                            ? subscribe(idDevice,resp[0].id,\"0*\")\n                                            : error();   \n                   }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '0*', sent: false}).catch((err) => { console.log(err) });\n                       notify()\n                    }\n               }\n               \n            });\n        }; \n\n\n\n        funcs['Solicitar Identificação ID'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"1*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '1*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Reiniciar Dispositivo'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"2*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '2*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };  \n\n\n\n         funcs['Ligar Modo Emergência'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"3*\")\n                                             : error();   \n                    }else{\n                        account.devices.paramSet(idDevice, {key:\"CMD\", value: '3*', sent: false}).catch((err) => { console.log(err) });\n                        notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Ligar Modo Normal'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"3#\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '3#', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Solicita Posição LBS / GPS'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"4*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '4*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Status da Bateria'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"5*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '5*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Alterar Frequência RF433'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"6*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '6*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n\n\n\n         funcs['Alterar Melodia RF433'] = (idDevice) => { \n            account.devices.paramList(idDevice).then((resp) => {\n               \n                \n               let config = resp.filter((param) => {return param.key === \"CMD\"});\n \n               if(config.length >= 2){\n                 AlertError();\n               }else{\n                 if(resp[0] !== undefined){\n                     resp[0].sent === true \n                             ? subscribe(idDevice,resp[0].id,\"7*\")\n                                             : error();   \n                    }else{\n                       account.devices.paramSet(idDevice, {key:\"CMD\", value: '7*', sent: false}).catch((err) => { console.log(err) });\n                      notify()\n                     }\n                }\n                \n             });\n         };\n        \n\n        function insertParam(){\n            let selectConfig = document.getElementById(\"configs\");\n            let name = selectConfig.options[selectConfig.selectedIndex].value;\n\n            let selectDevice = document.getElementById(\"devices\");\n            let id = selectDevice.options[selectDevice.selectedIndex].value;\n        \n\n            funcs[name](id)\n        }\n       \n        console.log('jsx') */\n        return(\n             <div className=\"container\">\n                <ToastContainer />\n                    <div className=\"box\">\n                        \n                        <div className =\"cabecalho\">\n                            <div className =\"title\">Enviar Comando</div>\n                        </div>\n                        \n                        \n                        <div className =\"fieldOfSelection\">\n                \n                            <div className=\" label_dev\">\n                                <img className =\"drop\" alt='' src=\"https://img.icons8.com/external-zen-filled-royyan-wijaya/2x/external-list-dropdown-business-zen-filled-royyan-wijaya.png\" />\n                                <div className =\"title_label\">Selecione os Dispositivos</div> \n                            </div>\n                \n                \n                         {/*    <div className=\"input\">\n                                    <select id=\"devices\" className =\"devices\">\n                                    {arrayOfdevices.map((item) =>{\n                                            return(\n                                                <option value={item.id}>{item.name}</option>\n                                            )\n                                    })}\n                                    </select>\n                                </div> */}\n                                \n                \n                \n                \n                            <div className =\"secondInput\">\n                \n                                <div className =\" label_dev\">\n                                    <img alt='' className =\"drop\" src=\"https://img.icons8.com/windows/2x/expand-arrow.png\"/>\n                                    <div className =\"title_label\">CMD</div> \n                                </div>\n                \n                                \n                                <select id=\"configs\" className =\"inputCmd\">\n                                    <option value=\"Carga último perfil da plataforma\">Carga último perfil da plataforma</option>\n                                    <option value=\"Solicitar Identificação ID\">Solicitar Identificação ID</option>\n                                    <option value=\"Reiniciar Dispositivo\">Reiniciar dispositivo</option>\n                                    <option value=\"Ligar Modo Emergência\">Ligar Modo Emergência</option>\n                                    <option value=\"Ligar Modo Normal\">Ligar Modo Normal</option>\n                                    <option value=\"Solicita Posição LBS / GPS\">Solicita Posição LBS / GPS</option>\n                                    <option value=\"Status da Bateria\">Status da Bateria</option>\n                                    <option value=\"Alterar Frequência RF433\">Alterar Frequência RF433</option>\n                                    <option value=\"Alterar Melodia RF433\">Alterar Melodia RF433</option>\n                                </select>\n                \n                            </div>\n                \n                            \n                \n                            <div className=\"rodape\">\n                                <button className=\"button\" onClick={insertParam}>\n                                    Enviar CMD\n                                </button>\n                            </div>\n                \n                \n                        </div>\n                        \n                    \n                \n                    </div>  \n                    \n                   \n                </div>\n           \n        )\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C;AAAA;AAEA,IAAIC,MAAM,GAAG,CAAC;AACd,SAASC,GAAG,GAAG;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAsCQ,oBACK;IAAK,SAAS,EAAC,WAAW;IAAA,wBACvB,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACd;MAAK,SAAS,EAAC,KAAK;MAAA,wBAEhB;QAAK,SAAS,EAAE,WAAW;QAAA,uBACvB;UAAK,SAAS,EAAE,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAqB;QAAA;QAAA;QAAA;MAAA,QAC1C,eAGN;QAAK,SAAS,EAAE,kBAAkB;QAAA,wBAE9B;UAAK,SAAS,EAAC,YAAY;UAAA,wBACvB;YAAK,SAAS,EAAE,MAAM;YAAC,GAAG,EAAC,EAAE;YAAC,GAAG,EAAC;UAA0H;YAAA;YAAA;YAAA;UAAA,QAAG,eAC/J;YAAK,SAAS,EAAE,aAAa;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgC;QAAA;UAAA;UAAA;UAAA;QAAA,QAC3D,eAgBN;UAAK,SAAS,EAAE,aAAa;UAAA,wBAEzB;YAAK,SAAS,EAAE,YAAY;YAAA,wBACxB;cAAK,GAAG,EAAC,EAAE;cAAC,SAAS,EAAE,MAAM;cAAC,GAAG,EAAC;YAAoD;cAAA;cAAA;cAAA;YAAA,QAAE,eACxF;cAAK,SAAS,EAAE,aAAa;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAU;UAAA;YAAA;YAAA;YAAA;UAAA,QACrC,eAGN;YAAQ,EAAE,EAAC,SAAS;YAAC,SAAS,EAAE,UAAU;YAAA,wBACtC;cAAQ,KAAK,EAAC,sCAAmC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA2C,eAC5F;cAAQ,KAAK,EAAC,kCAA4B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAoC,eAC9E;cAAQ,KAAK,EAAC,uBAAuB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA+B,eACpE;cAAQ,KAAK,EAAC,0BAAuB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA+B,eACpE;cAAQ,KAAK,EAAC,mBAAmB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA2B,eAC5D;cAAQ,KAAK,EAAC,kCAA4B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAoC,eAC9E;cAAQ,KAAK,EAAC,mBAAmB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA2B,eAC5D;cAAQ,KAAK,EAAC,6BAA0B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAkC,eAC1E;cAAQ,KAAK,EAAC,uBAAuB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA+B;UAAA;YAAA;YAAA;YAAA;UAAA,QAC/D;QAAA;UAAA;UAAA;UAAA;QAAA,QAEP,eAIN;UAAK,SAAS,EAAC,QAAQ;UAAA,uBACnB;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEC,WAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAEvC;UAAA;UAAA;UAAA;QAAA,QACP;MAAA;QAAA;QAAA;QAAA;MAAA,QAGJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAIJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAGJ;AAGtB;AAAC,KAxVQD,GAAG;AA0VZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}