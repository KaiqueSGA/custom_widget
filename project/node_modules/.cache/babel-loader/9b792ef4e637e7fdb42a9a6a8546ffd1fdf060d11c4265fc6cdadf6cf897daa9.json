{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst axios_1 = __importDefault(require(\"axios\"));\nconst TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nclass PDFService extends TagoIOModule_1.default {\n  /**\n   * Generate a PDF from html, url or base64\n   *\n   */\n  async generate(params) {\n    try {\n      const result = await (0, axios_1.default)({\n        method: \"POST\",\n        url: \"https://pdf.middleware.tago.io\",\n        data: params,\n        headers: {\n          token: this.params.token\n        }\n      });\n      return result?.data;\n    } catch (error) {\n      return Promise.reject(error?.response?.data || {\n        result: false,\n        stuats: \"unknown error\"\n      });\n    }\n  }\n}\nexports.default = PDFService;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AA2HA,MAAMA,UAAW,SAAQC,sBAAiC;EACxD;;;;EAIO,MAAMC,QAAQ,CAACC,MAAiB;IACrC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAM,mBAAK,EAAC;QACzBC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,gCAAgC;QACrCC,IAAI,EAAEJ,MAAM;QACZK,OAAO,EAAE;UACPC,KAAK,EAAE,IAAI,CAACN,MAAM,CAACM;;OAEtB,CAAC;MAEF,OAAOL,MAAM,EAAEG,IAAI;KACpB,CAAC,OAAOG,KAAK,EAAE;MACd,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,EAAEG,QAAQ,EAAEN,IAAI,IAAI;QAAEH,MAAM,EAAE,KAAK;QAAEU,MAAM,EAAE;MAAe,CAAE,CAAC;;EAE9F;;AAGFC,kBAAef,UAAU","names":["PDFService","TagoIOModule_1","generate","params","result","method","url","data","headers","token","error","Promise","reject","response","stuats","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Services\\PDF.ts"],"sourcesContent":["import axios from \"axios\";\nimport TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\n\ninterface PDFResult {\n  status: boolean;\n  result: string;\n}\n\ninterface PDFParams {\n  /**\n   * HTML as string\n   */\n  html?: string;\n\n  /**\n   * HTML on base64 format\n   */\n  base64?: string;\n\n  /**\n   * File name of pdf\n   * Without filename, it will generate base64 response\n   * With filename it will generate pdf binary\n   */\n  fileName?: string;\n\n  /**\n   * Generate pdf from URL\n   */\n  url?: string;\n\n  /**\n   * PDF Custom Options\n   */\n  options?: {\n    /**\n     * Display header and footer. Defaults to `false`.\n     */\n    displayHeaderFooter?: boolean;\n\n    /**\n     * HTML template for the print footer. Should use the same format as the `headerTemplate`.\n     */\n    footerTemplate?: string;\n\n    /**\n     * Paper format. If set, takes priority over `width` or `height` options. Defaults to 'Letter'.\n     */\n    format?: string;\n\n    /**\n     * HTML template for the print header. Should be valid HTML markup with following classes used to inject printing values\n     * into them:\n     * - `'date'` formatted print date\n     * - `'title'` document title\n     * - `'url'` document location\n     * - `'pageNumber'` current page number\n     * - `'totalPages'` total pages in the document\n     */\n    headerTemplate?: string;\n\n    /**\n     * Paper height, accepts values labeled with units.\n     */\n    height?: string | number;\n\n    /**\n     * Paper orientation. Defaults to `false`.\n     */\n    landscape?: boolean;\n\n    /**\n     * Paper margins, defaults to none.\n     */\n    margin?: {\n      /**\n       * Top margin, accepts values labeled with units. Defaults to `0`.\n       */\n      top?: string | number;\n\n      /**\n       * Right margin, accepts values labeled with units. Defaults to `0`.\n       */\n      right?: string | number;\n\n      /**\n       * Bottom margin, accepts values labeled with units. Defaults to `0`.\n       */\n      bottom?: string | number;\n\n      /**\n       * Left margin, accepts values labeled with units. Defaults to `0`.\n       */\n      left?: string | number;\n    };\n\n    /**\n     * Paper ranges to print, e.g., '1-5, 8, 11-13'. Defaults to the empty string, which means print all pages.\n     */\n    pageRanges?: string;\n\n    /**\n     * Give any CSS `@page` size declared in the page priority over what is declared in `width` and `height` or `format`\n     * options. Defaults to `false`, which will scale the content to fit the paper size.\n     */\n    preferCSSPageSize?: boolean;\n\n    /**\n     * Print background graphics. Defaults to `false`.\n     */\n    printBackground?: boolean;\n\n    /**\n     * Scale of the webpage rendering. Defaults to `1`. Scale amount must be between 0.1 and 2.\n     */\n    scale?: number;\n\n    /**\n     * Paper width, accepts values labeled with units.\n     */\n    width?: string | number;\n  };\n}\n\nclass PDFService extends TagoIOModule<GenericModuleParams> {\n  /**\n   * Generate a PDF from html, url or base64\n   *\n   */\n  public async generate(params: PDFParams): Promise<PDFResult> {\n    try {\n      const result = await axios({\n        method: \"POST\",\n        url: \"https://pdf.middleware.tago.io\",\n        data: params,\n        headers: {\n          token: this.params.token,\n        },\n      });\n\n      return result?.data;\n    } catch (error) {\n      return Promise.reject(error?.response?.data || { result: false, stuats: \"unknown error\" });\n    }\n  }\n}\n\nexport default PDFService;\nexport { PDFParams };\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}