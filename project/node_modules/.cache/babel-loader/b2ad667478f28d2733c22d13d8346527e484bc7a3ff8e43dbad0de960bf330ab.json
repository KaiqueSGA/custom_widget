{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convert(oldWidget) {\n  var _oldWidget$data, _oldWidget$data$;\n  var oldDisplay = oldWidget.display || {};\n  var newStructure = {\n    dashboard: oldWidget.dashboard,\n    display: {\n      allow_zoom: false,\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      max_points: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.max_points) || 500,\n      object_fit: \"contain\",\n      occupy_whole_widget: false,\n      radius: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.radius) || 1,\n      scale: {\n        enable: !!(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.scale_fixed),\n        maximum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.scale_maximum) || 100,\n        minimum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.scale_minimum) || 0,\n        type: \"fixed\"\n      },\n      show_coordinates: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.show_coordinates) !== undefined ? oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.show_coordinates : true,\n      show_last_update: false,\n      show_scale: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.show_scale) !== undefined ? oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.show_scale : true,\n      show_zoom_buttons: false,\n      source: {\n        static_image: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.img_path) || \"\",\n        type: \"static\"\n      },\n      theme: {\n        color: {\n          background: null,\n          button_background: null,\n          button_border: null,\n          button_icon: null,\n          header: null,\n          text: null,\n          text_background: null,\n          text_border: null\n        },\n        timezone: {\n          id: (oldWidget === null || oldWidget === void 0 ? void 0 : (_oldWidget$data = oldWidget.data) === null || _oldWidget$data === void 0 ? void 0 : (_oldWidget$data$ = _oldWidget$data[0]) === null || _oldWidget$data$ === void 0 ? void 0 : _oldWidget$data$.timezone) || \"UTC\"\n        }\n      },\n      variables: []\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"heat_map\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    newStructure.data = oldWidget.data; // transfers the .data property\n    newStructure.display.variables = []; // creates the variable array\n    var _iterator = _createForOfIteratorHelper(oldWidget.data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (item.is_hide) {\n          // is_hide items are not visible in the columns, so we cannot\n          // put them in the variables array\n          continue;\n        }\n        var _iterator2 = _createForOfIteratorHelper(item.variables),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var variable = _step2.value;\n            newStructure.display.variables.push({\n              origin: item.origin,\n              overwrite_coordinates: false,\n              variable: variable\n            });\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3, _widget$display4, _widget$display5, _widget$display6;\n  var isOld = !!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.layer_type || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.img_path || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.scale_minimum || widget !== null && widget !== void 0 && (_widget$display4 = widget.display) !== null && _widget$display4 !== void 0 && _widget$display4.scale_maximum || widget !== null && widget !== void 0 && (_widget$display5 = widget.display) !== null && _widget$display5 !== void 0 && _widget$display5.scale_fixed || (widget === null || widget === void 0 ? void 0 : (_widget$display6 = widget.display) === null || _widget$display6 === void 0 ? void 0 : _widget$display6.watermark) !== undefined);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["convert","oldWidget","oldDisplay","display","newStructure","dashboard","allow_zoom","header_buttons","help","max_points","object_fit","occupy_whole_widget","radius","scale","enable","scale_fixed","maximum","scale_maximum","minimum","scale_minimum","type","show_coordinates","undefined","show_last_update","show_scale","show_zoom_buttons","source","static_image","img_path","theme","color","background","button_background","button_border","button_icon","header","text","text_background","text_border","timezone","id","data","variables","label","realtime","Array","isArray","item","is_hide","variable","push","origin","overwrite_coordinates","exports","isOldStructure","widget","isOld","layer_type","watermark"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\heatmap.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\r\n// * What is this file?\r\n//     Migration of old HEAT MAP to new HEAT MAP\r\n// ? ====================================================================================\r\nimport { WidgetInfo } from \"../Account/dashboards.types\";\r\n\r\nexport function convert(oldWidget: any): WidgetInfo {\r\n  const oldDisplay = oldWidget.display || {};\r\n\r\n  const newStructure: any = {\r\n    dashboard: oldWidget.dashboard,\r\n    display: {\r\n      allow_zoom: false,\r\n      header_buttons: oldDisplay.header_buttons || [],\r\n      help: oldDisplay.help || \"\",\r\n      max_points: oldDisplay?.max_points || 500,\r\n      object_fit: \"contain\",\r\n      occupy_whole_widget: false,\r\n      radius: oldDisplay?.radius || 1,\r\n      scale: {\r\n        enable: !!oldDisplay?.scale_fixed,\r\n        maximum: oldDisplay?.scale_maximum || 100,\r\n        minimum: oldDisplay?.scale_minimum || 0,\r\n        type: \"fixed\",\r\n      },\r\n      show_coordinates: oldDisplay?.show_coordinates !== undefined ? oldDisplay?.show_coordinates : true,\r\n      show_last_update: false,\r\n      show_scale: oldDisplay?.show_scale !== undefined ? oldDisplay?.show_scale : true,\r\n      show_zoom_buttons: false,\r\n      source: {\r\n        static_image: oldDisplay?.img_path || \"\",\r\n        type: \"static\",\r\n      },\r\n      theme: {\r\n        color: {\r\n          background: null,\r\n          button_background: null,\r\n          button_border: null,\r\n          button_icon: null,\r\n          header: null,\r\n          text: null,\r\n          text_background: null,\r\n          text_border: null,\r\n        },\r\n        timezone: {\r\n          id: oldWidget?.data?.[0]?.timezone || \"UTC\",\r\n        },\r\n      },\r\n      variables: [],\r\n    },\r\n    id: oldWidget.id,\r\n    label: oldWidget.label,\r\n    realtime: null,\r\n    type: \"heat_map\",\r\n  };\r\n\r\n  if (Array.isArray(oldWidget.data)) {\r\n    newStructure.data = oldWidget.data; // transfers the .data property\r\n\r\n    newStructure.display.variables = []; // creates the variable array\r\n\r\n    for (const item of oldWidget.data) {\r\n      if (item.is_hide) {\r\n        // is_hide items are not visible in the columns, so we cannot\r\n        // put them in the variables array\r\n        continue;\r\n      }\r\n\r\n      for (const variable of item.variables) {\r\n        newStructure.display.variables.push({\r\n          origin: item.origin,\r\n          overwrite_coordinates: false,\r\n          variable,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return newStructure;\r\n}\r\n\r\nexport function isOldStructure(widget: any) {\r\n  const isOld = !!(\r\n    widget?.display?.layer_type ||\r\n    widget?.display?.img_path ||\r\n    widget?.display?.scale_minimum ||\r\n    widget?.display?.scale_maximum ||\r\n    widget?.display?.scale_fixed ||\r\n    widget?.display?.watermark !== undefined\r\n  );\r\n\r\n  return isOld;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}