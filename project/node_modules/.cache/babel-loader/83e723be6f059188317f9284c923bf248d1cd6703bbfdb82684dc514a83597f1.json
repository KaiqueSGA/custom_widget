{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertField = exports.convertFieldCaptureUser = exports.convertFieldValidation = exports.convertFieldRadio = exports.convertFieldQrCode = exports.convertFieldPassword = exports.convertFieldNumber = exports.convertFieldIncrementalSteps = exports.convertFieldImageVideoSelect = exports.convertFieldHidden = exports.convertFieldFilteredVariables = exports.convertFieldFileUpload = exports.convertFieldEmail = exports.convertFieldDropdownMultiple = exports.convertFieldDropdown = exports.convertFieldDevice = exports.convertFieldClockSet = exports.convertFieldCheckbox = exports.convertFieldCalendar = exports.convertFieldBarCode = exports.convertFieldAddress = exports.convertFieldText = exports.convertVisualField = exports.convertFormField = exports.convertSubmitButton = exports.InputFormField = void 0;\nvar common_1 = require(\"./common\");\nvar InputFormField;\n(function (InputFormField) {\n  InputFormField[\"Text\"] = \"text\";\n  InputFormField[\"Address\"] = \"address\";\n  InputFormField[\"Barcode\"] = \"barcode\";\n  InputFormField[\"Calendar\"] = \"calendar\";\n  InputFormField[\"Capture user\"] = \"user\";\n  InputFormField[\"Checkbox\"] = \"checkbox\";\n  InputFormField[\"Clock Set\"] = \"clock-set\";\n  InputFormField[\"Device\"] = \"device\";\n  InputFormField[\"Dropdown\"] = \"dropdown\";\n  InputFormField[\"Dropdown Multiple\"] = \"dropdown-multi\";\n  InputFormField[\"Email\"] = \"email\";\n  InputFormField[\"File Upload\"] = \"upload\";\n  InputFormField[\"Filtered variables\"] = \"filtered\";\n  InputFormField[\"Hidden\"] = \"hidden\";\n  InputFormField[\"Image / Video Select\"] = \"image-select\";\n  InputFormField[\"Incremental Step\"] = \"incremental-step\";\n  InputFormField[\"Number\"] = \"number\";\n  InputFormField[\"Password\"] = \"password\";\n  InputFormField[\"QR Code\"] = \"qrcode\";\n  InputFormField[\"Radio\"] = \"radio\";\n  InputFormField[\"Validation\"] = \"validation\";\n})(InputFormField = exports.InputFormField || (exports.InputFormField = {}));\nfunction convertDefaultValue(useCurrentValue) {\n  var defaultValue = \"last\";\n  if (typeof useCurrentValue === \"string\" && useCurrentValue !== \"current_value\") {\n    defaultValue = \"fixed\";\n  }\n  return defaultValue;\n}\nfunction convertSubmitButton(oldDisplay, runAnalysis) {\n  var _oldDisplay$form, _oldDisplay$form2, _oldDisplay$form3, _oldDisplay$form4, _oldDisplay$form5, _oldDisplay$form6;\n  return {\n    analysis: runAnalysis || \"\",\n    clear_form: false,\n    color: \"#337ab7\",\n    confirmation_cancel: null,\n    confirmation_confirm: null,\n    confirmation_message: (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$form = oldDisplay.form) === null || _oldDisplay$form === void 0 ? void 0 : _oldDisplay$form.message_submit) || \"\",\n    confirmation_title: null,\n    icon: null,\n    id: (0, common_1.generateWidgetItemId)(),\n    identifier: \"\",\n    run_analysis: !!runAnalysis,\n    send_data: !(oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$form2 = oldDisplay.form) !== null && _oldDisplay$form2 !== void 0 && _oldDisplay$form2.bypass_bucket),\n    show_confirmation: !!(oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$form3 = oldDisplay.form) !== null && _oldDisplay$form3 !== void 0 && _oldDisplay$form3.confirm_before_submit),\n    text: !(oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$form4 = oldDisplay.form) !== null && _oldDisplay$form4 !== void 0 && _oldDisplay$form4.label_submit) ? \"Send\" : oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$form5 = oldDisplay.form) === null || _oldDisplay$form5 === void 0 ? void 0 : _oldDisplay$form5.label_submit,\n    wait_for_validation: !!(oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$form6 = oldDisplay.form) !== null && _oldDisplay$form6 !== void 0 && _oldDisplay$form6.wait_validation_unlock)\n  };\n}\nexports.convertSubmitButton = convertSubmitButton;\nfunction convertFormField(field) {\n  return {\n    data: {\n      bucket: field === null || field === void 0 ? void 0 : field.bucket,\n      origin: field === null || field === void 0 ? void 0 : field.origin,\n      variable: field === null || field === void 0 ? void 0 : field.variable\n    },\n    id: (field === null || field === void 0 ? void 0 : field.id) || (0, common_1.generateWidgetItemId)()\n  };\n}\nexports.convertFormField = convertFormField;\nfunction convertVisualField(field) {\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, convertFormField(field)), {}, {\n    icon: null,\n    label: field === null || field === void 0 ? void 0 : field.label,\n    required: !!(field !== null && field !== void 0 && field.required),\n    show_new_line: (field === null || field === void 0 ? void 0 : field.new_line) !== undefined ? !!(field !== null && field !== void 0 && field.new_line) : true,\n    visibility_conditions: (field === null || field === void 0 ? void 0 : field.visibility_conditions) || []\n  }, field !== null && field !== void 0 && field.placeholder ? {\n    placeholder: field === null || field === void 0 ? void 0 : field.placeholder\n  } : {}), field !== null && field !== void 0 && field.unit ? {\n    unit: field === null || field === void 0 ? void 0 : field.unit\n  } : {}), field !== null && field !== void 0 && field.value_type ? {\n    value_type: field === null || field === void 0 ? void 0 : field.value_type\n  } : {});\n}\nexports.convertVisualField = convertVisualField;\n/**\n * Convert text fields to new widget format\n */\nfunction convertFieldText(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField.Text\n  });\n}\nexports.convertFieldText = convertFieldText;\n/**\n * Convert address fields to new widget format\n */\nfunction convertFieldAddress(field, showMap) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    show_map: !!showMap,\n    type: InputFormField.Address\n  });\n}\nexports.convertFieldAddress = convertFieldAddress;\n/**\n * Convert barcode fields to new widget format\n */\nfunction convertFieldBarCode(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField.Barcode\n  });\n}\nexports.convertFieldBarCode = convertFieldBarCode;\n/**\n * Convert calendar fields to new widget format\n */\nfunction convertFieldCalendar(field) {\n  var _field$hide_end_date;\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    allow_time: !!(field !== null && field !== void 0 && field.allow_time_select),\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    show_end_date: (_field$hide_end_date = field === null || field === void 0 ? void 0 : field.hide_end_date) !== null && _field$hide_end_date !== void 0 ? _field$hide_end_date : true,\n    type: InputFormField.Calendar\n  });\n}\nexports.convertFieldCalendar = convertFieldCalendar;\n/**\n * Convert calendar fields to new widget format\n */\nfunction convertFieldCheckbox(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField.Checkbox\n  });\n}\nexports.convertFieldCheckbox = convertFieldCheckbox;\n/**\n * Convert clock set fields to new widget format\n */\nfunction convertFieldClockSet(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    define_limits: !!(field !== null && field !== void 0 && field.enable_limit),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    hour_visualization: field === null || field === void 0 ? void 0 : field.clock_visualization,\n    maximum: field === null || field === void 0 ? void 0 : field.maximum,\n    minimum: field === null || field === void 0 ? void 0 : field.minimum,\n    step_value: field === null || field === void 0 ? void 0 : field.increment,\n    type: InputFormField[\"Clock Set\"]\n  });\n}\nexports.convertFieldClockSet = convertFieldClockSet;\n/**\n * Convert device fields to new widget format\n */\nfunction convertFieldDevice(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField.Device\n  });\n}\nexports.convertFieldDevice = convertFieldDevice;\n/**\n * Convert dropdown field to new widget format\n */\nfunction convertFieldDropdown(field) {\n  var _field$use_variable, _field$use_variable$o, _field$use_variable2, _field$use_variable3;\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    options: ((field === null || field === void 0 ? void 0 : field.options) || []).map(function (e) {\n      return _objectSpread(_objectSpread({\n        label: e === null || e === void 0 ? void 0 : e.label,\n        value: e === null || e === void 0 ? void 0 : e.value\n      }, e !== null && e !== void 0 && e.unit ? {\n        unit: e === null || e === void 0 ? void 0 : e.unit\n      } : {}), e !== null && e !== void 0 && e.is_default ? {\n        default: e === null || e === void 0 ? void 0 : e.is_default\n      } : {});\n    }),\n    type: InputFormField.Dropdown,\n    use_values_from: (field === null || field === void 0 ? void 0 : field.use_values_from) === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: (field === null || field === void 0 ? void 0 : (_field$use_variable = field.use_variable) === null || _field$use_variable === void 0 ? void 0 : (_field$use_variable$o = _field$use_variable.origin) === null || _field$use_variable$o === void 0 ? void 0 : _field$use_variable$o.id) || (field === null || field === void 0 ? void 0 : (_field$use_variable2 = field.use_variable) === null || _field$use_variable2 === void 0 ? void 0 : _field$use_variable2.origin),\n      variable: field === null || field === void 0 ? void 0 : (_field$use_variable3 = field.use_variable) === null || _field$use_variable3 === void 0 ? void 0 : _field$use_variable3.variable\n    }\n  });\n}\nexports.convertFieldDropdown = convertFieldDropdown;\n/**\n * Convert dropdown multiples field to new widget format\n */\nfunction convertFieldDropdownMultiple(field) {\n  return _objectSpread(_objectSpread({}, convertFieldDropdown(field)), {}, {\n    type: InputFormField[\"Dropdown Multiple\"]\n  });\n}\nexports.convertFieldDropdownMultiple = convertFieldDropdownMultiple;\n/**\n * Convert email field to new widget format\n */\nfunction convertFieldEmail(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    amount: \"single\",\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField.Email\n  });\n}\nexports.convertFieldEmail = convertFieldEmail;\n/**\n * Convert file upload field to new widget format\n */\nfunction convertFieldFileUpload(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    maximum_files: (field === null || field === void 0 ? void 0 : field.max_files) || 1,\n    path: (field === null || field === void 0 ? void 0 : field.path) || \"\",\n    type: InputFormField[\"File Upload\"],\n    use_mobile_camera: !!(field !== null && field !== void 0 && field.use_camera)\n  });\n}\nexports.convertFieldFileUpload = convertFieldFileUpload;\n/**\n * Convert filtered variables field to new widget format\n */\nfunction convertFieldFilteredVariables(field) {\n  var _field$use_variable4, _field$use_variable4$, _field$use_variable5, _field$use_variable6;\n  var useValuesFromVariable = {\n    origin: (field === null || field === void 0 ? void 0 : (_field$use_variable4 = field.use_variable) === null || _field$use_variable4 === void 0 ? void 0 : (_field$use_variable4$ = _field$use_variable4.origin) === null || _field$use_variable4$ === void 0 ? void 0 : _field$use_variable4$.id) || (field === null || field === void 0 ? void 0 : (_field$use_variable5 = field.use_variable) === null || _field$use_variable5 === void 0 ? void 0 : _field$use_variable5.origin),\n    variable: field === null || field === void 0 ? void 0 : (_field$use_variable6 = field.use_variable) === null || _field$use_variable6 === void 0 ? void 0 : _field$use_variable6.variable\n  };\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    filter_amount: (field === null || field === void 0 ? void 0 : field.selection_type) || \"single\",\n    filter_origin: field === null || field === void 0 ? void 0 : field.filter_origin,\n    type: InputFormField[\"Filtered variables\"],\n    use_values_from_variable: _objectSpread({}, useValuesFromVariable)\n  });\n}\nexports.convertFieldFilteredVariables = convertFieldFilteredVariables;\n/**\n * Convert hidden field to new widget format\n */\nfunction convertFieldHidden(field) {\n  return _objectSpread(_objectSpread({}, convertFormField(field)), {}, {\n    fixed_value: field === null || field === void 0 ? void 0 : field.value,\n    type: InputFormField.Hidden,\n    unit: (field === null || field === void 0 ? void 0 : field.unit) || \"\"\n  });\n}\nexports.convertFieldHidden = convertFieldHidden;\n/**\n * Convert Image / Video select field to new widget format\n */\nfunction convertFieldImageVideoSelect(field) {\n  var _field$use_variable7, _field$use_variable7$, _field$use_variable8;\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    allow_multiple: !!(field !== null && field !== void 0 && field.allow_multiple),\n    options: ((field === null || field === void 0 ? void 0 : field.options) || []).map(function (e) {\n      return _objectSpread(_objectSpread({\n        description: (e === null || e === void 0 ? void 0 : e.description) || \"\",\n        label: e === null || e === void 0 ? void 0 : e.label,\n        link: (e === null || e === void 0 ? void 0 : e.url) || \"\",\n        value: e === null || e === void 0 ? void 0 : e.value\n      }, e !== null && e !== void 0 && e.unit ? {\n        unit: e === null || e === void 0 ? void 0 : e.unit\n      } : {}), e !== null && e !== void 0 && e.is_default ? {\n        default: e === null || e === void 0 ? void 0 : e.is_default\n      } : {});\n    }),\n    show_filter: !!(field !== null && field !== void 0 && field.show_filter_value),\n    type: InputFormField[\"Image / Video Select\"],\n    use_values_from: (field === null || field === void 0 ? void 0 : field.use_values_from) === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: (field === null || field === void 0 ? void 0 : (_field$use_variable7 = field.use_variable) === null || _field$use_variable7 === void 0 ? void 0 : (_field$use_variable7$ = _field$use_variable7.origin) === null || _field$use_variable7$ === void 0 ? void 0 : _field$use_variable7$.id) || (field === null || field === void 0 ? void 0 : (_field$use_variable8 = field.use_variable) === null || _field$use_variable8 === void 0 ? void 0 : _field$use_variable8.origin),\n      variable: field === null || field === void 0 ? void 0 : field.variable\n    }\n  });\n}\nexports.convertFieldImageVideoSelect = convertFieldImageVideoSelect;\n/**\n * Convert Incremental steps field for new widget format\n */\nfunction convertFieldIncrementalSteps(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    maximum: (field === null || field === void 0 ? void 0 : field.maximum) || 100,\n    minimum: (field === null || field === void 0 ? void 0 : field.minimum) || 0,\n    step_value: (field === null || field === void 0 ? void 0 : field.increment) || 1,\n    type: InputFormField[\"Incremental Step\"]\n  });\n}\nexports.convertFieldIncrementalSteps = convertFieldIncrementalSteps;\n/**\n * Convert Number field to new widget format\n */\nfunction convertFieldNumber(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    decimals: (field === null || field === void 0 ? void 0 : field.decimals) === \"-1\" ? \"auto\" : field === null || field === void 0 ? void 0 : field.decimals,\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    show_thousand_separator: !!(field !== null && field !== void 0 && field.show_thousand),\n    type: InputFormField.Number\n  });\n}\nexports.convertFieldNumber = convertFieldNumber;\n/**\n * Convert Password field to new widget format\n */\nfunction convertFieldPassword(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    fixed_value: (field === null || field === void 0 ? void 0 : field.use_current_value) !== \"current_value\" ? field === null || field === void 0 ? void 0 : field.default : \"\",\n    type: InputFormField.Password\n  });\n}\nexports.convertFieldPassword = convertFieldPassword;\n/**\n * Convert QR Code field to new widget format\n */\nfunction convertFieldQrCode(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    default_value: convertDefaultValue(field === null || field === void 0 ? void 0 : field.use_current_value),\n    fixed_value: field === null || field === void 0 ? void 0 : field.default,\n    type: InputFormField[\"QR Code\"]\n  });\n}\nexports.convertFieldQrCode = convertFieldQrCode;\n/**\n * Convert Radio field to new widget format\n */\nfunction convertFieldRadio(field) {\n  return _objectSpread(_objectSpread({}, convertVisualField(field)), {}, {\n    options: ((field === null || field === void 0 ? void 0 : field.options) || []).map(function (e) {\n      return _objectSpread(_objectSpread({\n        label: e === null || e === void 0 ? void 0 : e.label,\n        value: e === null || e === void 0 ? void 0 : e.value\n      }, e !== null && e !== void 0 && e.unit ? {\n        unit: e === null || e === void 0 ? void 0 : e.unit\n      } : {}), e !== null && e !== void 0 && e.is_default ? {\n        default: e === null || e === void 0 ? void 0 : e.is_default\n      } : {});\n    }),\n    type: InputFormField.Radio\n  });\n}\nexports.convertFieldRadio = convertFieldRadio;\n/**\n * Convert Validation field to new widget format\n */\nfunction convertFieldValidation(field) {\n  var _field$validation_mes;\n  return _objectSpread(_objectSpread({}, convertFormField(field)), {}, {\n    fade_out: !(field !== null && field !== void 0 && (_field$validation_mes = field.validation_message) !== null && _field$validation_mes !== void 0 && _field$validation_mes.always_show),\n    keep_last_validation: false,\n    show_markdown: false,\n    type: InputFormField.Validation\n  });\n}\nexports.convertFieldValidation = convertFieldValidation;\n/**\n * Convert Capture user field to new widget format\n */\nfunction convertFieldCaptureUser(field) {\n  return _objectSpread(_objectSpread({}, convertFormField(field)), {}, {\n    field: (field === null || field === void 0 ? void 0 : field.field) || \"\",\n    type: InputFormField[\"Capture user\"]\n  });\n}\nexports.convertFieldCaptureUser = convertFieldCaptureUser;\n/**\n * Convert fields\n */\nfunction convertField(field, showMap) {\n  var fieldtype = field.fieldtype;\n  switch (fieldtype) {\n    case \"text\":\n      return convertFieldText(field);\n    case \"address\":\n      return convertFieldAddress(field, showMap);\n    case \"barcode\":\n      return convertFieldBarCode(field);\n    case \"calendar\":\n      return convertFieldCalendar(field);\n    case \"checkbox\":\n      return convertFieldCheckbox(field);\n    case \"clock-set\":\n      return convertFieldClockSet(field);\n    case \"device\":\n      return convertFieldDevice(field);\n    case \"dropdown\":\n      return convertFieldDropdown(field);\n    case \"dropdown-multi\":\n      return convertFieldDropdownMultiple(field);\n    case \"email\":\n      return convertFieldEmail(field);\n    case \"upload\":\n      return convertFieldFileUpload(field);\n    case \"filtered\":\n      return convertFieldFilteredVariables(field);\n    case \"hidden\":\n      return convertFieldHidden(field);\n    case \"image-select\":\n      return convertFieldImageVideoSelect(field);\n    case \"incremental-step\":\n      return convertFieldIncrementalSteps(field);\n    case \"number\":\n      return convertFieldNumber(field);\n    case \"password\":\n      return convertFieldPassword(field);\n    case \"qrcode\":\n      return convertFieldQrCode(field);\n    case \"radio\":\n      return convertFieldRadio(field);\n    case \"validation\":\n      return convertFieldValidation(field);\n    case \"user\":\n      return convertFieldCaptureUser(field);\n    default:\n      return null;\n  }\n}\nexports.convertField = convertField;","map":{"version":3,"mappings":";;;;;;;AAAA;AACA,IAAYA,cAsBX;AAtBD,WAAYA,cAAc;EACxBA,+BAAe;EACfA,qCAAqB;EACrBA,qCAAqB;EACrBA,uCAAuB;EACvBA,uCAAuB;EACvBA,uCAAuB;EACvBA,yCAAyB;EACzBA,mCAAmB;EACnBA,uCAAuB;EACvBA,sDAAsC;EACtCA,iCAAiB;EACjBA,wCAAwB;EACxBA,iDAAiC;EACjCA,mCAAmB;EACnBA,uDAAuC;EACvCA,uDAAuC;EACvCA,mCAAmB;EACnBA,uCAAuB;EACvBA,oCAAoB;EACpBA,iCAAiB;EACjBA,2CAA2B;AAC7B,CAAC,EAtBWA,cAAc,GAAdC,sBAAc,KAAdA,sBAAc;AAwB1B,SAASC,mBAAmB,CAACC,eAAuB;EAClD,IAAIC,YAAY,GAAqB,MAAM;EAC3C,IAAI,OAAOD,eAAe,KAAK,QAAQ,IAAIA,eAAe,KAAK,eAAe,EAAE;IAC9EC,YAAY,GAAG,OAAO;;EAExB,OAAOA,YAAY;AACrB;AAEA,SAAgBC,mBAAmB,CAACC,UAAe,EAAEC,WAAmB;EAAA;EACtE,OAAO;IACLC,QAAQ,EAAED,WAAW,IAAI,EAAE;IAC3BE,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,SAAS;IAChBC,mBAAmB,EAAE,IAAI;IACzBC,oBAAoB,EAAE,IAAI;IAC1BC,oBAAoB,EAAE,WAAU,aAAVP,UAAU,2CAAVA,UAAU,CAAEQ,IAAI,qDAAhB,iBAAkBC,cAAc,KAAI,EAAE;IAC5DC,kBAAkB,EAAE,IAAI;IACxBC,IAAI,EAAE,IAAI;IACVC,EAAE,EAAE,iCAAoB,GAAE;IAC1BC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,CAAC,CAACb,WAAW;IAC3Bc,SAAS,EAAE,EAACf,UAAU,aAAVA,UAAU,oCAAVA,UAAU,CAAEQ,IAAI,8CAAhB,kBAAkBQ,aAAa;IAC3CC,iBAAiB,EAAE,CAAC,EAACjB,UAAU,aAAVA,UAAU,oCAAVA,UAAU,CAAEQ,IAAI,8CAAhB,kBAAkBU,qBAAqB;IAC5DC,IAAI,EAAE,EAACnB,UAAU,aAAVA,UAAU,oCAAVA,UAAU,CAAEQ,IAAI,8CAAhB,kBAAkBY,YAAY,IAAG,MAAM,GAAGpB,UAAU,aAAVA,UAAU,4CAAVA,UAAU,CAAEQ,IAAI,sDAAhB,kBAAkBY,YAAY;IAC/EC,mBAAmB,EAAE,CAAC,EAACrB,UAAU,aAAVA,UAAU,oCAAVA,UAAU,CAAEQ,IAAI,8CAAhB,kBAAkBc,sBAAsB;GAChE;AACH;AAlBA3B;AAoBA,SAAgB4B,gBAAgB,CAACC,KAAU;EACzC,OAAO;IACLC,IAAI,EAAE;MACJC,MAAM,EAAEF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,MAAM;MACrBC,MAAM,EAAEH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,MAAM;MACrBC,QAAQ,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI;KAClB;IACDhB,EAAE,EAAE,MAAK,aAALY,KAAK,uBAALA,KAAK,CAAEZ,EAAE,KAAI,iCAAoB;GACtC;AACH;AATAjB;AAWA,SAAgBkC,kBAAkB,CAACL,KAAU;EAC3C,mEACKD,gBAAgB,CAACC,KAAK,CAAC;IAC1Bb,IAAI,EAAE,IAAI;IACVmB,KAAK,EAAEN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,KAAK;IACnBC,QAAQ,EAAE,CAAC,EAACP,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEO,QAAQ;IAC3BC,aAAa,EAAE,MAAK,aAALR,KAAK,uBAALA,KAAK,CAAES,QAAQ,MAAKC,SAAS,GAAG,CAAC,EAACV,KAAK,aAALA,KAAK,eAALA,KAAK,CAAES,QAAQ,IAAG,IAAI;IACvEE,qBAAqB,EAAE,MAAK,aAALX,KAAK,uBAALA,KAAK,CAAEW,qBAAqB,KAAI;EAAE,GACrDX,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEY,WAAW,GAAG;IAAEA,WAAW,EAAEZ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEY;EAAW,CAAE,GAAG,EAAE,GAC7DZ,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEa,IAAI,GAAG;IAAEA,IAAI,EAAEb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa;EAAI,CAAE,GAAG,EAAE,GACxCb,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEc,UAAU,GAAG;IAAEA,UAAU,EAAEd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc;EAAU,CAAE,GAAG,EAAE;AAElE;AAZA3C;AAcA;;;AAGA,SAAgB4C,gBAAgB,CAACf,KAAU;EACzC,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAACmD;EAAI;AAE7B;AAPAlD;AASA;;;AAGA,SAAgBmD,mBAAmB,CAACtB,KAAU,EAAEuB,OAAa;EAC3D,uCACKlB,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BK,QAAQ,EAAE,CAAC,CAACD,OAAO;IACnBH,IAAI,EAAElD,cAAc,CAACuD;EAAO;AAEhC;AARAtD;AAUA;;;AAGA,SAAgBuD,mBAAmB,CAAC1B,KAAU;EAC5C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAACyD;EAAO;AAEhC;AAPAxD;AASA;;;AAGA,SAAgByD,oBAAoB,CAAC5B,KAAU;EAAA;EAC7C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5B6B,UAAU,EAAE,CAAC,EAAC7B,KAAK,aAALA,KAAK,eAALA,KAAK,CAAE8B,iBAAiB;IACtCd,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BY,aAAa,0BAAE/B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgC,aAAa,uEAAI,IAAI;IAC3CZ,IAAI,EAAElD,cAAc,CAAC+D;EAAQ;AAEjC;AATA9D;AAWA;;;AAGA,SAAgB+D,oBAAoB,CAAClC,KAAU;EAC7C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAACiE;EAAQ;AAEjC;AAPAhE;AASA;;;AAGA,SAAgBiE,oBAAoB,CAACpC,KAAU;EAC7C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DoB,aAAa,EAAE,CAAC,EAACrC,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEsC,YAAY;IACpCpB,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BoB,kBAAkB,EAAEvC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwC,mBAAmB;IAC9CC,OAAO,EAAEzC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEyC,OAAO;IACvBC,OAAO,EAAE1C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE0C,OAAO;IACvBC,UAAU,EAAE3C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE4C,SAAS;IAC5BxB,IAAI,EAAElD,cAAc,CAAC,WAAW;EAAC;AAErC;AAZAC;AAcA;;;AAGA,SAAgB0E,kBAAkB,CAAC7C,KAAU;EAC3C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAAC4E;EAAM;AAE/B;AAPA3E;AASA;;;AAGA,SAAgB4E,oBAAoB,CAAC/C,KAAU;EAAA;EAC7C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgD,OAAO,EAAE,CAAC,MAAK,aAALhD,KAAK,uBAALA,KAAK,CAAEgD,OAAO,KAAI,EAAE,EAAEC,GAAG,CAAC,UAACC,CAAM;MAAA;QACzC5C,KAAK,EAAE4C,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE5C,KAAK;QACf6C,KAAK,EAAED,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC;MAAK,GACXD,CAAC,aAADA,CAAC,eAADA,CAAC,CAAErC,IAAI,GAAG;QAAEA,IAAI,EAAEqC,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAErC;MAAI,CAAE,GAAG,EAAE,GAChCqC,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEE,UAAU,GAAG;QAAEjC,OAAO,EAAE+B,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE;MAAU,CAAE,GAAG,EAAE;IAAA,CACnD,CAAC;IACHhC,IAAI,EAAElD,cAAc,CAACmF,QAAQ;IAC7BC,eAAe,EAAE,MAAK,aAALtD,KAAK,uBAALA,KAAK,CAAEsD,eAAe,MAAK,UAAU,GAAG,UAAU,GAAG,SAAS;IAC/EC,wBAAwB,EAAE;MACxBpD,MAAM,EAAE,MAAK,aAALH,KAAK,8CAALA,KAAK,CAAEwD,YAAY,iFAAnB,oBAAqBrD,MAAM,0DAA3B,sBAA6Bf,EAAE,MAAIY,KAAK,aAALA,KAAK,+CAALA,KAAK,CAAEwD,YAAY,yDAAnB,qBAAqBrD,MAAM;MACtEC,QAAQ,EAAEJ,KAAK,aAALA,KAAK,+CAALA,KAAK,CAAEwD,YAAY,yDAAnB,qBAAqBpD;;EAChC;AAEL;AAhBAjC;AAkBA;;;AAGA,SAAgBsF,4BAA4B,CAACzD,KAAU;EACrD,uCACK+C,oBAAoB,CAAC/C,KAAK,CAAC;IAC9BoB,IAAI,EAAElD,cAAc,CAAC,mBAAmB;EAAC;AAE7C;AALAC;AAOA;;;AAGA,SAAgBuF,iBAAiB,CAAC1D,KAAU;EAC1C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5B2D,MAAM,EAAE,QAAQ;IAChB3C,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAAC0F;EAAK;AAE9B;AARAzF;AAUA;;;AAGA,SAAgB0F,sBAAsB,CAAC7D,KAAU;EAC/C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5B8D,aAAa,EAAE,MAAK,aAAL9D,KAAK,uBAALA,KAAK,CAAE+D,SAAS,KAAI,CAAC;IACpCC,IAAI,EAAE,MAAK,aAALhE,KAAK,uBAALA,KAAK,CAAEgE,IAAI,KAAI,EAAE;IACvB5C,IAAI,EAAElD,cAAc,CAAC,aAAa,CAAC;IACnC+F,iBAAiB,EAAE,CAAC,EAACjE,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEkE,UAAU;EAAA;AAE1C;AARA/F;AAUA;;;AAGA,SAAgBgG,6BAA6B,CAACnE,KAAU;EAAA;EACtD,IAAMoE,qBAAqB,GAAG;IAC5BjE,MAAM,EAAE,MAAK,aAALH,KAAK,+CAALA,KAAK,CAAEwD,YAAY,kFAAnB,qBAAqBrD,MAAM,0DAA3B,sBAA6Bf,EAAE,MAAIY,KAAK,aAALA,KAAK,+CAALA,KAAK,CAAEwD,YAAY,yDAAnB,qBAAqBrD,MAAM;IACtEC,QAAQ,EAAEJ,KAAK,aAALA,KAAK,+CAALA,KAAK,CAAEwD,YAAY,yDAAnB,qBAAqBpD;GAChC;EAED,uCACKC,kBAAkB,CAACL,KAAK,CAAC;IAC5BqE,aAAa,EAAE,MAAK,aAALrE,KAAK,uBAALA,KAAK,CAAEsE,cAAc,KAAI,QAAQ;IAChDC,aAAa,EAAEvE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEuE,aAAa;IACnCnD,IAAI,EAAElD,cAAc,CAAC,oBAAoB,CAAC;IAC1CqF,wBAAwB,oBAAOa,qBAAqB;EAAE;AAE1D;AAbAjG;AAeA;;;AAGA,SAAgBqG,kBAAkB,CAACxE,KAAU;EAC3C,uCACKD,gBAAgB,CAACC,KAAK,CAAC;IAC1BkB,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmD,KAAK;IACzB/B,IAAI,EAAElD,cAAc,CAACuG,MAAM;IAC3B5D,IAAI,EAAE,MAAK,aAALb,KAAK,uBAALA,KAAK,CAAEa,IAAI,KAAI;EAAE;AAE3B;AAPA1C;AASA;;;AAGA,SAAgBuG,4BAA4B,CAAC1E,KAAU;EAAA;EACrD,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5B2E,cAAc,EAAE,CAAC,EAAC3E,KAAK,aAALA,KAAK,eAALA,KAAK,CAAE2E,cAAc;IACvC3B,OAAO,EAAE,CAAC,MAAK,aAALhD,KAAK,uBAALA,KAAK,CAAEgD,OAAO,KAAI,EAAE,EAAEC,GAAG,CAAC,UAACC,CAAM;MAAA;QACzC0B,WAAW,EAAE,EAAC,aAAD1B,CAAC,uBAADA,CAAC,CAAE0B,WAAW,KAAI,EAAE;QACjCtE,KAAK,EAAE4C,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE5C,KAAK;QACfuE,IAAI,EAAE,EAAC,aAAD3B,CAAC,uBAADA,CAAC,CAAE4B,GAAG,KAAI,EAAE;QAClB3B,KAAK,EAAED,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC;MAAK,GACXD,CAAC,aAADA,CAAC,eAADA,CAAC,CAAErC,IAAI,GAAG;QAAEA,IAAI,EAAEqC,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAErC;MAAI,CAAE,GAAG,EAAE,GAChCqC,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEE,UAAU,GAAG;QAAEjC,OAAO,EAAE+B,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE;MAAU,CAAE,GAAG,EAAE;IAAA,CACnD,CAAC;IACH2B,WAAW,EAAE,CAAC,EAAC/E,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEgF,iBAAiB;IACvC5D,IAAI,EAAElD,cAAc,CAAC,sBAAsB,CAAC;IAC5CoF,eAAe,EAAE,MAAK,aAALtD,KAAK,uBAALA,KAAK,CAAEsD,eAAe,MAAK,UAAU,GAAG,UAAU,GAAG,SAAS;IAC/EC,wBAAwB,EAAE;MACxBpD,MAAM,EAAE,MAAK,aAALH,KAAK,+CAALA,KAAK,CAAEwD,YAAY,kFAAnB,qBAAqBrD,MAAM,0DAA3B,sBAA6Bf,EAAE,MAAIY,KAAK,aAALA,KAAK,+CAALA,KAAK,CAAEwD,YAAY,yDAAnB,qBAAqBrD,MAAM;MACtEC,QAAQ,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI;;EAClB;AAEL;AApBAjC;AAsBA;;;AAGA,SAAgB8G,4BAA4B,CAACjF,KAAU;EACrD,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BsB,OAAO,EAAE,MAAK,aAALzC,KAAK,uBAALA,KAAK,CAAEyC,OAAO,KAAI,GAAG;IAC9BC,OAAO,EAAE,MAAK,aAAL1C,KAAK,uBAALA,KAAK,CAAE0C,OAAO,KAAI,CAAC;IAC5BC,UAAU,EAAE,MAAK,aAAL3C,KAAK,uBAALA,KAAK,CAAE4C,SAAS,KAAI,CAAC;IACjCxB,IAAI,EAAElD,cAAc,CAAC,kBAAkB;EAAC;AAE5C;AAVAC;AAYA;;;AAGA,SAAgB+G,kBAAkB,CAAClF,KAAU;EAC3C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BmF,QAAQ,EAAE,MAAK,aAALnF,KAAK,uBAALA,KAAK,CAAEmF,QAAQ,MAAK,IAAI,GAAG,MAAM,GAAGnF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmF,QAAQ;IAC7DnE,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BiE,uBAAuB,EAAE,CAAC,EAACpF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEqF,aAAa;IAC/CjE,IAAI,EAAElD,cAAc,CAACoH;EAAM;AAE/B;AATAnH;AAWA;;;AAGA,SAAgBoH,oBAAoB,CAACvF,KAAU;EAC7C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BkB,WAAW,EAAE,MAAK,aAALlB,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,MAAK,eAAe,GAAGjB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO,GAAG,EAAE;IAC/EC,IAAI,EAAElD,cAAc,CAACsH;EAAQ;AAEjC;AANArH;AAQA;;;AAGA,SAAgBsH,kBAAkB,CAACzF,KAAU;EAC3C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgB,aAAa,EAAE5C,mBAAmB,CAAC4B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,iBAAiB,CAAC;IAC5DC,WAAW,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,OAAO;IAC3BC,IAAI,EAAElD,cAAc,CAAC,SAAS;EAAC;AAEnC;AAPAC;AASA;;;AAGA,SAAgBuH,iBAAiB,CAAC1F,KAAU;EAC1C,uCACKK,kBAAkB,CAACL,KAAK,CAAC;IAC5BgD,OAAO,EAAE,CAAC,MAAK,aAALhD,KAAK,uBAALA,KAAK,CAAEgD,OAAO,KAAI,EAAE,EAAEC,GAAG,CAAC,UAACC,CAAM;MAAA;QACzC5C,KAAK,EAAE4C,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE5C,KAAK;QACf6C,KAAK,EAAED,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC;MAAK,GACXD,CAAC,aAADA,CAAC,eAADA,CAAC,CAAErC,IAAI,GAAG;QAAEA,IAAI,EAAEqC,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAErC;MAAI,CAAE,GAAG,EAAE,GAChCqC,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEE,UAAU,GAAG;QAAEjC,OAAO,EAAE+B,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE;MAAU,CAAE,GAAG,EAAE;IAAA,CACnD,CAAC;IACHhC,IAAI,EAAElD,cAAc,CAACyH;EAAK;AAE9B;AAXAxH;AAaA;;;AAGA,SAAgByH,sBAAsB,CAAC5F,KAAU;EAAA;EAC/C,uCACKD,gBAAgB,CAACC,KAAK,CAAC;IAC1B6F,QAAQ,EAAE,EAAC7F,KAAK,aAALA,KAAK,wCAALA,KAAK,CAAE8F,kBAAkB,kDAAzB,sBAA2BC,WAAW;IACjDC,oBAAoB,EAAE,KAAK;IAC3BC,aAAa,EAAE,KAAK;IACpB7E,IAAI,EAAElD,cAAc,CAACgI;EAAU;AAEnC;AARA/H;AAUA;;;AAGA,SAAgBgI,uBAAuB,CAACnG,KAAU;EAChD,uCACKD,gBAAgB,CAACC,KAAK,CAAC;IAC1BA,KAAK,EAAE,MAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA,KAAK,KAAI,EAAE;IACzBoB,IAAI,EAAElD,cAAc,CAAC,cAAc;EAAC;AAExC;AANAC;AAQA;;;AAGA,SAAgBiI,YAAY,CAACpG,KAAU,EAAEuB,OAAa;EACpD,IAAQ8E,SAAS,GAAKrG,KAAK,CAAnBqG,SAAS;EACjB,QAAQA,SAAS;IACf,KAAK,MAAM;MACT,OAAOtF,gBAAgB,CAACf,KAAK,CAAC;IAChC,KAAK,SAAS;MACZ,OAAOsB,mBAAmB,CAACtB,KAAK,EAAEuB,OAAO,CAAC;IAC5C,KAAK,SAAS;MACZ,OAAOG,mBAAmB,CAAC1B,KAAK,CAAC;IACnC,KAAK,UAAU;MACb,OAAO4B,oBAAoB,CAAC5B,KAAK,CAAC;IACpC,KAAK,UAAU;MACb,OAAOkC,oBAAoB,CAAClC,KAAK,CAAC;IACpC,KAAK,WAAW;MACd,OAAOoC,oBAAoB,CAACpC,KAAK,CAAC;IACpC,KAAK,QAAQ;MACX,OAAO6C,kBAAkB,CAAC7C,KAAK,CAAC;IAClC,KAAK,UAAU;MACb,OAAO+C,oBAAoB,CAAC/C,KAAK,CAAC;IACpC,KAAK,gBAAgB;MACnB,OAAOyD,4BAA4B,CAACzD,KAAK,CAAC;IAC5C,KAAK,OAAO;MACV,OAAO0D,iBAAiB,CAAC1D,KAAK,CAAC;IACjC,KAAK,QAAQ;MACX,OAAO6D,sBAAsB,CAAC7D,KAAK,CAAC;IACtC,KAAK,UAAU;MACb,OAAOmE,6BAA6B,CAACnE,KAAK,CAAC;IAC7C,KAAK,QAAQ;MACX,OAAOwE,kBAAkB,CAACxE,KAAK,CAAC;IAClC,KAAK,cAAc;MACjB,OAAO0E,4BAA4B,CAAC1E,KAAK,CAAC;IAC5C,KAAK,kBAAkB;MACrB,OAAOiF,4BAA4B,CAACjF,KAAK,CAAC;IAC5C,KAAK,QAAQ;MACX,OAAOkF,kBAAkB,CAAClF,KAAK,CAAC;IAClC,KAAK,UAAU;MACb,OAAOuF,oBAAoB,CAACvF,KAAK,CAAC;IACpC,KAAK,QAAQ;MACX,OAAOyF,kBAAkB,CAACzF,KAAK,CAAC;IAClC,KAAK,OAAO;MACV,OAAO0F,iBAAiB,CAAC1F,KAAK,CAAC;IACjC,KAAK,YAAY;MACf,OAAO4F,sBAAsB,CAAC5F,KAAK,CAAC;IACtC,KAAK,MAAM;MACT,OAAOmG,uBAAuB,CAACnG,KAAK,CAAC;IACvC;MACE,OAAO,IAAI;EAAC;AAElB;AAhDA7B","names":["InputFormField","exports","convertDefaultValue","useCurrentValue","defaultValue","convertSubmitButton","oldDisplay","runAnalysis","analysis","clear_form","color","confirmation_cancel","confirmation_confirm","confirmation_message","form","message_submit","confirmation_title","icon","id","identifier","run_analysis","send_data","bypass_bucket","show_confirmation","confirm_before_submit","text","label_submit","wait_for_validation","wait_validation_unlock","convertFormField","field","data","bucket","origin","variable","convertVisualField","label","required","show_new_line","new_line","undefined","visibility_conditions","placeholder","unit","value_type","convertFieldText","default_value","use_current_value","fixed_value","default","type","Text","convertFieldAddress","showMap","show_map","Address","convertFieldBarCode","Barcode","convertFieldCalendar","allow_time","allow_time_select","show_end_date","hide_end_date","Calendar","convertFieldCheckbox","Checkbox","convertFieldClockSet","define_limits","enable_limit","hour_visualization","clock_visualization","maximum","minimum","step_value","increment","convertFieldDevice","Device","convertFieldDropdown","options","map","e","value","is_default","Dropdown","use_values_from","use_values_from_variable","use_variable","convertFieldDropdownMultiple","convertFieldEmail","amount","Email","convertFieldFileUpload","maximum_files","max_files","path","use_mobile_camera","use_camera","convertFieldFilteredVariables","useValuesFromVariable","filter_amount","selection_type","filter_origin","convertFieldHidden","Hidden","convertFieldImageVideoSelect","allow_multiple","description","link","url","show_filter","show_filter_value","convertFieldIncrementalSteps","convertFieldNumber","decimals","show_thousand_separator","show_thousand","Number","convertFieldPassword","Password","convertFieldQrCode","convertFieldRadio","Radio","convertFieldValidation","fade_out","validation_message","always_show","keep_last_validation","show_markdown","Validation","convertFieldCaptureUser","convertField","fieldtype"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\convertFields.ts"],"sourcesContent":["import { generateWidgetItemId } from \"./common\";\nexport enum InputFormField {\n  \"Text\" = \"text\",\n  \"Address\" = \"address\",\n  \"Barcode\" = \"barcode\",\n  \"Calendar\" = \"calendar\",\n  \"Capture user\" = \"user\",\n  \"Checkbox\" = \"checkbox\",\n  \"Clock Set\" = \"clock-set\",\n  \"Device\" = \"device\",\n  \"Dropdown\" = \"dropdown\",\n  \"Dropdown Multiple\" = \"dropdown-multi\",\n  \"Email\" = \"email\",\n  \"File Upload\" = \"upload\",\n  \"Filtered variables\" = \"filtered\",\n  \"Hidden\" = \"hidden\",\n  \"Image / Video Select\" = \"image-select\",\n  \"Incremental Step\" = \"incremental-step\",\n  \"Number\" = \"number\",\n  \"Password\" = \"password\",\n  \"QR Code\" = \"qrcode\",\n  \"Radio\" = \"radio\",\n  \"Validation\" = \"validation\",\n}\n\nfunction convertDefaultValue(useCurrentValue: string): string {\n  let defaultValue: \"last\" | \"fixed\" = \"last\";\n  if (typeof useCurrentValue === \"string\" && useCurrentValue !== \"current_value\") {\n    defaultValue = \"fixed\";\n  }\n  return defaultValue;\n}\n\nexport function convertSubmitButton(oldDisplay: any, runAnalysis: string): Object {\n  return {\n    analysis: runAnalysis || \"\",\n    clear_form: false,\n    color: \"#337ab7\",\n    confirmation_cancel: null,\n    confirmation_confirm: null,\n    confirmation_message: oldDisplay?.form?.message_submit || \"\",\n    confirmation_title: null,\n    icon: null,\n    id: generateWidgetItemId(),\n    identifier: \"\",\n    run_analysis: !!runAnalysis,\n    send_data: !oldDisplay?.form?.bypass_bucket,\n    show_confirmation: !!oldDisplay?.form?.confirm_before_submit,\n    text: !oldDisplay?.form?.label_submit ? \"Send\" : oldDisplay?.form?.label_submit,\n    wait_for_validation: !!oldDisplay?.form?.wait_validation_unlock,\n  };\n}\n\nexport function convertFormField(field: any): any {\n  return {\n    data: {\n      bucket: field?.bucket,\n      origin: field?.origin,\n      variable: field?.variable,\n    },\n    id: field?.id || generateWidgetItemId(),\n  };\n}\n\nexport function convertVisualField(field: any): any {\n  return {\n    ...convertFormField(field),\n    icon: null,\n    label: field?.label,\n    required: !!field?.required,\n    show_new_line: field?.new_line !== undefined ? !!field?.new_line : true,\n    visibility_conditions: field?.visibility_conditions || [],\n    ...(field?.placeholder ? { placeholder: field?.placeholder } : {}),\n    ...(field?.unit ? { unit: field?.unit } : {}),\n    ...(field?.value_type ? { value_type: field?.value_type } : {}),\n  };\n}\n\n/**\n * Convert text fields to new widget format\n */\nexport function convertFieldText(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Text,\n  };\n}\n\n/**\n * Convert address fields to new widget format\n */\nexport function convertFieldAddress(field: any, showMap?: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_map: !!showMap,\n    type: InputFormField.Address,\n  };\n}\n\n/**\n * Convert barcode fields to new widget format\n */\nexport function convertFieldBarCode(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Barcode,\n  };\n}\n\n/**\n * Convert calendar fields to new widget format\n */\nexport function convertFieldCalendar(field: any) {\n  return {\n    ...convertVisualField(field),\n    allow_time: !!field?.allow_time_select,\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_end_date: field?.hide_end_date ?? true,\n    type: InputFormField.Calendar,\n  };\n}\n\n/**\n * Convert calendar fields to new widget format\n */\nexport function convertFieldCheckbox(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Checkbox,\n  };\n}\n\n/**\n * Convert clock set fields to new widget format\n */\nexport function convertFieldClockSet(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    define_limits: !!field?.enable_limit,\n    fixed_value: field?.default,\n    hour_visualization: field?.clock_visualization,\n    maximum: field?.maximum,\n    minimum: field?.minimum,\n    step_value: field?.increment,\n    type: InputFormField[\"Clock Set\"],\n  };\n}\n\n/**\n * Convert device fields to new widget format\n */\nexport function convertFieldDevice(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Device,\n  };\n}\n\n/**\n * Convert dropdown field to new widget format\n */\nexport function convertFieldDropdown(field: any) {\n  return {\n    ...convertVisualField(field),\n    options: (field?.options || []).map((e: any) => ({\n      label: e?.label,\n      value: e?.value,\n      ...(e?.unit ? { unit: e?.unit } : {}),\n      ...(e?.is_default ? { default: e?.is_default } : {}),\n    })),\n    type: InputFormField.Dropdown,\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n      variable: field?.use_variable?.variable,\n    },\n  };\n}\n\n/**\n * Convert dropdown multiples field to new widget format\n */\nexport function convertFieldDropdownMultiple(field: any) {\n  return {\n    ...convertFieldDropdown(field),\n    type: InputFormField[\"Dropdown Multiple\"],\n  };\n}\n\n/**\n * Convert email field to new widget format\n */\nexport function convertFieldEmail(field: any) {\n  return {\n    ...convertVisualField(field),\n    amount: \"single\",\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Email,\n  };\n}\n\n/**\n * Convert file upload field to new widget format\n */\nexport function convertFieldFileUpload(field: any) {\n  return {\n    ...convertVisualField(field),\n    maximum_files: field?.max_files || 1,\n    path: field?.path || \"\",\n    type: InputFormField[\"File Upload\"],\n    use_mobile_camera: !!field?.use_camera,\n  };\n}\n\n/**\n * Convert filtered variables field to new widget format\n */\nexport function convertFieldFilteredVariables(field: any) {\n  const useValuesFromVariable = {\n    origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n    variable: field?.use_variable?.variable,\n  };\n\n  return {\n    ...convertVisualField(field),\n    filter_amount: field?.selection_type || \"single\",\n    filter_origin: field?.filter_origin,\n    type: InputFormField[\"Filtered variables\"],\n    use_values_from_variable: { ...useValuesFromVariable },\n  };\n}\n\n/**\n * Convert hidden field to new widget format\n */\nexport function convertFieldHidden(field: any) {\n  return {\n    ...convertFormField(field),\n    fixed_value: field?.value,\n    type: InputFormField.Hidden,\n    unit: field?.unit || \"\",\n  };\n}\n\n/**\n * Convert Image / Video select field to new widget format\n */\nexport function convertFieldImageVideoSelect(field: any) {\n  return {\n    ...convertVisualField(field),\n    allow_multiple: !!field?.allow_multiple,\n    options: (field?.options || []).map((e: any) => ({\n      description: e?.description || \"\",\n      label: e?.label,\n      link: e?.url || \"\",\n      value: e?.value,\n      ...(e?.unit ? { unit: e?.unit } : {}),\n      ...(e?.is_default ? { default: e?.is_default } : {}),\n    })),\n    show_filter: !!field?.show_filter_value,\n    type: InputFormField[\"Image / Video Select\"],\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n      variable: field?.variable,\n    },\n  };\n}\n\n/**\n * Convert Incremental steps field for new widget format\n */\nexport function convertFieldIncrementalSteps(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    maximum: field?.maximum || 100,\n    minimum: field?.minimum || 0,\n    step_value: field?.increment || 1,\n    type: InputFormField[\"Incremental Step\"],\n  };\n}\n\n/**\n * Convert Number field to new widget format\n */\nexport function convertFieldNumber(field: any) {\n  return {\n    ...convertVisualField(field),\n    decimals: field?.decimals === \"-1\" ? \"auto\" : field?.decimals,\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_thousand_separator: !!field?.show_thousand,\n    type: InputFormField.Number,\n  };\n}\n\n/**\n * Convert Password field to new widget format\n */\nexport function convertFieldPassword(field: any) {\n  return {\n    ...convertVisualField(field),\n    fixed_value: field?.use_current_value !== \"current_value\" ? field?.default : \"\",\n    type: InputFormField.Password,\n  };\n}\n\n/**\n * Convert QR Code field to new widget format\n */\nexport function convertFieldQrCode(field: any) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField[\"QR Code\"],\n  };\n}\n\n/**\n * Convert Radio field to new widget format\n */\nexport function convertFieldRadio(field: any) {\n  return {\n    ...convertVisualField(field),\n    options: (field?.options || []).map((e: any) => ({\n      label: e?.label,\n      value: e?.value,\n      ...(e?.unit ? { unit: e?.unit } : {}),\n      ...(e?.is_default ? { default: e?.is_default } : {}),\n    })),\n    type: InputFormField.Radio,\n  };\n}\n\n/**\n * Convert Validation field to new widget format\n */\nexport function convertFieldValidation(field: any) {\n  return {\n    ...convertFormField(field),\n    fade_out: !field?.validation_message?.always_show,\n    keep_last_validation: false,\n    show_markdown: false,\n    type: InputFormField.Validation,\n  };\n}\n\n/**\n * Convert Capture user field to new widget format\n */\nexport function convertFieldCaptureUser(field: any) {\n  return {\n    ...convertFormField(field),\n    field: field?.field || \"\",\n    type: InputFormField[\"Capture user\"],\n  };\n}\n\n/**\n * Convert fields\n */\nexport function convertField(field: any, showMap?: any) {\n  const { fieldtype } = field;\n  switch (fieldtype) {\n    case \"text\":\n      return convertFieldText(field);\n    case \"address\":\n      return convertFieldAddress(field, showMap);\n    case \"barcode\":\n      return convertFieldBarCode(field);\n    case \"calendar\":\n      return convertFieldCalendar(field);\n    case \"checkbox\":\n      return convertFieldCheckbox(field);\n    case \"clock-set\":\n      return convertFieldClockSet(field);\n    case \"device\":\n      return convertFieldDevice(field);\n    case \"dropdown\":\n      return convertFieldDropdown(field);\n    case \"dropdown-multi\":\n      return convertFieldDropdownMultiple(field);\n    case \"email\":\n      return convertFieldEmail(field);\n    case \"upload\":\n      return convertFieldFileUpload(field);\n    case \"filtered\":\n      return convertFieldFilteredVariables(field);\n    case \"hidden\":\n      return convertFieldHidden(field);\n    case \"image-select\":\n      return convertFieldImageVideoSelect(field);\n    case \"incremental-step\":\n      return convertFieldIncrementalSteps(field);\n    case \"number\":\n      return convertFieldNumber(field);\n    case \"password\":\n      return convertFieldPassword(field);\n    case \"qrcode\":\n      return convertFieldQrCode(field);\n    case \"radio\":\n      return convertFieldRadio(field);\n    case \"validation\":\n      return convertFieldValidation(field);\n    case \"user\":\n      return convertFieldCaptureUser(field);\n    default:\n      return null;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}