{"ast":null,"code":"\"use strict\";\n\n// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Converts the OLD RANGE to BLUEPRINT RANGE\n// ? ====================================================================================\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst isNumber = s => {\n  const str = (\"\" + s).trim();\n  if (str.length === 0) {\n    return false;\n  }\n  return !isNaN(+str);\n};\nfunction convertRange(oldWidgetDisplay) {\n  const range = {};\n  if (oldWidgetDisplay.range_limit === \"metadata\") {\n    range.type = \"metadata\";\n    if (oldWidgetDisplay.range_limit_metadata === \"custom\") {\n      range.metadata_origin = \"variable\";\n      const oldVariable = oldWidgetDisplay.range_limit_variable;\n      const variable = {\n        origin: oldVariable.origin?.id || oldVariable?.origin,\n        variable: oldVariable?.variable\n      };\n      range.variable = variable;\n    } else {\n      range.metadata_origin = oldWidgetDisplay.range_limit_metadata === \"origin\" ? \"original\" : \"formula\";\n    }\n  } else {\n    range.type = \"minmax\";\n    const min = oldWidgetDisplay.minimum;\n    const max = oldWidgetDisplay.maximum;\n    range.minimum = min !== undefined && isNumber(min) ? Number(min) : 0;\n    range.maximum = max !== undefined && isNumber(max) ? Number(max) : 100;\n  }\n  return range;\n}\nexports.default = convertRange;","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;;;;AAEA,MAAMA,QAAQ,GAAIC,CAAM,IAAa;EACnC,MAAMC,GAAG,GAAG,CAAC,EAAE,GAAGD,CAAC,EAAEE,IAAI,EAAE;EAC3B,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,OAAO,KAAK;;EAEd,OAAO,CAACC,KAAK,CAAC,CAACH,GAAG,CAAC;AACrB,CAAC;AAED,SAASI,YAAY,CAACC,gBAAqB;EACzC,MAAMC,KAAK,GAAQ,EAAE;EAErB,IAAID,gBAAgB,CAACE,WAAW,KAAK,UAAU,EAAE;IAC/CD,KAAK,CAACE,IAAI,GAAG,UAAU;IACvB,IAAIH,gBAAgB,CAACI,oBAAoB,KAAK,QAAQ,EAAE;MACtDH,KAAK,CAACI,eAAe,GAAG,UAAU;MAClC,MAAMC,WAAW,GAAGN,gBAAgB,CAACO,oBAAoB;MACzD,MAAMC,QAAQ,GAAG;QACfC,MAAM,EAAEH,WAAW,CAACG,MAAM,EAAEC,EAAE,IAAIJ,WAAW,EAAEG,MAAM;QACrDD,QAAQ,EAAEF,WAAW,EAAEE;OACxB;MACDP,KAAK,CAACO,QAAQ,GAAGA,QAAQ;KAC1B,MAAM;MACLP,KAAK,CAACI,eAAe,GAAGL,gBAAgB,CAACI,oBAAoB,KAAK,QAAQ,GAAG,UAAU,GAAG,SAAS;;GAEtG,MAAM;IACLH,KAAK,CAACE,IAAI,GAAG,QAAQ;IACrB,MAAMQ,GAAG,GAAGX,gBAAgB,CAACY,OAAO;IACpC,MAAMC,GAAG,GAAGb,gBAAgB,CAACc,OAAO;IACpCb,KAAK,CAACW,OAAO,GAAGD,GAAG,KAAKI,SAAS,IAAItB,QAAQ,CAACkB,GAAG,CAAC,GAAGK,MAAM,CAACL,GAAG,CAAC,GAAG,CAAC;IACpEV,KAAK,CAACa,OAAO,GAAGD,GAAG,KAAKE,SAAS,IAAItB,QAAQ,CAACoB,GAAG,CAAC,GAAGG,MAAM,CAACH,GAAG,CAAC,GAAG,GAAG;;EAGxE,OAAOZ,KAAK;AACd;AAEAgB,kBAAelB,YAAY","names":["isNumber","s","str","trim","length","isNaN","convertRange","oldWidgetDisplay","range","range_limit","type","range_limit_metadata","metadata_origin","oldVariable","range_limit_variable","variable","origin","id","min","minimum","max","maximum","undefined","Number","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\common\\convertRange.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Converts the OLD RANGE to BLUEPRINT RANGE\n// ? ====================================================================================\n\nconst isNumber = (s: any): boolean => {\n  const str = (\"\" + s).trim();\n  if (str.length === 0) {\n    return false;\n  }\n  return !isNaN(+str);\n};\n\nfunction convertRange(oldWidgetDisplay: any): any {\n  const range: any = {};\n\n  if (oldWidgetDisplay.range_limit === \"metadata\") {\n    range.type = \"metadata\";\n    if (oldWidgetDisplay.range_limit_metadata === \"custom\") {\n      range.metadata_origin = \"variable\";\n      const oldVariable = oldWidgetDisplay.range_limit_variable;\n      const variable = {\n        origin: oldVariable.origin?.id || oldVariable?.origin,\n        variable: oldVariable?.variable,\n      };\n      range.variable = variable;\n    } else {\n      range.metadata_origin = oldWidgetDisplay.range_limit_metadata === \"origin\" ? \"original\" : \"formula\";\n    }\n  } else {\n    range.type = \"minmax\";\n    const min = oldWidgetDisplay.minimum;\n    const max = oldWidgetDisplay.maximum;\n    range.minimum = min !== undefined && isNumber(min) ? Number(min) : 0;\n    range.maximum = max !== undefined && isNumber(max) ? Number(max) : 100;\n  }\n\n  return range;\n}\n\nexport default convertRange;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}