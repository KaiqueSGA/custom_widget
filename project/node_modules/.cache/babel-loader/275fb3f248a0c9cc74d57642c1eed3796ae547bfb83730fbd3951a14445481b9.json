{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nclass Notification extends TagoIOModule_1.default {\n  /**\n   * Send Notification\n   * You can add ref_id from a bucket or dashboard,\n   * if it is valid it will show up a button Go To Dashboard\n   * Any account with share of the dashboard/bucket will receive too.\n   * @param notification Notification Object\n   */\n  async send(notification) {\n    const result = await this.doRequest({\n      path: \"/analysis/services/notification/send\",\n      method: \"POST\",\n      body: notification\n    });\n    return result;\n  }\n}\nexports.default = Notification;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAIA,MAAMA,YAAa,SAAQC,sBAAiC;EAC1D;;;;;;;EAOO,MAAMC,IAAI,CAACC,YAAgC;IAChD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAAS;MAC1CC,IAAI,EAAE,sCAAsC;MAC5CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;KACP,CAAC;IAEF,OAAOC,MAAM;EACf;;AAGFK,kBAAeT,YAAY","names":["Notification","TagoIOModule_1","send","notification","result","doRequest","path","method","body","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Services\\Notification.ts"],"sourcesContent":["import TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\nimport { GenericID } from \"../../common/common.types\";\nimport { NotificationCreate } from \"../Account/notifications.types\";\n\nclass Notification extends TagoIOModule<GenericModuleParams> {\n  /**\n   * Send Notification\n   * You can add ref_id from a bucket or dashboard,\n   * if it is valid it will show up a button Go To Dashboard\n   * Any account with share of the dashboard/bucket will receive too.\n   * @param notification Notification Object\n   */\n  public async send(notification: NotificationCreate): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: \"/analysis/services/notification/send\",\n      method: \"POST\",\n      body: notification,\n    });\n\n    return result;\n  }\n}\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}