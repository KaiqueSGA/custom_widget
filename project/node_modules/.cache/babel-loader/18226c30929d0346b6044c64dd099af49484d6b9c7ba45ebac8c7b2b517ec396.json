{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Parse a LoRaWAN QR Code string to JSON format.\n * example:\n * @param qr_code QR Code string, example: LW:D0:1122334455667788:AABBCCDDEEFF0011:AABB1122:OAABBCCDDEEFF:SYYWWNNNNNN:PFOOBAR:CAF2C\n */\nfunction parseQRCode(qr_code) {\n  var parsed = qr_code.split(\":\");\n  if (parsed.length < 4) {\n    throw \"Invalid QR Code\";\n  }\n  if (parsed.length >= 9) {\n    return {\n      type: parsed[0],\n      schema_id: parsed[1],\n      join_eui: parsed[2],\n      dev_eui: parsed[3],\n      profile_id: parsed[4],\n      owner_token: parsed[5],\n      sn_number: parsed[6],\n      proprietary: parsed[7],\n      checksum: parsed[8]\n    };\n  }\n  return {\n    type: parsed[0],\n    schema_id: parsed[1],\n    join_eui: parsed[2],\n    dev_eui: parsed[3],\n    profile_id: parsed[4]\n  };\n}\nexports.default = parseQRCode;","map":{"version":3,"mappings":";;;;;AAEA;;;;;AAKA,SAASA,WAAW,CAACC,OAAe;EAClC,IAAMC,MAAM,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;EAEjC,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IACrB,MAAM,iBAAiB;;EAGzB,IAAIF,MAAM,CAACE,MAAM,IAAI,CAAC,EAAE;IACtB,OAAO;MACLC,IAAI,EAAEH,MAAM,CAAC,CAAC,CAAC;MACfI,SAAS,EAAEJ,MAAM,CAAC,CAAC,CAAC;MACpBK,QAAQ,EAAEL,MAAM,CAAC,CAAC,CAAC;MACnBM,OAAO,EAAEN,MAAM,CAAC,CAAC,CAAC;MAClBO,UAAU,EAAEP,MAAM,CAAC,CAAC,CAAC;MACrBQ,WAAW,EAAER,MAAM,CAAC,CAAC,CAAC;MACtBS,SAAS,EAAET,MAAM,CAAC,CAAC,CAAC;MACpBU,WAAW,EAAEV,MAAM,CAAC,CAAC,CAAC;MACtBW,QAAQ,EAAEX,MAAM,CAAC,CAAC;KACnB;;EAGH,OAAO;IACLG,IAAI,EAAEH,MAAM,CAAC,CAAC,CAAC;IACfI,SAAS,EAAEJ,MAAM,CAAC,CAAC,CAAC;IACpBK,QAAQ,EAAEL,MAAM,CAAC,CAAC,CAAC;IACnBM,OAAO,EAAEN,MAAM,CAAC,CAAC,CAAC;IAClBO,UAAU,EAAEP,MAAM,CAAC,CAAC;GACrB;AACH;AAEAY,kBAAed,WAAW","names":["parseQRCode","qr_code","parsed","split","length","type","schema_id","join_eui","dev_eui","profile_id","owner_token","sn_number","proprietary","checksum","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Utils\\parseLorawanQRCode.ts"],"sourcesContent":["import { QRCodeFormat } from \"./utils.types\";\n\n/**\n * Parse a LoRaWAN QR Code string to JSON format.\n * example:\n * @param qr_code QR Code string, example: LW:D0:1122334455667788:AABBCCDDEEFF0011:AABB1122:OAABBCCDDEEFF:SYYWWNNNNNN:PFOOBAR:CAF2C\n */\nfunction parseQRCode(qr_code: string): QRCodeFormat {\n  const parsed = qr_code.split(\":\");\n\n  if (parsed.length < 4) {\n    throw \"Invalid QR Code\";\n  }\n\n  if (parsed.length >= 9) {\n    return {\n      type: parsed[0],\n      schema_id: parsed[1],\n      join_eui: parsed[2],\n      dev_eui: parsed[3],\n      profile_id: parsed[4],\n      owner_token: parsed[5],\n      sn_number: parsed[6],\n      proprietary: parsed[7],\n      checksum: parsed[8],\n    };\n  }\n\n  return {\n    type: parsed[0],\n    schema_id: parsed[1],\n    join_eui: parsed[2],\n    dev_eui: parsed[3],\n    profile_id: parsed[4],\n  };\n}\n\nexport default parseQRCode;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}