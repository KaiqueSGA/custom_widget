{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/mqtt_wid/dash_mqtt/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOldStructure = exports.convert = void 0;\nfunction convertState(oldState) {\n  var newState = _objectSpread(_objectSpread({}, oldState), {}, {\n    type: (oldState === null || oldState === void 0 ? void 0 : oldState.type) || \"text\",\n    color: (oldState === null || oldState === void 0 ? void 0 : oldState.text_color) || \"\"\n  });\n  delete newState.text_color;\n  return newState;\n}\nfunction convert(oldWidget) {\n  var oldDisplay = oldWidget.display || {};\n  var newStructure = {\n    analysis_run: oldWidget === null || oldWidget === void 0 ? void 0 : oldWidget.analysis_run,\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      button_type: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.button_type) === \"bi-stable\" ? \"bistable\" : \"monostable\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      show_variables: !(oldDisplay !== null && oldDisplay !== void 0 && oldDisplay.hide_variables),\n      state_one: convertState(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.state_one),\n      state_two: convertState(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.state_two),\n      theme: {\n        color: {\n          background: null,\n          text: null\n        }\n      }\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"push_button\"\n  };\n  if (Array.isArray(oldWidget.data)) {\n    var _iterator = _createForOfIteratorHelper(oldWidget.data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (item !== null && item !== void 0 && item.is_hide) {\n          continue;\n        }\n        var _iterator2 = _createForOfIteratorHelper(item.variables),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _oldDisplay$vars_labe, _oldDisplay$vars_labe2;\n            var variable = _step2.value;\n            var key = \"\".concat(item === null || item === void 0 ? void 0 : item.origin).concat(variable);\n            if (oldDisplay !== null && oldDisplay !== void 0 && (_oldDisplay$vars_labe = oldDisplay.vars_labels) !== null && _oldDisplay$vars_labe !== void 0 && _oldDisplay$vars_labe[key] && (oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$vars_labe2 = oldDisplay.vars_labels) === null || _oldDisplay$vars_labe2 === void 0 ? void 0 : _oldDisplay$vars_labe2[key]) !== variable) {\n              var _oldDisplay$vars_labe3;\n              newStructure.display.alias = oldDisplay === null || oldDisplay === void 0 ? void 0 : (_oldDisplay$vars_labe3 = oldDisplay.vars_labels) === null || _oldDisplay$vars_labe3 === void 0 ? void 0 : _oldDisplay$vars_labe3[key];\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\nexports.convert = convert;\nfunction isOldStructure(widget) {\n  var _widget$display, _widget$display2, _widget$display3;\n  var isOld = !!(widget !== null && widget !== void 0 && (_widget$display = widget.display) !== null && _widget$display !== void 0 && _widget$display.vars_labels || widget !== null && widget !== void 0 && (_widget$display2 = widget.display) !== null && _widget$display2 !== void 0 && _widget$display2.vars_format || widget !== null && widget !== void 0 && (_widget$display3 = widget.display) !== null && _widget$display3 !== void 0 && _widget$display3.vars_formula);\n  return isOld;\n}\nexports.isOldStructure = isOldStructure;","map":{"version":3,"mappings":"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","names":["convertState","oldState","newState","type","color","text_color","convert","oldWidget","oldDisplay","display","newStructure","analysis_run","dashboard","alias","button_type","header_buttons","help","show_variables","hide_variables","state_one","state_two","theme","background","text","id","label","realtime","Array","isArray","data","item","is_hide","variables","variable","key","origin","vars_labels","exports","isOldStructure","widget","isOld","vars_format","vars_formula"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\mqtt_wid\\dash_mqtt\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\pushbutton.ts"],"sourcesContent":["// ? ==================================== (c) TagoIO ====================================\n// * What is this file?\n//     Migration of old PUSH BUTTON to new PUSH BUTTON\n// ? ====================================================================================\nimport { WidgetInfo } from \"../Account/dashboards.types\";\n\nfunction convertState(oldState: any) {\n  const newState = {\n    ...oldState,\n    type: oldState?.type || \"text\",\n    color: oldState?.text_color || \"\",\n  };\n  delete newState.text_color;\n\n  return newState;\n}\n\nexport function convert(oldWidget: any): WidgetInfo {\n  const oldDisplay = oldWidget.display || {};\n\n  const newStructure: any = {\n    analysis_run: oldWidget?.analysis_run,\n    dashboard: oldWidget.dashboard,\n    display: {\n      alias: \"\",\n      button_type: oldDisplay?.button_type === \"bi-stable\" ? \"bistable\" : \"monostable\",\n      header_buttons: oldDisplay.header_buttons || [],\n      help: oldDisplay.help || \"\",\n      show_variables: !oldDisplay?.hide_variables,\n      state_one: convertState(oldDisplay?.state_one),\n      state_two: convertState(oldDisplay?.state_two),\n      theme: {\n        color: {\n          background: null,\n          text: null,\n        },\n      },\n    },\n    id: oldWidget.id,\n    label: oldWidget.label,\n    realtime: null,\n    type: \"push_button\",\n  };\n\n  if (Array.isArray(oldWidget.data)) {\n    for (const item of oldWidget.data) {\n      if (item?.is_hide) {\n        continue;\n      }\n      for (const variable of item.variables) {\n        const key = `${item?.origin}${variable}`;\n        if (oldDisplay?.vars_labels?.[key] && oldDisplay?.vars_labels?.[key] !== variable) {\n          newStructure.display.alias = oldDisplay?.vars_labels?.[key];\n        }\n      }\n    }\n\n    newStructure.data = oldWidget.data;\n  }\n  return newStructure;\n}\n\nexport function isOldStructure(widget: any) {\n  const isOld = !!(widget?.display?.vars_labels || widget?.display?.vars_format || widget?.display?.vars_formula);\n\n  return isOld;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}