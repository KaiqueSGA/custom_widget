{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertField = exports.convertFieldCaptureUser = exports.convertFieldValidation = exports.convertFieldRadio = exports.convertFieldQrCode = exports.convertFieldPassword = exports.convertFieldNumber = exports.convertFieldIncrementalSteps = exports.convertFieldImageVideoSelect = exports.convertFieldHidden = exports.convertFieldFilteredVariables = exports.convertFieldFileUpload = exports.convertFieldEmail = exports.convertFieldDropdownMultiple = exports.convertFieldDropdown = exports.convertFieldDevice = exports.convertFieldClockSet = exports.convertFieldCheckbox = exports.convertFieldCalendar = exports.convertFieldBarCode = exports.convertFieldAddress = exports.convertFieldText = exports.convertVisualField = exports.convertFormField = exports.convertSubmitButton = exports.InputFormField = void 0;\nconst common_1 = require(\"./common\");\nvar InputFormField;\n(function (InputFormField) {\n  InputFormField[\"Text\"] = \"text\";\n  InputFormField[\"Address\"] = \"address\";\n  InputFormField[\"Barcode\"] = \"barcode\";\n  InputFormField[\"Calendar\"] = \"calendar\";\n  InputFormField[\"Capture user\"] = \"user\";\n  InputFormField[\"Checkbox\"] = \"checkbox\";\n  InputFormField[\"Clock Set\"] = \"clock-set\";\n  InputFormField[\"Device\"] = \"device\";\n  InputFormField[\"Dropdown\"] = \"dropdown\";\n  InputFormField[\"Dropdown Multiple\"] = \"dropdown-multi\";\n  InputFormField[\"Email\"] = \"email\";\n  InputFormField[\"File Upload\"] = \"upload\";\n  InputFormField[\"Filtered variables\"] = \"filtered\";\n  InputFormField[\"Hidden\"] = \"hidden\";\n  InputFormField[\"Image / Video Select\"] = \"image-select\";\n  InputFormField[\"Incremental Step\"] = \"incremental-step\";\n  InputFormField[\"Number\"] = \"number\";\n  InputFormField[\"Password\"] = \"password\";\n  InputFormField[\"QR Code\"] = \"qrcode\";\n  InputFormField[\"Radio\"] = \"radio\";\n  InputFormField[\"Validation\"] = \"validation\";\n})(InputFormField = exports.InputFormField || (exports.InputFormField = {}));\nfunction convertDefaultValue(useCurrentValue) {\n  let defaultValue = \"last\";\n  if (typeof useCurrentValue === \"string\" && useCurrentValue !== \"current_value\") {\n    defaultValue = \"fixed\";\n  }\n  return defaultValue;\n}\nfunction convertSubmitButton(oldDisplay, runAnalysis) {\n  return {\n    analysis: runAnalysis || \"\",\n    clear_form: false,\n    color: \"#337ab7\",\n    confirmation_cancel: null,\n    confirmation_confirm: null,\n    confirmation_message: oldDisplay?.form?.message_submit || \"\",\n    confirmation_title: null,\n    icon: null,\n    id: (0, common_1.generateWidgetItemId)(),\n    identifier: \"\",\n    run_analysis: !!runAnalysis,\n    send_data: !oldDisplay?.form?.bypass_bucket,\n    show_confirmation: !!oldDisplay?.form?.confirm_before_submit,\n    text: !oldDisplay?.form?.label_submit ? \"Send\" : oldDisplay?.form?.label_submit,\n    wait_for_validation: !!oldDisplay?.form?.wait_validation_unlock\n  };\n}\nexports.convertSubmitButton = convertSubmitButton;\nfunction convertFormField(field) {\n  return {\n    data: {\n      bucket: field?.bucket,\n      origin: field?.origin,\n      variable: field?.variable\n    },\n    id: field?.id || (0, common_1.generateWidgetItemId)()\n  };\n}\nexports.convertFormField = convertFormField;\nfunction convertVisualField(field) {\n  return {\n    ...convertFormField(field),\n    icon: null,\n    label: field?.label,\n    required: !!field?.required,\n    show_new_line: field?.new_line !== undefined ? !!field?.new_line : true,\n    visibility_conditions: field?.visibility_conditions || [],\n    ...(field?.placeholder ? {\n      placeholder: field?.placeholder\n    } : {}),\n    ...(field?.unit ? {\n      unit: field?.unit\n    } : {}),\n    ...(field?.value_type ? {\n      value_type: field?.value_type\n    } : {})\n  };\n}\nexports.convertVisualField = convertVisualField;\n/**\r\n * Convert text fields to new widget format\r\n */\nfunction convertFieldText(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Text\n  };\n}\nexports.convertFieldText = convertFieldText;\n/**\r\n * Convert address fields to new widget format\r\n */\nfunction convertFieldAddress(field, showMap) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_map: !!showMap,\n    type: InputFormField.Address\n  };\n}\nexports.convertFieldAddress = convertFieldAddress;\n/**\r\n * Convert barcode fields to new widget format\r\n */\nfunction convertFieldBarCode(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Barcode\n  };\n}\nexports.convertFieldBarCode = convertFieldBarCode;\n/**\r\n * Convert calendar fields to new widget format\r\n */\nfunction convertFieldCalendar(field) {\n  return {\n    ...convertVisualField(field),\n    allow_time: !!field?.allow_time_select,\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_end_date: field?.hide_end_date ?? true,\n    type: InputFormField.Calendar\n  };\n}\nexports.convertFieldCalendar = convertFieldCalendar;\n/**\r\n * Convert calendar fields to new widget format\r\n */\nfunction convertFieldCheckbox(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Checkbox\n  };\n}\nexports.convertFieldCheckbox = convertFieldCheckbox;\n/**\r\n * Convert clock set fields to new widget format\r\n */\nfunction convertFieldClockSet(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    define_limits: !!field?.enable_limit,\n    fixed_value: field?.default,\n    hour_visualization: field?.clock_visualization,\n    maximum: field?.maximum,\n    minimum: field?.minimum,\n    step_value: field?.increment,\n    type: InputFormField[\"Clock Set\"]\n  };\n}\nexports.convertFieldClockSet = convertFieldClockSet;\n/**\r\n * Convert device fields to new widget format\r\n */\nfunction convertFieldDevice(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Device\n  };\n}\nexports.convertFieldDevice = convertFieldDevice;\n/**\r\n * Convert dropdown field to new widget format\r\n */\nfunction convertFieldDropdown(field) {\n  return {\n    ...convertVisualField(field),\n    options: (field?.options || []).map(e => ({\n      label: e?.label,\n      value: e?.value,\n      ...(e?.unit ? {\n        unit: e?.unit\n      } : {}),\n      ...(e?.is_default ? {\n        default: e?.is_default\n      } : {})\n    })),\n    type: InputFormField.Dropdown,\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n      variable: field?.use_variable?.variable\n    }\n  };\n}\nexports.convertFieldDropdown = convertFieldDropdown;\n/**\r\n * Convert dropdown multiples field to new widget format\r\n */\nfunction convertFieldDropdownMultiple(field) {\n  return {\n    ...convertFieldDropdown(field),\n    type: InputFormField[\"Dropdown Multiple\"]\n  };\n}\nexports.convertFieldDropdownMultiple = convertFieldDropdownMultiple;\n/**\r\n * Convert email field to new widget format\r\n */\nfunction convertFieldEmail(field) {\n  return {\n    ...convertVisualField(field),\n    amount: \"single\",\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField.Email\n  };\n}\nexports.convertFieldEmail = convertFieldEmail;\n/**\r\n * Convert file upload field to new widget format\r\n */\nfunction convertFieldFileUpload(field) {\n  return {\n    ...convertVisualField(field),\n    maximum_files: field?.max_files || 1,\n    path: field?.path || \"\",\n    type: InputFormField[\"File Upload\"],\n    use_mobile_camera: !!field?.use_camera\n  };\n}\nexports.convertFieldFileUpload = convertFieldFileUpload;\n/**\r\n * Convert filtered variables field to new widget format\r\n */\nfunction convertFieldFilteredVariables(field) {\n  const useValuesFromVariable = {\n    origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n    variable: field?.use_variable?.variable\n  };\n  return {\n    ...convertVisualField(field),\n    filter_amount: field?.selection_type || \"single\",\n    filter_origin: field?.filter_origin,\n    type: InputFormField[\"Filtered variables\"],\n    use_values_from_variable: {\n      ...useValuesFromVariable\n    }\n  };\n}\nexports.convertFieldFilteredVariables = convertFieldFilteredVariables;\n/**\r\n * Convert hidden field to new widget format\r\n */\nfunction convertFieldHidden(field) {\n  return {\n    ...convertFormField(field),\n    fixed_value: field?.value,\n    type: InputFormField.Hidden,\n    unit: field?.unit || \"\"\n  };\n}\nexports.convertFieldHidden = convertFieldHidden;\n/**\r\n * Convert Image / Video select field to new widget format\r\n */\nfunction convertFieldImageVideoSelect(field) {\n  return {\n    ...convertVisualField(field),\n    allow_multiple: !!field?.allow_multiple,\n    options: (field?.options || []).map(e => ({\n      description: e?.description || \"\",\n      label: e?.label,\n      link: e?.url || \"\",\n      value: e?.value,\n      ...(e?.unit ? {\n        unit: e?.unit\n      } : {}),\n      ...(e?.is_default ? {\n        default: e?.is_default\n      } : {})\n    })),\n    show_filter: !!field?.show_filter_value,\n    type: InputFormField[\"Image / Video Select\"],\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\n    use_values_from_variable: {\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\n      variable: field?.variable\n    }\n  };\n}\nexports.convertFieldImageVideoSelect = convertFieldImageVideoSelect;\n/**\r\n * Convert Incremental steps field for new widget format\r\n */\nfunction convertFieldIncrementalSteps(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    maximum: field?.maximum || 100,\n    minimum: field?.minimum || 0,\n    step_value: field?.increment || 1,\n    type: InputFormField[\"Incremental Step\"]\n  };\n}\nexports.convertFieldIncrementalSteps = convertFieldIncrementalSteps;\n/**\r\n * Convert Number field to new widget format\r\n */\nfunction convertFieldNumber(field) {\n  return {\n    ...convertVisualField(field),\n    decimals: field?.decimals === \"-1\" ? \"auto\" : field?.decimals,\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    show_thousand_separator: !!field?.show_thousand,\n    type: InputFormField.Number\n  };\n}\nexports.convertFieldNumber = convertFieldNumber;\n/**\r\n * Convert Password field to new widget format\r\n */\nfunction convertFieldPassword(field) {\n  return {\n    ...convertVisualField(field),\n    fixed_value: field?.use_current_value !== \"current_value\" ? field?.default : \"\",\n    type: InputFormField.Password\n  };\n}\nexports.convertFieldPassword = convertFieldPassword;\n/**\r\n * Convert QR Code field to new widget format\r\n */\nfunction convertFieldQrCode(field) {\n  return {\n    ...convertVisualField(field),\n    default_value: convertDefaultValue(field?.use_current_value),\n    fixed_value: field?.default,\n    type: InputFormField[\"QR Code\"]\n  };\n}\nexports.convertFieldQrCode = convertFieldQrCode;\n/**\r\n * Convert Radio field to new widget format\r\n */\nfunction convertFieldRadio(field) {\n  return {\n    ...convertVisualField(field),\n    options: (field?.options || []).map(e => ({\n      label: e?.label,\n      value: e?.value,\n      ...(e?.unit ? {\n        unit: e?.unit\n      } : {}),\n      ...(e?.is_default ? {\n        default: e?.is_default\n      } : {})\n    })),\n    type: InputFormField.Radio\n  };\n}\nexports.convertFieldRadio = convertFieldRadio;\n/**\r\n * Convert Validation field to new widget format\r\n */\nfunction convertFieldValidation(field) {\n  return {\n    ...convertFormField(field),\n    fade_out: !field?.validation_message?.always_show,\n    keep_last_validation: false,\n    show_markdown: false,\n    type: InputFormField.Validation\n  };\n}\nexports.convertFieldValidation = convertFieldValidation;\n/**\r\n * Convert Capture user field to new widget format\r\n */\nfunction convertFieldCaptureUser(field) {\n  return {\n    ...convertFormField(field),\n    field: field?.field || \"\",\n    type: InputFormField[\"Capture user\"]\n  };\n}\nexports.convertFieldCaptureUser = convertFieldCaptureUser;\n/**\r\n * Convert fields\r\n */\nfunction convertField(field, showMap) {\n  const {\n    fieldtype\n  } = field;\n  switch (fieldtype) {\n    case \"text\":\n      return convertFieldText(field);\n    case \"address\":\n      return convertFieldAddress(field, showMap);\n    case \"barcode\":\n      return convertFieldBarCode(field);\n    case \"calendar\":\n      return convertFieldCalendar(field);\n    case \"checkbox\":\n      return convertFieldCheckbox(field);\n    case \"clock-set\":\n      return convertFieldClockSet(field);\n    case \"device\":\n      return convertFieldDevice(field);\n    case \"dropdown\":\n      return convertFieldDropdown(field);\n    case \"dropdown-multi\":\n      return convertFieldDropdownMultiple(field);\n    case \"email\":\n      return convertFieldEmail(field);\n    case \"upload\":\n      return convertFieldFileUpload(field);\n    case \"filtered\":\n      return convertFieldFilteredVariables(field);\n    case \"hidden\":\n      return convertFieldHidden(field);\n    case \"image-select\":\n      return convertFieldImageVideoSelect(field);\n    case \"incremental-step\":\n      return convertFieldIncrementalSteps(field);\n    case \"number\":\n      return convertFieldNumber(field);\n    case \"password\":\n      return convertFieldPassword(field);\n    case \"qrcode\":\n      return convertFieldQrCode(field);\n    case \"radio\":\n      return convertFieldRadio(field);\n    case \"validation\":\n      return convertFieldValidation(field);\n    case \"user\":\n      return convertFieldCaptureUser(field);\n    default:\n      return null;\n  }\n}\nexports.convertField = convertField;","map":{"version":3,"mappings":"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","names":["InputFormField","exports","convertDefaultValue","useCurrentValue","defaultValue","convertSubmitButton","oldDisplay","runAnalysis","analysis","clear_form","color","confirmation_cancel","confirmation_confirm","confirmation_message","form","message_submit","confirmation_title","icon","id","identifier","run_analysis","send_data","bypass_bucket","show_confirmation","confirm_before_submit","text","label_submit","wait_for_validation","wait_validation_unlock","convertFormField","field","data","bucket","origin","variable","convertVisualField","label","required","show_new_line","new_line","undefined","visibility_conditions","placeholder","unit","value_type","convertFieldText","default_value","use_current_value","fixed_value","default","type","Text","convertFieldAddress","showMap","show_map","Address","convertFieldBarCode","Barcode","convertFieldCalendar","allow_time","allow_time_select","show_end_date","hide_end_date","Calendar","convertFieldCheckbox","Checkbox","convertFieldClockSet","define_limits","enable_limit","hour_visualization","clock_visualization","maximum","minimum","step_value","increment","convertFieldDevice","Device","convertFieldDropdown","options","map","e","value","is_default","Dropdown","use_values_from","use_values_from_variable","use_variable","convertFieldDropdownMultiple","convertFieldEmail","amount","Email","convertFieldFileUpload","maximum_files","max_files","path","use_mobile_camera","use_camera","convertFieldFilteredVariables","useValuesFromVariable","filter_amount","selection_type","filter_origin","convertFieldHidden","Hidden","convertFieldImageVideoSelect","allow_multiple","description","link","url","show_filter","show_filter_value","convertFieldIncrementalSteps","convertFieldNumber","decimals","show_thousand_separator","show_thousand","Number","convertFieldPassword","Password","convertFieldQrCode","convertFieldRadio","Radio","convertFieldValidation","fade_out","validation_message","always_show","keep_last_validation","show_markdown","Validation","convertFieldCaptureUser","convertField","fieldtype"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Migration\\convertFields.ts"],"sourcesContent":["import { generateWidgetItemId } from \"./common\";\r\nexport enum InputFormField {\r\n  \"Text\" = \"text\",\r\n  \"Address\" = \"address\",\r\n  \"Barcode\" = \"barcode\",\r\n  \"Calendar\" = \"calendar\",\r\n  \"Capture user\" = \"user\",\r\n  \"Checkbox\" = \"checkbox\",\r\n  \"Clock Set\" = \"clock-set\",\r\n  \"Device\" = \"device\",\r\n  \"Dropdown\" = \"dropdown\",\r\n  \"Dropdown Multiple\" = \"dropdown-multi\",\r\n  \"Email\" = \"email\",\r\n  \"File Upload\" = \"upload\",\r\n  \"Filtered variables\" = \"filtered\",\r\n  \"Hidden\" = \"hidden\",\r\n  \"Image / Video Select\" = \"image-select\",\r\n  \"Incremental Step\" = \"incremental-step\",\r\n  \"Number\" = \"number\",\r\n  \"Password\" = \"password\",\r\n  \"QR Code\" = \"qrcode\",\r\n  \"Radio\" = \"radio\",\r\n  \"Validation\" = \"validation\",\r\n}\r\n\r\nfunction convertDefaultValue(useCurrentValue: string): string {\r\n  let defaultValue: \"last\" | \"fixed\" = \"last\";\r\n  if (typeof useCurrentValue === \"string\" && useCurrentValue !== \"current_value\") {\r\n    defaultValue = \"fixed\";\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport function convertSubmitButton(oldDisplay: any, runAnalysis: string): Object {\r\n  return {\r\n    analysis: runAnalysis || \"\",\r\n    clear_form: false,\r\n    color: \"#337ab7\",\r\n    confirmation_cancel: null,\r\n    confirmation_confirm: null,\r\n    confirmation_message: oldDisplay?.form?.message_submit || \"\",\r\n    confirmation_title: null,\r\n    icon: null,\r\n    id: generateWidgetItemId(),\r\n    identifier: \"\",\r\n    run_analysis: !!runAnalysis,\r\n    send_data: !oldDisplay?.form?.bypass_bucket,\r\n    show_confirmation: !!oldDisplay?.form?.confirm_before_submit,\r\n    text: !oldDisplay?.form?.label_submit ? \"Send\" : oldDisplay?.form?.label_submit,\r\n    wait_for_validation: !!oldDisplay?.form?.wait_validation_unlock,\r\n  };\r\n}\r\n\r\nexport function convertFormField(field: any): any {\r\n  return {\r\n    data: {\r\n      bucket: field?.bucket,\r\n      origin: field?.origin,\r\n      variable: field?.variable,\r\n    },\r\n    id: field?.id || generateWidgetItemId(),\r\n  };\r\n}\r\n\r\nexport function convertVisualField(field: any): any {\r\n  return {\r\n    ...convertFormField(field),\r\n    icon: null,\r\n    label: field?.label,\r\n    required: !!field?.required,\r\n    show_new_line: field?.new_line !== undefined ? !!field?.new_line : true,\r\n    visibility_conditions: field?.visibility_conditions || [],\r\n    ...(field?.placeholder ? { placeholder: field?.placeholder } : {}),\r\n    ...(field?.unit ? { unit: field?.unit } : {}),\r\n    ...(field?.value_type ? { value_type: field?.value_type } : {}),\r\n  };\r\n}\r\n\r\n/**\r\n * Convert text fields to new widget format\r\n */\r\nexport function convertFieldText(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField.Text,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert address fields to new widget format\r\n */\r\nexport function convertFieldAddress(field: any, showMap?: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    show_map: !!showMap,\r\n    type: InputFormField.Address,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert barcode fields to new widget format\r\n */\r\nexport function convertFieldBarCode(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField.Barcode,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert calendar fields to new widget format\r\n */\r\nexport function convertFieldCalendar(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    allow_time: !!field?.allow_time_select,\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    show_end_date: field?.hide_end_date ?? true,\r\n    type: InputFormField.Calendar,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert calendar fields to new widget format\r\n */\r\nexport function convertFieldCheckbox(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField.Checkbox,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert clock set fields to new widget format\r\n */\r\nexport function convertFieldClockSet(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    define_limits: !!field?.enable_limit,\r\n    fixed_value: field?.default,\r\n    hour_visualization: field?.clock_visualization,\r\n    maximum: field?.maximum,\r\n    minimum: field?.minimum,\r\n    step_value: field?.increment,\r\n    type: InputFormField[\"Clock Set\"],\r\n  };\r\n}\r\n\r\n/**\r\n * Convert device fields to new widget format\r\n */\r\nexport function convertFieldDevice(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField.Device,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert dropdown field to new widget format\r\n */\r\nexport function convertFieldDropdown(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    options: (field?.options || []).map((e: any) => ({\r\n      label: e?.label,\r\n      value: e?.value,\r\n      ...(e?.unit ? { unit: e?.unit } : {}),\r\n      ...(e?.is_default ? { default: e?.is_default } : {}),\r\n    })),\r\n    type: InputFormField.Dropdown,\r\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\r\n    use_values_from_variable: {\r\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\r\n      variable: field?.use_variable?.variable,\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Convert dropdown multiples field to new widget format\r\n */\r\nexport function convertFieldDropdownMultiple(field: any) {\r\n  return {\r\n    ...convertFieldDropdown(field),\r\n    type: InputFormField[\"Dropdown Multiple\"],\r\n  };\r\n}\r\n\r\n/**\r\n * Convert email field to new widget format\r\n */\r\nexport function convertFieldEmail(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    amount: \"single\",\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField.Email,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert file upload field to new widget format\r\n */\r\nexport function convertFieldFileUpload(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    maximum_files: field?.max_files || 1,\r\n    path: field?.path || \"\",\r\n    type: InputFormField[\"File Upload\"],\r\n    use_mobile_camera: !!field?.use_camera,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert filtered variables field to new widget format\r\n */\r\nexport function convertFieldFilteredVariables(field: any) {\r\n  const useValuesFromVariable = {\r\n    origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\r\n    variable: field?.use_variable?.variable,\r\n  };\r\n\r\n  return {\r\n    ...convertVisualField(field),\r\n    filter_amount: field?.selection_type || \"single\",\r\n    filter_origin: field?.filter_origin,\r\n    type: InputFormField[\"Filtered variables\"],\r\n    use_values_from_variable: { ...useValuesFromVariable },\r\n  };\r\n}\r\n\r\n/**\r\n * Convert hidden field to new widget format\r\n */\r\nexport function convertFieldHidden(field: any) {\r\n  return {\r\n    ...convertFormField(field),\r\n    fixed_value: field?.value,\r\n    type: InputFormField.Hidden,\r\n    unit: field?.unit || \"\",\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Image / Video select field to new widget format\r\n */\r\nexport function convertFieldImageVideoSelect(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    allow_multiple: !!field?.allow_multiple,\r\n    options: (field?.options || []).map((e: any) => ({\r\n      description: e?.description || \"\",\r\n      label: e?.label,\r\n      link: e?.url || \"\",\r\n      value: e?.value,\r\n      ...(e?.unit ? { unit: e?.unit } : {}),\r\n      ...(e?.is_default ? { default: e?.is_default } : {}),\r\n    })),\r\n    show_filter: !!field?.show_filter_value,\r\n    type: InputFormField[\"Image / Video Select\"],\r\n    use_values_from: field?.use_values_from === \"variable\" ? \"variable\" : \"options\",\r\n    use_values_from_variable: {\r\n      origin: field?.use_variable?.origin?.id || field?.use_variable?.origin,\r\n      variable: field?.variable,\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Incremental steps field for new widget format\r\n */\r\nexport function convertFieldIncrementalSteps(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    maximum: field?.maximum || 100,\r\n    minimum: field?.minimum || 0,\r\n    step_value: field?.increment || 1,\r\n    type: InputFormField[\"Incremental Step\"],\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Number field to new widget format\r\n */\r\nexport function convertFieldNumber(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    decimals: field?.decimals === \"-1\" ? \"auto\" : field?.decimals,\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    show_thousand_separator: !!field?.show_thousand,\r\n    type: InputFormField.Number,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Password field to new widget format\r\n */\r\nexport function convertFieldPassword(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    fixed_value: field?.use_current_value !== \"current_value\" ? field?.default : \"\",\r\n    type: InputFormField.Password,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert QR Code field to new widget format\r\n */\r\nexport function convertFieldQrCode(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    default_value: convertDefaultValue(field?.use_current_value),\r\n    fixed_value: field?.default,\r\n    type: InputFormField[\"QR Code\"],\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Radio field to new widget format\r\n */\r\nexport function convertFieldRadio(field: any) {\r\n  return {\r\n    ...convertVisualField(field),\r\n    options: (field?.options || []).map((e: any) => ({\r\n      label: e?.label,\r\n      value: e?.value,\r\n      ...(e?.unit ? { unit: e?.unit } : {}),\r\n      ...(e?.is_default ? { default: e?.is_default } : {}),\r\n    })),\r\n    type: InputFormField.Radio,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Validation field to new widget format\r\n */\r\nexport function convertFieldValidation(field: any) {\r\n  return {\r\n    ...convertFormField(field),\r\n    fade_out: !field?.validation_message?.always_show,\r\n    keep_last_validation: false,\r\n    show_markdown: false,\r\n    type: InputFormField.Validation,\r\n  };\r\n}\r\n\r\n/**\r\n * Convert Capture user field to new widget format\r\n */\r\nexport function convertFieldCaptureUser(field: any) {\r\n  return {\r\n    ...convertFormField(field),\r\n    field: field?.field || \"\",\r\n    type: InputFormField[\"Capture user\"],\r\n  };\r\n}\r\n\r\n/**\r\n * Convert fields\r\n */\r\nexport function convertField(field: any, showMap?: any) {\r\n  const { fieldtype } = field;\r\n  switch (fieldtype) {\r\n    case \"text\":\r\n      return convertFieldText(field);\r\n    case \"address\":\r\n      return convertFieldAddress(field, showMap);\r\n    case \"barcode\":\r\n      return convertFieldBarCode(field);\r\n    case \"calendar\":\r\n      return convertFieldCalendar(field);\r\n    case \"checkbox\":\r\n      return convertFieldCheckbox(field);\r\n    case \"clock-set\":\r\n      return convertFieldClockSet(field);\r\n    case \"device\":\r\n      return convertFieldDevice(field);\r\n    case \"dropdown\":\r\n      return convertFieldDropdown(field);\r\n    case \"dropdown-multi\":\r\n      return convertFieldDropdownMultiple(field);\r\n    case \"email\":\r\n      return convertFieldEmail(field);\r\n    case \"upload\":\r\n      return convertFieldFileUpload(field);\r\n    case \"filtered\":\r\n      return convertFieldFilteredVariables(field);\r\n    case \"hidden\":\r\n      return convertFieldHidden(field);\r\n    case \"image-select\":\r\n      return convertFieldImageVideoSelect(field);\r\n    case \"incremental-step\":\r\n      return convertFieldIncrementalSteps(field);\r\n    case \"number\":\r\n      return convertFieldNumber(field);\r\n    case \"password\":\r\n      return convertFieldPassword(field);\r\n    case \"qrcode\":\r\n      return convertFieldQrCode(field);\r\n    case \"radio\":\r\n      return convertFieldRadio(field);\r\n    case \"validation\":\r\n      return convertFieldValidation(field);\r\n    case \"user\":\r\n      return convertFieldCaptureUser(field);\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}