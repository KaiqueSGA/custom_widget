{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./device_variables.css';import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var _require=require('../../classes/device/device.js'),tago_device=_require.tago_device;var _require2=require('../../classes/location/location.js'),location_apis=_require2.location_apis;function Device_variables(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),device_variables=_useState2[0],set_device_variables=_useState2[1];var device_methods=new tago_device();var location_funcs=new location_apis();useEffect(function(){window.TagoIO.onStart(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(widget){var device_id,request;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.widget=widget;device_id=widget.display.variables[0].origin.id;_context.next=4;return device_methods.get_device_variables(device_id);case 4:request=_context.sent;console.log(request.filter(function(x){return x.metadata.media===\"STX\";}).length);set_device_variables(request.filter(function(x){return x.metadata.media===\"STX\";}));case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());window.TagoIO.ready();},[]);function add_0_to_left(value){if(String(value).length===1){return\"0\"+value;}else{return value;}}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"div-mother\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"div-filho\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-div-mother\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"See all variables that the selected device sent!\"}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"data_variables\",children:/*#__PURE__*/_jsxs(\"table\",{border:\"1\",className:\"variable_tables\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"link\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Date and Time\"}),/*#__PURE__*/_jsx(\"td\",{children:\"Coordinates\"})]}),device_variables.map(function(data){var hex_2_bin=function hex_2_bin(hexadecimal_content){return(\"00000000\"+parseInt(hexadecimal_content,16).toString(2)).substr(-8);};var catch_payload=function catch_payload(stu_message){//This function is catching the hexadecimal message sent by device\nvar firstTag=stu_message.indexOf(\">\",stu_message.indexOf(\"<payload\"));var secondTag=stu_message.indexOf(\"</payload>\",firstTag);return stu_message.substring(firstTag+3,secondTag);};var decode_lat=function decode_lat(file_content,cardinal_position){var hexadecimal_lat=file_content.substring(0,6);var integer_lat=String(parseInt(hexadecimal_lat,16));//estou convertendo para inteiro um valor hexa, por isso eu coloco o 16 como parâmetro\nvar final_lat=integer_lat/10000;var ready_coordinate=cardinal_position===\"south\"?\"-\"+String(final_lat.toFixed(8)):String(final_lat.toFixed(8));return ready_coordinate;};var decode_lng=function decode_lng(file_content,cardinal_position){var hexadecimal_lng=file_content.substring(6,12);var integer_lng=parseInt(hexadecimal_lng,16);var final_lng=integer_lng/10000;var ready_coordinate=cardinal_position===\"weast\"?\"-\"+String(final_lng.toFixed(8)):String(final_lng.toFixed(8));return ready_coordinate;};var decode_binary_values=function decode_binary_values(payload){var values_object=new Object();var binary=hex_2_bin(payload.substring(12,14));var value_of_each_byte={0:function _(byte){byte===\"0\"?values_object.cardinal_position_s_n=\"south\":values_object.cardinal_position_s_n=\"north\";},1:function _(byte){byte===\"0\"?values_object.cardinal_position_w_e=\"weast\":values_object.cardinal_position_w_e=\"east\";},2:function _(byte){byte===\"0\"?values_object.origin=\"GPS\":values_object.origin=\"GPS-DR\";},3:function _(byte){byte===\"0\"?values_object.mode=2:values_object.mode=3;}};for(var i=0;i<=3;i++){value_of_each_byte[String(i)](binary[i]);}//i --> binary position / binary[i] --> binary value\nreturn values_object;};var payload=catch_payload(data.metadata.xml);var bin_values_decoded=decode_binary_values(payload);var latitude=Number(decode_lat(payload,bin_values_decoded.cardinal_position_s_n));var longitude=Number(decode_lng(payload,bin_values_decoded.cardinal_position_w_e));var link=\"https://www.google.com/maps/search/?api=1&query=\".concat(latitude,\",\").concat(longitude);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"data_variable\",children:data.metadata.origin}),/*#__PURE__*/_jsx(\"td\",{children:String(data.time)}),/*#__PURE__*/_jsx(\"td\",{className:\"b\",children:/*#__PURE__*/_jsx(\"a\",{href:link,target:\"_blank\",children:\" Google link\"})}),/*#__PURE__*/_jsx(\"td\",{className:data.id}),/*#__PURE__*/_jsx(\"td\",{className:data.id})]});})]})})]})})});}export{Device_variables};","map":{"version":3,"names":["React","useEffect","useState","require","tago_device","location_apis","Device_variables","device_variables","set_device_variables","device_methods","location_funcs","window","TagoIO","onStart","widget","device_id","display","variables","origin","id","get_device_variables","request","console","log","filter","x","metadata","media","length","ready","add_0_to_left","value","String","map","data","hex_2_bin","hexadecimal_content","parseInt","toString","substr","catch_payload","stu_message","firstTag","indexOf","secondTag","substring","decode_lat","file_content","cardinal_position","hexadecimal_lat","integer_lat","final_lat","ready_coordinate","toFixed","decode_lng","hexadecimal_lng","integer_lng","final_lng","decode_binary_values","payload","values_object","Object","binary","value_of_each_byte","byte","cardinal_position_s_n","cardinal_position_w_e","mode","i","xml","bin_values_decoded","latitude","Number","longitude","link","time"],"sources":["C:/Users/kaique/Documents/SGA/widget/project/src/widgets/device_variables/device_variables.js"],"sourcesContent":["import './device_variables.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst { tago_device } = require('../../classes/device/device.js');\r\nconst { location_apis } = require('../../classes/location/location.js')\r\n\r\n\r\nfunction Device_variables(){\r\n  const [device_variables, set_device_variables] = useState([]);\r\n\r\n  const device_methods = new tago_device();\r\n  const location_funcs = new location_apis();\r\n\r\n\r\n   useEffect(() => {\r\n    window.TagoIO.onStart( async(widget) => {\r\n      window.widget = widget;\r\n\r\n      let device_id = widget.display.variables[0].origin.id;\r\n      let request = await device_methods.get_device_variables(device_id); \r\n       console.log(request.filter((x) => x.metadata.media === \"STX\").length)\r\n      set_device_variables(request.filter((x) => x.metadata.media === \"STX\"));\r\n  })\r\n  window.TagoIO.ready(); \r\n  },[]) \r\n\r\n\r\n\r\n\r\n  \r\n\r\n   function add_0_to_left(value){\r\n\r\n      if( String(value).length === 1 ){\r\n        return \"0\" + value;\r\n      }else{\r\n        return value;\r\n      }\r\n\r\n   }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n        <div className='div-mother'>\r\n        <div className='div-filho'>\r\n\r\n      <div className='text-div-mother'>\r\n         <h1>See all variables that the selected device sent!</h1>\r\n         <br/>\r\n        </div>\r\n       \r\n                <div className='data_variables'>\r\n\r\n                        <table border=\"1\" className='variable_tables'>\r\n                            <tr>\r\n                                <td>link</td>\r\n                                <td>Date and Time</td>\r\n                                <td>Coordinates</td>\r\n                                  \r\n                            </tr>\r\n                            {device_variables.map(data => { \r\n\r\n                               \r\n\r\n                                  const hex_2_bin = (hexadecimal_content) => {\r\n                                    return (\"00000000\" + parseInt(hexadecimal_content, 16).toString(2)).substr(-8);\r\n                                  };\r\n\r\n                                 const catch_payload = (stu_message) => {\r\n                                    //This function is catching the hexadecimal message sent by device\r\n                                    let firstTag = stu_message.indexOf(\">\", stu_message.indexOf(\"<payload\"));\r\n                                    let secondTag = stu_message.indexOf(\"</payload>\", firstTag);\r\n                                \r\n                                    return stu_message.substring(firstTag + 3, secondTag);\r\n                                  };\r\n                                \r\n                                  \r\n                                  const decode_lat = (file_content, cardinal_position) => {\r\n                                    let hexadecimal_lat = file_content.substring(0, 6);\r\n                                    let integer_lat = String(parseInt(hexadecimal_lat, 16)); //estou convertendo para inteiro um valor hexa, por isso eu coloco o 16 como parâmetro\r\n                                     \r\n                                    let final_lat = integer_lat / 10_000; \r\n                                    let ready_coordinate = cardinal_position === \"south\"\r\n                                                                                      ? \"-\" + String(final_lat.toFixed(8))\r\n                                                                                      : String(final_lat.toFixed(8));\r\n                                \r\n                                    return ready_coordinate; \r\n                                  };\r\n                                \r\n \r\n                                  const decode_lng = (file_content, cardinal_position) => {\r\n                                    let hexadecimal_lng = file_content.substring(6, 12);\r\n                                    let integer_lng = parseInt(hexadecimal_lng, 16);\r\n                                \r\n                                    let final_lng = integer_lng / 10_000; \r\n                                    let ready_coordinate = cardinal_position === \"weast\"\r\n                                                                                     ? \"-\" + String(final_lng.toFixed(8))\r\n                                                                                     : String(final_lng.toFixed(8));\r\n                                \r\n                                    return ready_coordinate; \r\n                                  };\r\n\r\n\r\n                                  const decode_binary_values = (payload) => {\r\n                                    let values_object = new Object();\r\n                                    let binary = hex_2_bin(payload.substring(12, 14));\r\n\r\n                                    let value_of_each_byte = {\r\n                                      0: (byte) => { byte === \"0\"   ?values_object.cardinal_position_s_n = \"south\"    :values_object.cardinal_position_s_n = \"north\"; },\r\n                                      1: (byte) => { byte === \"0\"   ?values_object.cardinal_position_w_e = \"weast\"    :values_object.cardinal_position_w_e = \"east\";},\r\n                                      2: (byte) => { byte === \"0\"   ?values_object.origin = \"GPS\"                     :values_object.origin = \"GPS-DR\";},\r\n                                      3: (byte) => { byte === \"0\"   ?values_object.mode = 2                           :values_object.mode = 3; },\r\n                                    };\r\n\r\n                                    for (let i = 0; i <= 3; i++) { value_of_each_byte[String(i)](binary[i]); }//i --> binary position / binary[i] --> binary value\r\n\r\n                                    return values_object;\r\n                                  }\r\n\r\n\r\n                                  let payload = catch_payload(data.metadata.xml);\r\n                                  let bin_values_decoded = decode_binary_values(payload);\r\n\r\n                                  let latitude = Number(decode_lat(payload, bin_values_decoded.cardinal_position_s_n));\r\n                                  let longitude = Number(decode_lng(payload, bin_values_decoded.cardinal_position_w_e));\r\n\r\n                                  var link = `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\r\n                                \r\n                            \r\n                              return( \r\n                                <tr>\r\n                                    <td className='data_variable'>{data.metadata.origin}</td>\r\n\r\n                                     <td>{String(data.time)}</td>  \r\n\r\n                                    <td className='b'><a href={link} target=\"_blank\"> Google link</a></td>\r\n\r\n                                     <td className={data.id}></td>{/* Date and time */}\r\n                                     <td className={data.id}></td>{/* Coordinates */}\r\n\r\n                                </tr>\r\n                              )\r\n\r\n                               \r\n  \r\n\r\n\r\n                            })}\r\n\r\n                        </table>\r\n                        \r\n                            \r\n                    \r\n                </div>\r\n\r\n\r\n\r\n\r\n                </div> \r\n\r\n\r\n           \r\n\r\n            </div>         \r\n         \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport { Device_variables };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}