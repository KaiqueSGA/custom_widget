{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Go through variables used in Multiple Dropdown variables and remove a specified value.\n * Then updates the variables.\n * @param device TagoIO Device instanced class.\n * @param variables variables inside the device to be verified.\n * @param value value to be removed.\n */\nasync function updateMultipleDropdown(device, variables, values) {\n  const fixed_values = Array.isArray(values) ? values : [values];\n  const data_list = await device.getData({\n    variables,\n    qty: 999\n  });\n  data_list.forEach(item => {\n    let sentValues = item.metadata?.sentValues;\n    let new_data_value = item.value.split(\";\");\n    if (sentValues.find(x => fixed_values.includes(x.value))) {\n      sentValues = sentValues.filter(x => {\n        if (fixed_values.includes(x.value)) {\n          new_data_value = new_data_value.filter(y => !fixed_values.includes(y) && !fixed_values.includes(x.label));\n        }\n        return !fixed_values.includes(x.value);\n      });\n      const new_item = {\n        ...item,\n        value: new_data_value.join(\";\"),\n        metadata: {\n          ...item.metadata,\n          sentValues\n        }\n      };\n      device.deleteData({\n        ids: item.id\n      }).catch(e => console.error(e));\n      device.sendData(new_item).catch(e => console.error(e));\n    }\n  });\n}\nexports.default = updateMultipleDropdown;","map":{"version":3,"mappings":";;;;;AAEA;;;;;;;AAOA,eAAeA,sBAAsB,CAACC,MAAc,EAAEC,SAA4B,EAAEC,MAAyB;EAC3G,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;EAE9D,MAAMI,SAAS,GAAG,MAAMN,MAAM,CAACO,OAAO,CAAC;IAAEN,SAAS;IAAEO,GAAG,EAAE;EAAG,CAAE,CAAC;EAE/DF,SAAS,CAACG,OAAO,CAAEC,IAAI,IAAI;IACzB,IAAIC,UAAU,GAAGD,IAAI,CAACE,QAAQ,EAAED,UAAgD;IAChF,IAAIE,cAAc,GAAIH,IAAI,CAACI,KAAgB,CAACC,KAAK,CAAC,GAAG,CAAC;IAEtD,IAAIJ,UAAU,CAACK,IAAI,CAAEC,CAAC,IAAKd,YAAY,CAACe,QAAQ,CAACD,CAAC,CAACH,KAAK,CAAC,CAAC,EAAE;MAC1DH,UAAU,GAAGA,UAAU,CAACQ,MAAM,CAAEF,CAAC,IAAI;QACnC,IAAId,YAAY,CAACe,QAAQ,CAACD,CAAC,CAACH,KAAK,CAAC,EAAE;UAClCD,cAAc,GAAGA,cAAc,CAACM,MAAM,CAAEC,CAAC,IAAK,CAACjB,YAAY,CAACe,QAAQ,CAACE,CAAC,CAAC,IAAI,CAACjB,YAAY,CAACe,QAAQ,CAACD,CAAC,CAACI,KAAK,CAAC,CAAC;;QAE7G,OAAO,CAAClB,YAAY,CAACe,QAAQ,CAACD,CAAC,CAACH,KAAK,CAAC;MACxC,CAAC,CAAC;MAEF,MAAMQ,QAAQ,GAAG;QACf,GAAGZ,IAAI;QACPI,KAAK,EAAED,cAAc,CAACU,IAAI,CAAC,GAAG,CAAC;QAC/BX,QAAQ,EAAE;UAAE,GAAGF,IAAI,CAACE,QAAQ;UAAED;QAAU;OAClC;MAERX,MAAM,CAACwB,UAAU,CAAC;QAAEC,GAAG,EAAEf,IAAI,CAACgB;MAAE,CAAE,CAAC,CAACC,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;MAClE5B,MAAM,CAAC+B,QAAQ,CAACT,QAAQ,CAAC,CAACK,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;;EAE5D,CAAC,CAAC;AACJ;AAEAI,kBAAejC,sBAAsB","names":["updateMultipleDropdown","device","variables","values","fixed_values","Array","isArray","data_list","getData","qty","forEach","item","sentValues","metadata","new_data_value","value","split","find","x","includes","filter","y","label","new_item","join","deleteData","ids","id","catch","e","console","error","sendData","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Utils\\updateMultipleDropdown.ts"],"sourcesContent":["import Device from \"../Device/Device\";\n\n/**\n * Go through variables used in Multiple Dropdown variables and remove a specified value.\n * Then updates the variables.\n * @param device TagoIO Device instanced class.\n * @param variables variables inside the device to be verified.\n * @param value value to be removed.\n */\nasync function updateMultipleDropdown(device: Device, variables: string | string[], values: string | string[]) {\n  const fixed_values = Array.isArray(values) ? values : [values];\n\n  const data_list = await device.getData({ variables, qty: 999 });\n\n  data_list.forEach((item) => {\n    let sentValues = item.metadata?.sentValues as { value: string; label: string }[];\n    let new_data_value = (item.value as string).split(\";\");\n\n    if (sentValues.find((x) => fixed_values.includes(x.value))) {\n      sentValues = sentValues.filter((x) => {\n        if (fixed_values.includes(x.value)) {\n          new_data_value = new_data_value.filter((y) => !fixed_values.includes(y) && !fixed_values.includes(x.label));\n        }\n        return !fixed_values.includes(x.value);\n      });\n\n      const new_item = {\n        ...item,\n        value: new_data_value.join(\";\"),\n        metadata: { ...item.metadata, sentValues },\n      } as any;\n\n      device.deleteData({ ids: item.id }).catch((e) => console.error(e));\n      device.sendData(new_item).catch((e) => console.error(e));\n    }\n  });\n}\n\nexport default updateMultipleDropdown;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}