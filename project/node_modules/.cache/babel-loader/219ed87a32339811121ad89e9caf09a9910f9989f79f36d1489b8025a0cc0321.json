{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/yudji/OneDrive/Documentos/SGA/WIDGETS/custom_widgets/project/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TagoIOModule_1 = __importDefault(require(\"../../common/TagoIOModule\"));\nvar dateParser_1 = __importDefault(require(\"../Utils/dateParser\"));\nvar Buckets = /*#__PURE__*/function (_TagoIOModule_1$defau) {\n  _inherits(Buckets, _TagoIOModule_1$defau);\n  var _super = _createSuper(Buckets);\n  function Buckets() {\n    _classCallCheck(this, Buckets);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Buckets, [{\n    key: \"list\",\n    value:\n    /**\n     * Retrieves a list with all buckets from account\n     * @default\n     * ```json\n     * queryObj: {\n     *   page: 1,\n     *   fields: [\"id\", \"name\"],\n     *   filter: {},\n     *   amount: 20,\n     *   orderBy: \"name,asc\",\n     * }\n     * ```\n     * @param queryObj Search query params\n     */\n    function () {\n      var _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(queryObj) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.doRequest({\n                  path: \"/bucket\",\n                  method: \"GET\",\n                  params: {\n                    page: (queryObj === null || queryObj === void 0 ? void 0 : queryObj.page) || 1,\n                    fields: (queryObj === null || queryObj === void 0 ? void 0 : queryObj.fields) || [\"id\", \"name\"],\n                    filter: (queryObj === null || queryObj === void 0 ? void 0 : queryObj.filter) || {},\n                    amount: (queryObj === null || queryObj === void 0 ? void 0 : queryObj.amount) || 20,\n                    orderBy: queryObj !== null && queryObj !== void 0 && queryObj.orderBy ? \"\".concat(queryObj.orderBy[0], \",\").concat(queryObj.orderBy[1]) : \"name,asc\"\n                  }\n                });\n              case 2:\n                result = _context.sent;\n                result = result.map(function (data) {\n                  return (0, dateParser_1.default)(data, [\"created_at\", \"updated_at\"]);\n                });\n                return _context.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function list(_x) {\n        return _list.apply(this, arguments);\n      }\n      return list;\n    }()\n    /**\n     * Generates and retrieves a new bucket for the account\n     * @param bucketObj Object with data to create new bucket\n     */\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(bucketObj) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.doRequest({\n                  path: \"/bucket\",\n                  method: \"POST\",\n                  body: bucketObj\n                });\n              case 2:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function create(_x2) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }()\n    /**\n     * Modifies any property of the bucket.\n     * @param bucketID Bucket ID\n     * @param bucketObj Bucket Object data to be replaced\n     */\n  }, {\n    key: \"edit\",\n    value: function () {\n      var _edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(bucketID, bucketObj) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID),\n                  method: \"PUT\",\n                  body: bucketObj\n                });\n              case 2:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function edit(_x3, _x4) {\n        return _edit.apply(this, arguments);\n      }\n      return edit;\n    }()\n    /**\n     * Deletes a bucket from the account\n     * @param bucketID Bucket ID\n     */\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(bucketID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID),\n                  method: \"DELETE\"\n                });\n              case 2:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function _delete(_x5) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n    /**\n     * Gets information about the bucket\n     * @param bucketID Bucket ID\n     */\n  }, {\n    key: \"info\",\n    value: function () {\n      var _info = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(bucketID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context5.sent;\n                result = (0, dateParser_1.default)(result, [\"created_at\", \"updated_at\"]);\n                return _context5.abrupt(\"return\", result);\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function info(_x6) {\n        return _info.apply(this, arguments);\n      }\n      return info;\n    }()\n    /**\n     * Get Amount of data on the Bucket\n     * @param bucketID Bucket ID\n     */\n  }, {\n    key: \"amount\",\n    value: function () {\n      var _amount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(bucketID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID, \"/data_amount\"),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function amount(_x7) {\n        return _amount.apply(this, arguments);\n      }\n      return amount;\n    }()\n    /**\n     * List variables inside the bucket\n     * @default\n     * ```json\n     * optionsObj: {\n     *   showAmount: false\n     *   showDeleted: false\n     *   resolveOriginName: false\n     * }\n     * ```\n     * @param bucketID Bucket ID\n     * @param optionsObj Request options\n     */\n  }, {\n    key: \"listVariables\",\n    value: function () {\n      var _listVariables = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(bucketID, optionsObj) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID, \"/variable\"),\n                  method: \"GET\",\n                  params: {\n                    amount: (optionsObj === null || optionsObj === void 0 ? void 0 : optionsObj.showAmount) || false,\n                    deleted: (optionsObj === null || optionsObj === void 0 ? void 0 : optionsObj.showDeleted) || false,\n                    resolveOriginName: (optionsObj === null || optionsObj === void 0 ? void 0 : optionsObj.resolveOriginName) || false\n                  }\n                });\n              case 2:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function listVariables(_x8, _x9) {\n        return _listVariables.apply(this, arguments);\n      }\n      return listVariables;\n    }()\n    /**\n     * Delete a bucket variable\n     * @param bucketID Bucket ID\n     * @param deleteParams Variable Details\n     */\n  }, {\n    key: \"deleteVariable\",\n    value: function () {\n      var _deleteVariable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(bucketID, deleteParams) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID, \"/variable\"),\n                  method: \"DELETE\",\n                  body: deleteParams || {}\n                });\n              case 2:\n                result = _context8.sent;\n                return _context8.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function deleteVariable(_x10, _x11) {\n        return _deleteVariable.apply(this, arguments);\n      }\n      return deleteVariable;\n    }()\n    /**\n     * Get all device associated with bucket\n     * @param bucketID Bucket ID\n     */\n  }, {\n    key: \"getDevicesAssociated\",\n    value: function () {\n      var _getDevicesAssociated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(bucketID) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.doRequest({\n                  path: \"/bucket/\".concat(bucketID, \"/device\"),\n                  method: \"GET\"\n                });\n              case 2:\n                result = _context9.sent;\n                return _context9.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function getDevicesAssociated(_x12) {\n        return _getDevicesAssociated.apply(this, arguments);\n      }\n      return getDevicesAssociated;\n    }()\n    /**\n     * Export Data from Bucket\n     * @param buckets Array of JSON with get details\n     * @param output Type of output\n     * @param optionsObj Options of request\n     */\n  }, {\n    key: \"exportData\",\n    value: function () {\n      var _exportData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(buckets, output, optionsObj) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.doRequest({\n                  path: \"/data/export?output=\".concat(output),\n                  method: \"POST\",\n                  body: _objectSpread({\n                    buckets: buckets\n                  }, optionsObj)\n                });\n              case 2:\n                result = _context10.sent;\n                return _context10.abrupt(\"return\", result);\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function exportData(_x13, _x14, _x15) {\n        return _exportData.apply(this, arguments);\n      }\n      return exportData;\n    }()\n  }]);\n  return Buckets;\n}(TagoIOModule_1.default);\nexports.default = Buckets;","map":{"version":3,"mappings":"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","names":["Buckets","queryObj","doRequest","path","method","params","page","fields","filter","amount","orderBy","result","map","data","bucketObj","body","bucketID","optionsObj","showAmount","deleted","showDeleted","resolveOriginName","deleteParams","buckets","output","TagoIOModule_1","exports"],"sources":["C:\\Users\\yudji\\OneDrive\\Documentos\\SGA\\WIDGETS\\custom_widgets\\project\\node_modules\\@tago-io\\sdk\\src\\modules\\Account\\Buckets.ts"],"sourcesContent":["import { ExportOption, GenericID } from \"../../common/common.types\";\nimport TagoIOModule, { GenericModuleParams } from \"../../common/TagoIOModule\";\nimport dateParser from \"../Utils/dateParser\";\nimport {\n  BucketCreateInfo,\n  BucketDeviceInfo,\n  BucketInfo,\n  BucketQuery,\n  ExportBucket,\n  ExportBucketOption,\n  ListVariablesOptions,\n  VariablesInfo,\n} from \"./buckets.types\";\n\nclass Buckets extends TagoIOModule<GenericModuleParams> {\n  /**\n   * Retrieves a list with all buckets from account\n   * @default\n   * ```json\n   * queryObj: {\n   *   page: 1,\n   *   fields: [\"id\", \"name\"],\n   *   filter: {},\n   *   amount: 20,\n   *   orderBy: \"name,asc\",\n   * }\n   * ```\n   * @param queryObj Search query params\n   */\n  public async list(queryObj?: BucketQuery): Promise<BucketInfo[]> {\n    let result = await this.doRequest<BucketInfo[]>({\n      path: \"/bucket\",\n      method: \"GET\",\n      params: {\n        page: queryObj?.page || 1,\n        fields: queryObj?.fields || [\"id\", \"name\"],\n        filter: queryObj?.filter || {},\n        amount: queryObj?.amount || 20,\n        orderBy: queryObj?.orderBy ? `${queryObj.orderBy[0]},${queryObj.orderBy[1]}` : \"name,asc\",\n      },\n    });\n\n    result = result.map((data) => dateParser(data, [\"created_at\", \"updated_at\"]));\n\n    return result;\n  }\n\n  /**\n   * Generates and retrieves a new bucket for the account\n   * @param bucketObj Object with data to create new bucket\n   */\n  public async create(bucketObj: BucketCreateInfo): Promise<{ bucket: string }> {\n    const result = await this.doRequest<{ bucket: string }>({\n      path: \"/bucket\",\n      method: \"POST\",\n      body: bucketObj,\n    });\n\n    return result;\n  }\n\n  /**\n   * Modifies any property of the bucket.\n   * @param bucketID Bucket ID\n   * @param bucketObj Bucket Object data to be replaced\n   */\n  public async edit(bucketID: GenericID, bucketObj: Partial<BucketCreateInfo>): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/bucket/${bucketID}`,\n      method: \"PUT\",\n      body: bucketObj,\n    });\n\n    return result;\n  }\n\n  /**\n   * Deletes a bucket from the account\n   * @param bucketID Bucket ID\n   */\n  public async delete(bucketID: GenericID): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/bucket/${bucketID}`,\n      method: \"DELETE\",\n    });\n\n    return result;\n  }\n\n  /**\n   * Gets information about the bucket\n   * @param bucketID Bucket ID\n   */\n  public async info(bucketID: GenericID): Promise<BucketInfo> {\n    let result = await this.doRequest<BucketInfo>({\n      path: `/bucket/${bucketID}`,\n      method: \"GET\",\n    });\n    result = dateParser(result, [\"created_at\", \"updated_at\"]);\n\n    return result;\n  }\n\n  /**\n   * Get Amount of data on the Bucket\n   * @param bucketID Bucket ID\n   */\n  public async amount(bucketID: GenericID): Promise<number> {\n    const result = await this.doRequest<number>({\n      path: `/bucket/${bucketID}/data_amount`,\n      method: \"GET\",\n    });\n\n    return result;\n  }\n\n  /**\n   * List variables inside the bucket\n   * @default\n   * ```json\n   * optionsObj: {\n   *   showAmount: false\n   *   showDeleted: false\n   *   resolveOriginName: false\n   * }\n   * ```\n   * @param bucketID Bucket ID\n   * @param optionsObj Request options\n   */\n  public async listVariables(bucketID: GenericID, optionsObj?: ListVariablesOptions): Promise<VariablesInfo[]> {\n    const result = await this.doRequest<VariablesInfo[]>({\n      path: `/bucket/${bucketID}/variable`,\n      method: \"GET\",\n      params: {\n        amount: optionsObj?.showAmount || false,\n        deleted: optionsObj?.showDeleted || false,\n        resolveOriginName: optionsObj?.resolveOriginName || false,\n      },\n    });\n\n    return result;\n  }\n\n  /**\n   * Delete a bucket variable\n   * @param bucketID Bucket ID\n   * @param deleteParams Variable Details\n   */\n  public async deleteVariable(\n    bucketID: GenericID,\n    deleteParams: { variable: string; origin: string }\n  ): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/bucket/${bucketID}/variable`,\n      method: \"DELETE\",\n      body: deleteParams || {},\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all device associated with bucket\n   * @param bucketID Bucket ID\n   */\n  public async getDevicesAssociated(bucketID: GenericID): Promise<BucketDeviceInfo[]> {\n    const result = await this.doRequest<BucketDeviceInfo[]>({\n      path: `/bucket/${bucketID}/device`,\n      method: \"GET\",\n    });\n\n    return result;\n  }\n\n  /**\n   * Export Data from Bucket\n   * @param buckets Array of JSON with get details\n   * @param output Type of output\n   * @param optionsObj Options of request\n   */\n  public async exportData(\n    buckets: ExportBucket,\n    output: ExportOption,\n    optionsObj?: ExportBucketOption\n  ): Promise<string> {\n    const result = await this.doRequest<string>({\n      path: `/data/export?output=${output}`,\n      method: \"POST\",\n      body: {\n        buckets,\n        ...optionsObj,\n      },\n    });\n\n    return result;\n  }\n}\n\nexport default Buckets;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}