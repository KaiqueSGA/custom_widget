{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _objectSpread = require(\"C:/Users/kaique/Documents/SGA/widget/project/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar qs_1 = __importDefault(require(\"qs\"));\nvar apiRequest_1 = __importDefault(require(\"../infrastructure/apiRequest\"));\nvar regions_1 = __importDefault(require(\"../regions\"));\n/**\r\n * Create a Object for Axios\r\n * @internal\r\n * @param uri URI\r\n * @param requestObj doRequestParams\r\n */\nfunction mountAxiosRequest(uri, requestObj) {\n  var axiosObj = _objectSpread({\n    url: \"\".concat(uri).concat(requestObj.path),\n    method: requestObj.method,\n    data: requestObj.body,\n    params: requestObj.params,\n    maxContentLength: requestObj.maxContentLength,\n    paramsSerializer: function paramsSerializer(p) {\n      return qs_1.default.stringify(p);\n    },\n    headers: _objectSpread({}, requestObj.headers)\n  }, requestObj.overwriteAxiosConfig);\n  return axiosObj;\n}\n/**\r\n * Abstract class to wrap all TagoIO SDK Modules\r\n * @internal\r\n */\nvar TagoIOModule = /*#__PURE__*/function () {\n  function TagoIOModule(params) {\n    _classCallCheck(this, TagoIOModule);\n    this.params = {};\n    this.params = params;\n    this.validateParams();\n  }\n  _createClass(TagoIOModule, [{\n    key: \"validateParams\",\n    value: function validateParams() {\n      if (!this.params) {\n        throw new Error(\"Invalid Params\");\n      }\n      if (!this.params.token) {\n        throw new Error(\"Invalid Token\");\n      }\n      // if (this.params.options && typeof this.params.options !== \"object\") {\n      //   throw new Error(\"Invalid Params\");\n      // }\n    }\n  }, {\n    key: \"doRequest\",\n    value: function () {\n      var _doRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestObj) {\n        var _ref;\n        var apiURI, axiosObj, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                apiURI = (_ref = (0, regions_1.default)(this.params.region)) === null || _ref === void 0 ? void 0 : _ref.api;\n                if (apiURI) {\n                  _context.next = 3;\n                  break;\n                }\n                throw new Error(\"Invalid region\");\n              case 3:\n                axiosObj = mountAxiosRequest(apiURI, requestObj);\n                axiosObj.headers = _objectSpread({\n                  token: this.params.token\n                }, axiosObj.headers);\n                _context.next = 7;\n                return (0, apiRequest_1.default)(axiosObj, requestObj.cacheTTL);\n              case 7:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function doRequest(_x) {\n        return _doRequest.apply(this, arguments);\n      }\n      return doRequest;\n    }()\n  }], [{\n    key: \"doRequestAnonymous\",\n    value: function () {\n      var _doRequestAnonymous = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(requestObj, region) {\n        var _ref2;\n        var apiURI, axiosObj, result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                apiURI = (_ref2 = (0, regions_1.default)(region)) === null || _ref2 === void 0 ? void 0 : _ref2.api;\n                if (apiURI) {\n                  _context2.next = 3;\n                  break;\n                }\n                throw new Error(\"Invalid region\");\n              case 3:\n                axiosObj = mountAxiosRequest(apiURI, requestObj);\n                _context2.next = 6;\n                return (0, apiRequest_1.default)(axiosObj, requestObj.cacheTTL);\n              case 6:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      function doRequestAnonymous(_x2, _x3) {\n        return _doRequestAnonymous.apply(this, arguments);\n      }\n      return doRequestAnonymous;\n    }()\n  }]);\n  return TagoIOModule;\n}();\nexports.default = TagoIOModule;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AACA;AACA;AACA;AA6CA;;;;;;AAMA,SAASA,iBAAiB,CAACC,GAAW,EAAEC,UAA2B;EACjE,IAAMC,QAAQ;IACZC,GAAG,YAAKH,GAAG,SAAGC,UAAU,CAACG,IAAI,CAAE;IAC/BC,MAAM,EAAEJ,UAAU,CAACI,MAAM;IACzBC,IAAI,EAAEL,UAAU,CAACM,IAAI;IACrBC,MAAM,EAAEP,UAAU,CAACO,MAAM;IACzBC,gBAAgB,EAAER,UAAU,CAACQ,gBAAgB;IAC7CC,gBAAgB,EAAE,0BAACC,CAAC;MAAA,OAAKC,YAAE,CAACC,SAAS,CAACF,CAAC,CAAC;IAAA;IACxCG,OAAO,oBACFb,UAAU,CAACa,OAAO;EACtB,GACEb,UAAU,CAACc,oBAAoB,CACnC;EAED,OAAOb,QAAQ;AACjB;AAEA;;;;AAAA,IAIec,YAAY;EAGzB,sBAAYR,MAAS;IAAA;IAFX,WAAM,GAAG,EAAO;IAGxB,IAAI,CAACA,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACS,cAAc,EAAE;EACvB;EAAC;IAAA;IAAA,OAEO,0BAAc;MACpB,IAAI,CAAC,IAAI,CAACT,MAAM,EAAE;QAChB,MAAM,IAAIU,KAAK,CAAC,gBAAgB,CAAC;;MAGnC,IAAI,CAAC,IAAI,CAACV,MAAM,CAACW,KAAK,EAAE;QACtB,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;;MAGlC;MACA;MACA;IACF;EAAC;IAAA;IAAA;MAAA,4EAES,iBAAoBjB,UAA2B;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACjDmB,MAAM,WAAG,qBAAO,EAAC,IAAI,CAACZ,MAAM,CAACa,MAAM,CAAC,yCAA3B,KAA6BC,GAAG;gBAAA,IAC1CF,MAAM;kBAAA;kBAAA;gBAAA;gBAAA,MACH,IAAIF,KAAK,CAAC,gBAAgB,CAAC;cAAA;gBAG7BhB,QAAQ,GAAGH,iBAAiB,CAACqB,MAAM,EAAEnB,UAAU,CAAC;gBACtDC,QAAQ,CAACY,OAAO;kBACdK,KAAK,EAAE,IAAI,CAACX,MAAM,CAACW;gBAAK,GACrBjB,QAAQ,CAACY,OAAO,CACpB;gBAAC;gBAAA,OAEmB,wBAAU,EAACZ,QAAQ,EAAED,UAAU,CAACsB,QAAQ,CAAC;cAAA;gBAAxDC,MAAM;gBAAA,iCAELA,MAAqB;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAC7B;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,qFAES,kBAAoCvB,UAA2B,EAAEoB,MAAgB;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACnFD,MAAM,YAAG,qBAAO,EAACC,MAAM,CAAC,0CAAf,MAAiBC,GAAG;gBAAA,IAC9BF,MAAM;kBAAA;kBAAA;gBAAA;gBAAA,MACH,IAAIF,KAAK,CAAC,gBAAgB,CAAC;cAAA;gBAG7BhB,QAAQ,GAAGH,iBAAiB,CAACqB,MAAM,EAAEnB,UAAU,CAAC;gBAAA;gBAAA,OAEjC,wBAAU,EAACC,QAAQ,EAAED,UAAU,CAACsB,QAAQ,CAAC;cAAA;gBAAxDC,MAAM;gBAAA,kCAELA,MAAqB;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAC7B;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA;AAGHC,kBAAeT,YAAY","names":["mountAxiosRequest","uri","requestObj","axiosObj","url","path","method","data","body","params","maxContentLength","paramsSerializer","p","qs_1","stringify","headers","overwriteAxiosConfig","TagoIOModule","validateParams","Error","token","apiURI","region","api","cacheTTL","result","exports"],"sources":["C:\\Users\\kaique\\Documents\\SGA\\widget\\project\\node_modules\\@tago-io\\sdk\\src\\common\\TagoIOModule.ts"],"sourcesContent":["import { AxiosRequestConfig, Method } from \"axios\";\r\nimport qs from \"qs\";\r\nimport apiRequest from \"../infrastructure/apiRequest\";\r\nimport regions, { Regions } from \"../regions\";\r\nimport { RefType, GenericID } from \"./common.types\";\r\n\r\ninterface GenericModuleParams {\r\n  token?: string;\r\n  region?: Regions;\r\n  // options?: Object;\r\n}\r\n\r\ninterface ShareModuleParams extends GenericModuleParams {\r\n  type: RefType;\r\n}\r\n\r\ninterface TokenModuleParams extends GenericModuleParams {\r\n  path: string;\r\n  id?: GenericID;\r\n}\r\n\r\ninterface ConnectorModuleParams extends GenericModuleParams {\r\n  details?: boolean;\r\n}\r\n\r\ninterface AuthorizationModuleParams extends GenericModuleParams {\r\n  details?: boolean;\r\n}\r\n\r\n/**\r\n * Object for generate request params\r\n * @internal\r\n */\r\ninterface doRequestParams {\r\n  path: string;\r\n  method: Method;\r\n  body?: any;\r\n  params?: any;\r\n  headers?: any;\r\n  overwriteAxiosConfig?: AxiosRequestConfig;\r\n  maxContentLength?: number;\r\n  /**\r\n   * Cache for request\r\n   * default: false (disabled)\r\n   */\r\n  cacheTTL?: number;\r\n}\r\n\r\n/**\r\n * Create a Object for Axios\r\n * @internal\r\n * @param uri URI\r\n * @param requestObj doRequestParams\r\n */\r\nfunction mountAxiosRequest(uri: string, requestObj: doRequestParams): AxiosRequestConfig {\r\n  const axiosObj: AxiosRequestConfig = {\r\n    url: `${uri}${requestObj.path}`,\r\n    method: requestObj.method,\r\n    data: requestObj.body,\r\n    params: requestObj.params,\r\n    maxContentLength: requestObj.maxContentLength,\r\n    paramsSerializer: (p) => qs.stringify(p),\r\n    headers: {\r\n      ...requestObj.headers,\r\n    },\r\n    ...requestObj.overwriteAxiosConfig,\r\n  };\r\n\r\n  return axiosObj;\r\n}\r\n\r\n/**\r\n * Abstract class to wrap all TagoIO SDK Modules\r\n * @internal\r\n */\r\nabstract class TagoIOModule<T extends GenericModuleParams> {\r\n  protected params = {} as T;\r\n\r\n  constructor(params: T) {\r\n    this.params = params;\r\n\r\n    this.validateParams();\r\n  }\r\n\r\n  private validateParams() {\r\n    if (!this.params) {\r\n      throw new Error(\"Invalid Params\");\r\n    }\r\n\r\n    if (!this.params.token) {\r\n      throw new Error(\"Invalid Token\");\r\n    }\r\n\r\n    // if (this.params.options && typeof this.params.options !== \"object\") {\r\n    //   throw new Error(\"Invalid Params\");\r\n    // }\r\n  }\r\n\r\n  protected async doRequest<TR>(requestObj: doRequestParams): Promise<TR> {\r\n    const apiURI = regions(this.params.region)?.api;\r\n    if (!apiURI) {\r\n      throw new Error(\"Invalid region\");\r\n    }\r\n\r\n    const axiosObj = mountAxiosRequest(apiURI, requestObj);\r\n    axiosObj.headers = {\r\n      token: this.params.token,\r\n      ...axiosObj.headers,\r\n    };\r\n\r\n    const result = await apiRequest(axiosObj, requestObj.cacheTTL);\r\n\r\n    return result as Promise<TR>;\r\n  }\r\n\r\n  protected static async doRequestAnonymous<TR>(requestObj: doRequestParams, region?: Regions): Promise<TR> {\r\n    const apiURI = regions(region)?.api;\r\n    if (!apiURI) {\r\n      throw new Error(\"Invalid region\");\r\n    }\r\n\r\n    const axiosObj = mountAxiosRequest(apiURI, requestObj);\r\n\r\n    const result = await apiRequest(axiosObj, requestObj.cacheTTL);\r\n\r\n    return result as Promise<TR>;\r\n  }\r\n}\r\n\r\nexport default TagoIOModule;\r\nexport {\r\n  GenericModuleParams,\r\n  ShareModuleParams,\r\n  doRequestParams,\r\n  TokenModuleParams,\r\n  ConnectorModuleParams,\r\n  AuthorizationModuleParams,\r\n};\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}