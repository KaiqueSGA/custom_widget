"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const angular_1 = require("./angular");
const areachart_1 = require("./areachart");
const card_1 = require("./card");
const clock_1 = require("./clock");
const compose_1 = require("./compose");
const custom_1 = require("./custom");
const cylinder_1 = require("./cylinder");
const dial_1 = require("./dial");
const display_1 = require("./display");
const dynamic_table_1 = require("./dynamic_table");
const grainbin_1 = require("./grainbin");
const heatmap_1 = require("./heatmap");
const horizontalbarchart_1 = require("./horizontalbarchart");
const icon_1 = require("./icon");
const image_1 = require("./image");
const imagemarker_1 = require("./imagemarker");
const inputcontrol_1 = require("./inputcontrol");
const inputform_1 = require("./inputform");
const keypad_1 = require("./keypad");
const linechart_1 = require("./linechart");
const map_1 = require("./map");
const multipleaxischart_1 = require("./multipleaxischart");
const note_1 = require("./note");
const pie_1 = require("./pie");
const pushbutton_1 = require("./pushbutton");
const semidonut_1 = require("./semidonut");
const solid_1 = require("./solid");
const statictable_1 = require("./statictable");
const stepbutton_1 = require("./stepbutton");
const tile_1 = require("./tile");
const verticalbarchart_1 = require("./verticalbarchart");
const video_1 = require("./video");
const vumeter_1 = require("./vumeter");
const TagoIOModule_1 = __importDefault(require("../../common/TagoIOModule"));
class Migration extends TagoIOModule_1.default {
    static convertImagerMarkerData(widget, widgetData) {
        return (0, imagemarker_1.convertLayerData)(widget, widgetData);
    }
    /**
     * Returns if the widget type is supported by migration
     */
    static hasMigrate(widget) {
        const { type } = widget || {};
        const { gauge_type, chart_type, layer_type } = widget?.display || {};
        switch (type) {
            case "pie":
                return true;
            case "note":
                return true;
            case "cylinder":
                return true;
            case "display":
                return true;
            case "table":
                return true;
            case "iframe":
                return true;
            case "dial":
                return true;
            case "gauge":
                if (gauge_type === "angular") {
                    return true;
                }
                else if (gauge_type === "solid") {
                    return true;
                }
                else if (gauge_type === "clock") {
                    return true;
                }
                else if (gauge_type === "vu_meter") {
                    return true;
                }
                else if (gauge_type === "dial") {
                    return true;
                }
                return false;
            case "chart":
                if (chart_type === "spline") {
                    return true;
                }
                else if (chart_type === "area") {
                    return true;
                }
                else if (chart_type === "bar_horizontal") {
                    return true;
                }
                else if (chart_type === "bar_vertical") {
                    return true;
                }
                else if (chart_type === "multiple_axis") {
                    return true;
                }
                return false;
            case "card":
                return true;
            case "tile":
                return true;
            case "keypad":
                return true;
            case "incremental_button":
            case "step_button":
                return true;
            case "push_button":
                return true;
            case "input":
                return true;
            case "icon":
                return true;
            case "map":
                return true;
            case "media":
            case "image":
                return true;
            case "layer":
                if (layer_type === "heat_map") {
                    return true;
                }
                else if (layer_type === "image_marker") {
                    return true;
                }
                else if (layer_type === "compose") {
                    return true;
                }
                else if (layer_type === "virtualization_layer") {
                    return true;
                }
                return false;
            case "grainbin":
                return true;
            default:
                return false;
        }
    }
    /**
     * Check if a widget structure is old or not,
     * based on his type
     */
    static isOldStructure(widget) {
        const { type } = widget || {};
        const { gauge_type, chart_type, input_type, layer_type, type_media } = widget?.display || {};
        switch (type) {
            case "pie":
                return widget?.display?.pie_type === "circle" ? (0, pie_1.isOldStructure)(widget) : (0, semidonut_1.isOldStructure)(widget);
            case "note":
                return (0, note_1.isOldStructure)(widget);
            case "cylinder":
                return (0, cylinder_1.isOldStructure)(widget);
            case "display":
                return (0, display_1.isOldStructure)(widget);
            case "table":
                return widget?.display?.table_type === "dynamic"
                    ? (0, dynamic_table_1.isOldStructure)(widget)
                    : (0, statictable_1.isOldStructure)(widget);
            case "iframe":
                return (0, custom_1.isOldStructure)(widget);
            case "dial":
                return (0, dial_1.isOldStructure)(widget);
            case "gauge":
                if (gauge_type === "angular") {
                    return (0, angular_1.isOldStructure)(widget);
                }
                else if (gauge_type === "solid") {
                    return (0, solid_1.isOldStructure)(widget);
                }
                else if (gauge_type === "clock") {
                    return (0, clock_1.isOldStructure)(widget);
                }
                else if (gauge_type === "vu_meter") {
                    return (0, vumeter_1.isOldStructure)(widget);
                }
                else if (gauge_type === "dial") {
                    return (0, dial_1.isOldStructure)(widget);
                }
                return widget;
            case "chart":
                if (chart_type === "spline") {
                    return (0, linechart_1.isOldStructure)(widget);
                }
                else if (chart_type === "area") {
                    return (0, areachart_1.isOldStructure)(widget);
                }
                else if (chart_type === "bar_horizontal") {
                    return (0, horizontalbarchart_1.isOldStructure)(widget);
                }
                else if (chart_type === "bar_vertical") {
                    return (0, verticalbarchart_1.isOldStructure)(widget);
                }
                else if (chart_type === "multiple_axis") {
                    return (0, multipleaxischart_1.isOldStructure)(widget);
                }
                return widget;
            case "card":
                return (0, card_1.isOldStructure)(widget);
            case "tile":
                return (0, tile_1.isOldStructure)(widget);
            case "keypad":
                return (0, keypad_1.isOldStructure)(widget);
            case "incremental_button":
            case "step_button":
                return (0, stepbutton_1.isOldStructure)(widget);
            case "push_button":
                return (0, pushbutton_1.isOldStructure)(widget);
            case "input":
                return input_type === "form" ? (0, inputform_1.isOldStructure)(widget) : (0, inputcontrol_1.isOldStructure)(widget);
            case "icon":
                return (0, icon_1.isOldStructure)(widget);
            case "map":
                return (0, map_1.isOldStructure)(widget);
            case "media":
            case "image":
                if (type_media === "static_video") {
                    return (0, video_1.isOldStructure)(widget);
                }
                return (0, image_1.isOldStructure)(widget);
            case "layer":
                if (layer_type === "heat_map") {
                    return (0, heatmap_1.isOldStructure)(widget);
                }
                else if (layer_type === "image_marker") {
                    return (0, imagemarker_1.isOldStructure)(widget);
                }
                else if (layer_type === "compose") {
                    return (0, compose_1.isOldStructure)(widget);
                }
                else if (layer_type === "virtualization_layer") {
                    return (0, compose_1.isOldStructure)(widget);
                }
                return widget;
            case "grainbin":
                return (0, grainbin_1.isOldStructure)(widget);
            default:
                return false;
        }
    }
    /**
     * Convert widget old structure to new one
     */
    static convertWidget(widget) {
        const { type } = widget || {};
        const { gauge_type, layer_type, chart_type, input_type, type_media } = widget?.display || {};
        switch (type) {
            case "pie":
                return widget?.display?.pie_type === "circle" ? (0, pie_1.convert)(widget) : (0, semidonut_1.convert)(widget);
            case "note":
                return (0, note_1.convert)(widget);
            case "cylinder":
                return (0, cylinder_1.convert)(widget);
            case "display":
                return (0, display_1.convert)(widget);
            case "table":
                return widget?.display?.table_type === "dynamic" ? (0, dynamic_table_1.convert)(widget) : (0, statictable_1.convert)(widget);
            case "iframe":
                return (0, custom_1.convert)(widget);
            case "dial":
                return (0, dial_1.convert)(widget);
            case "gauge":
                if (gauge_type === "angular") {
                    return (0, angular_1.convert)(widget);
                }
                else if (gauge_type === "solid") {
                    return (0, solid_1.convert)(widget);
                }
                else if (gauge_type === "clock") {
                    return (0, clock_1.convert)(widget);
                }
                else if (gauge_type === "vu_meter") {
                    return (0, vumeter_1.convert)(widget);
                }
                else if (gauge_type === "dial") {
                    return (0, dial_1.convert)(widget);
                }
                return widget;
            case "chart":
                if (chart_type === "spline") {
                    return (0, linechart_1.convert)(widget);
                }
                else if (chart_type === "area") {
                    return (0, areachart_1.convert)(widget);
                }
                else if (chart_type === "bar_horizontal") {
                    return (0, horizontalbarchart_1.convert)(widget);
                }
                else if (chart_type === "bar_vertical") {
                    return (0, verticalbarchart_1.convert)(widget);
                }
                else if (chart_type === "multiple_axis") {
                    return (0, multipleaxischart_1.convert)(widget);
                }
                return widget;
            case "card":
                return (0, card_1.convert)(widget);
            case "tile":
                return (0, tile_1.convert)(widget);
            case "keypad":
                return (0, keypad_1.convert)(widget);
            case "incremental_button":
            case "step_button":
                return (0, stepbutton_1.convert)(widget);
            case "push_button":
                return (0, pushbutton_1.convert)(widget);
            case "input":
                return input_type === "form" ? (0, inputform_1.convert)(widget) : (0, inputcontrol_1.convert)(widget);
            case "icon":
                return (0, icon_1.convert)(widget);
            case "map":
                return (0, map_1.convert)(widget);
            case "media":
            case "image":
                if (type_media === "static_video") {
                    return (0, video_1.convert)(widget);
                }
                return (0, image_1.convert)(widget);
            case "layer":
                if (layer_type === "heat_map") {
                    return (0, heatmap_1.convert)(widget);
                }
                else if (layer_type === "image_marker") {
                    return (0, imagemarker_1.convert)(widget);
                }
                else if (layer_type === "compose") {
                    return (0, compose_1.convert)(widget);
                }
                else if (layer_type === "virtualization_layer") {
                    return (0, compose_1.convert)(widget);
                }
                return widget;
            case "grainbin":
                return (0, grainbin_1.convert)(widget);
            default:
                return widget;
        }
    }
}
exports.default = Migration;
//# sourceMappingURL=Migration.js.map